name: ci

on:
  push:
    paths:
      - 'legacy/**'
    tags:
      - 'legacy*'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SQUARE_SANDBOX_TOKEN: ${{ secrets.TEST_SQUARE_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Bootstrap poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - -y --version 1.5.1
      - name: Install dependencies
        working-directory: ./legacy
        run: poetry install

      - name: Test
        working-directory: ./legacy
        run: poetry run pytest -rP tests

  publish:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/legacy')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Bootstrap poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - -y --version 1.5.1
      - name: Install dependencies
        working-directory: ./legacy
        run: poetry install
      - name: Publish to pypi
        working-directory: ./legacy
        run: |
          poetry config repositories.remote https://upload.pypi.org/legacy/
          poetry --no-interaction -v publish --build --repository remote -u __token__ -p "PYPI_SQUAREUP_ACCESS_TOKEN"
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_SQUAREUP_ACCESS_TOKEN }}
