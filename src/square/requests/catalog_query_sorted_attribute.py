# This file was auto-generated by Fern from our API Definition.

import typing_extensions
import typing_extensions
import typing
from ..types.sort_order import SortOrder


class CatalogQuerySortedAttributeParams(typing_extensions.TypedDict):
    """
    The query expression to specify the key to sort search results.
    """

    attribute_name: str
    """
    The attribute whose value is used as the sort key.
    """

    initial_attribute_value: typing_extensions.NotRequired[typing.Optional[str]]
    """
    The first attribute value to be returned by the query. Ascending sorts will return only
    objects with this value or greater, while descending sorts will return only objects with this value
    or less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts).
    """

    sort_order: typing_extensions.NotRequired[SortOrder]
    """
    The desired sort order, `"ASC"` (ascending) or `"DESC"` (descending).
    See [SortOrder](#type-sortorder) for possible values
    """
