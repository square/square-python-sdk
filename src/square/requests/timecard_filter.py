# This file was auto-generated by Fern from our API Definition.

import typing_extensions
import typing_extensions
import typing
from ..types.timecard_filter_status import TimecardFilterStatus
from .time_range import TimeRangeParams
from .timecard_workday import TimecardWorkdayParams


class TimecardFilterParams(typing_extensions.TypedDict):
    """
    Defines a filter used in a search for `Timecard` records. `AND` logic is
    used by Square's servers to apply each filter property specified.
    """

    location_ids: typing_extensions.NotRequired[typing.Optional[typing.Sequence[str]]]
    """
    Fetch timecards for the specified location.
    """

    status: typing_extensions.NotRequired[TimecardFilterStatus]
    """
    Fetch a `Timecard` instance by `Timecard.status`.
    See [TimecardFilterStatus](#type-timecardfilterstatus) for possible values
    """

    start: typing_extensions.NotRequired[TimeRangeParams]
    """
    Fetch `Timecard` instances that start in the time range - Inclusive.
    """

    end: typing_extensions.NotRequired[TimeRangeParams]
    """
    Fetch the `Timecard` instances that end in the time range - Inclusive.
    """

    workday: typing_extensions.NotRequired[TimecardWorkdayParams]
    """
    Fetch the `Timecard` instances based on the workday date range.
    """

    team_member_ids: typing_extensions.NotRequired[typing.Optional[typing.Sequence[str]]]
    """
    Fetch timecards for the specified team members.
    """
