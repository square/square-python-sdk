# This file was auto-generated by Fern from our API Definition.

import typing_extensions
import typing_extensions
from ..types.subscription_action_type import SubscriptionActionType
import typing
from .phase import PhaseParams


class SubscriptionActionParams(typing_extensions.TypedDict):
    """
    Represents an action as a pending change to a subscription.
    """

    id: typing_extensions.NotRequired[str]
    """
    The ID of an action scoped to a subscription.
    """

    type: typing_extensions.NotRequired[SubscriptionActionType]
    """
    The type of the action.
    See [SubscriptionActionType](#type-subscriptionactiontype) for possible values
    """

    effective_date: typing_extensions.NotRequired[typing.Optional[str]]
    """
    The `YYYY-MM-DD`-formatted date when the action occurs on the subscription.
    """

    monthly_billing_anchor_date: typing_extensions.NotRequired[typing.Optional[int]]
    """
    The new billing anchor day value, for a `CHANGE_BILLING_ANCHOR_DATE` action.
    """

    phases: typing_extensions.NotRequired[typing.Optional[typing.Sequence[PhaseParams]]]
    """
    A list of Phases, to pass phase-specific information used in the swap.
    """

    new_plan_variation_id: typing_extensions.NotRequired[typing.Optional[str]]
    """
    The target subscription plan variation that a subscription switches to, for a `SWAP_PLAN` action.
    """
