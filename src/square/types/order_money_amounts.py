# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .money import Money
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class OrderMoneyAmounts(UncheckedBaseModel):
    """
    A collection of various money amounts.
    """

    total_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The total money.
    """

    tax_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The money associated with taxes.
    """

    discount_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The money associated with discounts.
    """

    tip_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The money associated with tips.
    """

    service_charge_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The money associated with service charges.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
