# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .loyalty_event_type import LoyaltyEventType
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LoyaltyEventTypeFilter(UncheckedBaseModel):
    """
    Filter events by event type.
    """

    types: typing.List[LoyaltyEventType] = pydantic.Field()
    """
    The loyalty event types used to filter the result.
    If multiple values are specified, the endpoint uses a 
    logical OR to combine them.
    See [LoyaltyEventType](#type-loyaltyeventtype) for possible values
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
