# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .break_type import BreakType
from .error import Error


class CreateBreakTypeResponse(UncheckedBaseModel):
    """
    The response to the request to create a `BreakType`. The response contains
    the created `BreakType` object and might contain a set of `Error` objects if
    the request resulted in errors.
    """

    break_type: typing.Optional[BreakType] = pydantic.Field(default=None)
    """
    The `BreakType` that was created by the request.
    """

    errors: typing.Optional[typing.List[Error]] = pydantic.Field(default=None)
    """
    Any errors that occurred during the request.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
