# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .error import Error
import pydantic
from .dispute import Dispute
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class GetDisputeResponse(UncheckedBaseModel):
    """
    Defines fields in a `RetrieveDispute` response.
    """

    errors: typing.Optional[typing.List[Error]] = pydantic.Field(default=None)
    """
    Information about errors encountered during the request.
    """

    dispute: typing.Optional[Dispute] = pydantic.Field(default=None)
    """
    Details about the requested `Dispute`.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
