# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from .custom_attribute_definition_visibility import CustomAttributeDefinitionVisibility
from .custom_attribute_definition import CustomAttributeDefinition
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class CustomAttribute(UncheckedBaseModel):
    """
    A custom attribute value. Each custom attribute value has a corresponding
    `CustomAttributeDefinition` object.
    """

    key: typing.Optional[str] = pydantic.Field(default=None)
    """
    The identifier
    of the custom attribute definition and its corresponding custom attributes. This value
    can be a simple key, which is the key that is provided when the custom attribute definition
    is created, or a qualified key, if the requesting
    application is not the definition owner. The qualified key consists of the application ID
    of the custom attribute definition owner
    followed by the simple key that was provided when the definition was created. It has the
    format application_id:simple key.
    
    The value for a simple key can contain up to 60 alphanumeric characters, periods (.),
    underscores (_), and hyphens (-).
    """

    value: typing.Optional[typing.Optional[typing.Any]] = None
    version: typing.Optional[int] = pydantic.Field(default=None)
    """
    Read only. The current version of the custom attribute. This field is incremented when the custom attribute is changed.
    When updating an existing custom attribute value, you can provide this field
    and specify the current version of the custom attribute to enable
    [optimistic concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency).
    This field can also be used to enforce strong consistency for reads. For more information about strong consistency for reads,
    see [Custom Attributes Overview](https://developer.squareup.com/docs/devtools/customattributes/overview).
    """

    visibility: typing.Optional[CustomAttributeDefinitionVisibility] = pydantic.Field(default=None)
    """
    A copy of the `visibility` field value for the associated custom attribute definition.
    See [CustomAttributeDefinitionVisibility](#type-customattributedefinitionvisibility) for possible values
    """

    definition: typing.Optional[CustomAttributeDefinition] = pydantic.Field(default=None)
    """
    A copy of the associated custom attribute definition object. This field is only set when
    the optional field is specified on the request.
    """

    updated_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    The timestamp that indicates when the custom attribute was created or was most recently
    updated, in RFC 3339 format.
    """

    created_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    The timestamp that indicates when the custom attribute was created, in RFC 3339 format.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
