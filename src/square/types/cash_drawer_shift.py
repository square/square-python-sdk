# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from .cash_drawer_shift_state import CashDrawerShiftState
from .money import Money
from .cash_drawer_device import CashDrawerDevice
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class CashDrawerShift(UncheckedBaseModel):
    """
    This model gives the details of a cash drawer shift.
    The cash_payment_money, cash_refund_money, cash_paid_in_money,
    and cash_paid_out_money fields are all computed by summing their respective
    event types.
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The shift unique ID.
    """

    state: typing.Optional[CashDrawerShiftState] = pydantic.Field(default=None)
    """
    The shift current state.
    See [CashDrawerShiftState](#type-cashdrawershiftstate) for possible values
    """

    opened_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    The time when the shift began, in ISO 8601 format.
    """

    ended_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    The time when the shift ended, in ISO 8601 format.
    """

    closed_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    The time when the shift was closed, in ISO 8601 format.
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    The free-form text description of a cash drawer by an employee.
    """

    opened_cash_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The amount of money in the cash drawer at the start of the shift.
    The amount must be greater than or equal to zero.
    """

    cash_payment_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The amount of money added to the cash drawer from cash payments.
    This is computed by summing all events with the types CASH_TENDER_PAYMENT and
    CASH_TENDER_CANCELED_PAYMENT. The amount is always greater than or equal to
    zero.
    """

    cash_refunds_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The amount of money removed from the cash drawer from cash refunds.
    It is computed by summing the events of type CASH_TENDER_REFUND. The amount
    is always greater than or equal to zero.
    """

    cash_paid_in_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The amount of money added to the cash drawer for reasons other than cash
    payments. It is computed by summing the events of type PAID_IN. The amount is
    always greater than or equal to zero.
    """

    cash_paid_out_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The amount of money removed from the cash drawer for reasons other than
    cash refunds. It is computed by summing the events of type PAID_OUT. The amount
    is always greater than or equal to zero.
    """

    expected_cash_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The amount of money that should be in the cash drawer at the end of the
    shift, based on the shift's other money amounts.
    This can be negative if employees have not correctly recorded all the events
    on the cash drawer.
    cash_paid_out_money is a summation of amounts from cash_payment_money (zero
    or positive), cash_refunds_money (zero or negative), cash_paid_in_money (zero
    or positive), and cash_paid_out_money (zero or negative) event types.
    """

    closed_cash_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The amount of money found in the cash drawer at the end of the shift
    by an auditing employee. The amount should be positive.
    """

    device: typing.Optional[CashDrawerDevice] = pydantic.Field(default=None)
    """
    The device running Square Point of Sale that was connected to the cash drawer.
    """

    created_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    The shift start time in RFC 3339 format.
    """

    updated_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    The shift updated at time in RFC 3339 format.
    """

    location_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the location the cash drawer shift belongs to.
    """

    team_member_ids: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    The IDs of all team members that were logged into Square Point of Sale at any
    point while the cash drawer shift was open.
    """

    opening_team_member_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the team member that started the cash drawer shift.
    """

    ending_team_member_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the team member that ended the cash drawer shift.
    """

    closing_team_member_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the team member that closed the cash drawer shift by auditing
    the cash drawer contents.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
