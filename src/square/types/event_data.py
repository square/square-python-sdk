# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class EventData(UncheckedBaseModel):
    type: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name of the affected objectâ€™s type.
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the affected object.
    """

    deleted: typing.Optional[bool] = pydantic.Field(default=None)
    """
    This is true if the affected object has been deleted; otherwise, it's absent.
    """

    object: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    An object containing fields and values relevant to the event. It is absent if the affected object has been deleted.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
