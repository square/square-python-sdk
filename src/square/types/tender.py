# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from .money import Money
from .tender_type import TenderType
from .tender_card_details import TenderCardDetails
from .tender_cash_details import TenderCashDetails
from .tender_bank_account_details import TenderBankAccountDetails
from .tender_buy_now_pay_later_details import TenderBuyNowPayLaterDetails
from .tender_square_account_details import TenderSquareAccountDetails
from .additional_recipient import AdditionalRecipient
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Tender(UncheckedBaseModel):
    """
    Represents a tender (i.e., a method of payment) used in a Square transaction.
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The tender's unique ID. It is the associated payment ID.
    """

    location_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the transaction's associated location.
    """

    transaction_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the tender's associated transaction.
    """

    created_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    The timestamp for when the tender was created, in RFC 3339 format.
    """

    note: typing.Optional[str] = pydantic.Field(default=None)
    """
    An optional note associated with the tender at the time of payment.
    """

    amount_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The total amount of the tender, including `tip_money`. If the tender has a `payment_id`,
    the `total_money` of the corresponding [Payment](entity:Payment) will be equal to the
    `amount_money` of the tender.
    """

    tip_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The tip's amount of the tender.
    """

    processing_fee_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The amount of any Square processing fees applied to the tender.
    
    This field is not immediately populated when a new transaction is created.
    It is usually available after about ten seconds.
    """

    customer_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    If the tender is associated with a customer or represents a customer's card on file,
    this is the ID of the associated customer.
    """

    type: TenderType = pydantic.Field()
    """
    The type of tender, such as `CARD` or `CASH`.
    See [TenderType](#type-tendertype) for possible values
    """

    card_details: typing.Optional[TenderCardDetails] = pydantic.Field(default=None)
    """
    The details of the card tender.
    
    This value is present only if the value of `type` is `CARD`.
    """

    cash_details: typing.Optional[TenderCashDetails] = pydantic.Field(default=None)
    """
    The details of the cash tender.
    
    This value is present only if the value of `type` is `CASH`.
    """

    bank_account_details: typing.Optional[TenderBankAccountDetails] = pydantic.Field(default=None)
    """
    The details of the bank account tender.
    
    This value is present only if the value of `type` is `BANK_ACCOUNT`.
    """

    buy_now_pay_later_details: typing.Optional[TenderBuyNowPayLaterDetails] = pydantic.Field(default=None)
    """
    The details of a Buy Now Pay Later tender.
    
    This value is present only if the value of `type` is `BUY_NOW_PAY_LATER`.
    """

    square_account_details: typing.Optional[TenderSquareAccountDetails] = pydantic.Field(default=None)
    """
    The details of a Square Account tender.
    
    This value is present only if the value of `type` is `SQUARE_ACCOUNT`.
    """

    additional_recipients: typing.Optional[typing.List[AdditionalRecipient]] = pydantic.Field(default=None)
    """
    Additional recipients (other than the merchant) receiving a portion of this tender.
    For example, fees assessed on the purchase by a third party integration.
    """

    payment_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the [Payment](entity:Payment) that corresponds to this tender.
    This value is only present for payments created with the v2 Payments API.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
