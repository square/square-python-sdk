# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .card import Card


class DestinationDetailsCardRefundDetails(UncheckedBaseModel):
    card: typing.Optional[Card] = pydantic.Field(default=None)
    """
    The card's non-confidential details.
    """

    entry_method: typing.Optional[str] = pydantic.Field(default=None)
    """
    The method used to enter the card's details for the refund. The method can be
    `KEYED`, `SWIPED`, `EMV`, `ON_FILE`, or `CONTACTLESS`.
    """

    auth_result_code: typing.Optional[str] = pydantic.Field(default=None)
    """
    The authorization code provided by the issuer when a refund is approved.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
