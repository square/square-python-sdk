# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .error import Error
import pydantic
from .event import Event
from .event_metadata import EventMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class SearchEventsResponse(UncheckedBaseModel):
    """
    Defines the fields that are included in the response body of
    a request to the [SearchEvents](api-endpoint:Events-SearchEvents) endpoint.

    Note: if there are errors processing the request, the events field will not be
    present.
    """

    errors: typing.Optional[typing.List[Error]] = pydantic.Field(default=None)
    """
    Information on errors encountered during the request.
    """

    events: typing.Optional[typing.List[Event]] = pydantic.Field(default=None)
    """
    The list of [Event](entity:Event)s returned by the search.
    """

    metadata: typing.Optional[typing.List[EventMetadata]] = pydantic.Field(default=None)
    """
    Contains the metadata of an event. For more information, see [Event](entity:Event).
    """

    cursor: typing.Optional[str] = pydantic.Field(default=None)
    """
    When a response is truncated, it includes a cursor that you can use in a subsequent request to fetch the next set of events. If empty, this is the final response.
    
    For more information, see [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
