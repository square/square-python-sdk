# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .search_events_filter import SearchEventsFilter
import pydantic
from .search_events_sort import SearchEventsSort
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class SearchEventsQuery(UncheckedBaseModel):
    """
    Contains query criteria for the search.
    """

    filter: typing.Optional[SearchEventsFilter] = pydantic.Field(default=None)
    """
    Criteria to filter events by.
    """

    sort: typing.Optional[SearchEventsSort] = pydantic.Field(default=None)
    """
    Criteria to sort events by.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
