# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
from .catalog_quick_amounts_settings_option import CatalogQuickAmountsSettingsOption
import pydantic
import typing
from .catalog_quick_amount import CatalogQuickAmount
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class CatalogQuickAmountsSettings(UncheckedBaseModel):
    """
    A parent Catalog Object model represents a set of Quick Amounts and the settings control the amounts.
    """

    option: CatalogQuickAmountsSettingsOption = pydantic.Field()
    """
    Represents the option seller currently uses on Quick Amounts.
    See [CatalogQuickAmountsSettingsOption](#type-catalogquickamountssettingsoption) for possible values
    """

    eligible_for_auto_amounts: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Represents location's eligibility for auto amounts
    The boolean should be consistent with whether there are AUTO amounts in the `amounts`.
    """

    amounts: typing.Optional[typing.List[CatalogQuickAmount]] = pydantic.Field(default=None)
    """
    Represents a set of Quick Amounts at this location.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
