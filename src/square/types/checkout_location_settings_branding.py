# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .checkout_location_settings_branding_header_type import CheckoutLocationSettingsBrandingHeaderType
import pydantic
from .checkout_location_settings_branding_button_shape import CheckoutLocationSettingsBrandingButtonShape
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class CheckoutLocationSettingsBranding(UncheckedBaseModel):
    header_type: typing.Optional[CheckoutLocationSettingsBrandingHeaderType] = pydantic.Field(default=None)
    """
    Show the location logo on the checkout page.
    See [HeaderType](#type-headertype) for possible values
    """

    button_color: typing.Optional[str] = pydantic.Field(default=None)
    """
    The HTML-supported hex color for the button on the checkout page (for example, "#FFFFFF").
    """

    button_shape: typing.Optional[CheckoutLocationSettingsBrandingButtonShape] = pydantic.Field(default=None)
    """
    The shape of the button on the checkout page.
    See [ButtonShape](#type-buttonshape) for possible values
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
