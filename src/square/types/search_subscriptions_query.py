# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .search_subscriptions_filter import SearchSubscriptionsFilter
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class SearchSubscriptionsQuery(UncheckedBaseModel):
    """
    Represents a query, consisting of specified query expressions, used to search for subscriptions.
    """

    filter: typing.Optional[SearchSubscriptionsFilter] = pydantic.Field(default=None)
    """
    A list of query expressions.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
