# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from .dispute_evidence_file import DisputeEvidenceFile
from .dispute_evidence_type import DisputeEvidenceType
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class DisputeEvidence(UncheckedBaseModel):
    evidence_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Square-generated ID of the evidence.
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Square-generated ID of the evidence.
    """

    dispute_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the dispute the evidence is associated with.
    """

    evidence_file: typing.Optional[DisputeEvidenceFile] = pydantic.Field(default=None)
    """
    Image, PDF, TXT
    """

    evidence_text: typing.Optional[str] = pydantic.Field(default=None)
    """
    Raw text
    """

    uploaded_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    The time when the evidence was uploaded, in RFC 3339 format.
    """

    evidence_type: typing.Optional[DisputeEvidenceType] = pydantic.Field(default=None)
    """
    The type of the evidence.
    See [DisputeEvidenceType](#type-disputeevidencetype) for possible values
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
