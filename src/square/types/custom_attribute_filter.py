# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from .range import Range
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class CustomAttributeFilter(UncheckedBaseModel):
    """
    Supported custom attribute query expressions for calling the
    [SearchCatalogItems](api-endpoint:Catalog-SearchCatalogItems)
    endpoint to search for items or item variations.
    """

    custom_attribute_definition_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    A query expression to filter items or item variations by matching their custom attributes'
    `custom_attribute_definition_id` property value against the the specified id.
    Exactly one of `custom_attribute_definition_id` or `key` must be specified.
    """

    key: typing.Optional[str] = pydantic.Field(default=None)
    """
    A query expression to filter items or item variations by matching their custom attributes'
    `key` property value against the specified key.
    Exactly one of `custom_attribute_definition_id` or `key` must be specified.
    """

    string_filter: typing.Optional[str] = pydantic.Field(default=None)
    """
    A query expression to filter items or item variations by matching their custom attributes'
    `string_value`  property value against the specified text.
    Exactly one of `string_filter`, `number_filter`, `selection_uids_filter`, or `bool_filter` must be specified.
    """

    number_filter: typing.Optional[Range] = pydantic.Field(default=None)
    """
    A query expression to filter items or item variations with their custom attributes
    containing a number value within the specified range.
    Exactly one of `string_filter`, `number_filter`, `selection_uids_filter`, or `bool_filter` must be specified.
    """

    selection_uids_filter: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    A query expression to filter items or item variations by matching  their custom attributes'
    `selection_uid_values` values against the specified selection uids.
    Exactly one of `string_filter`, `number_filter`, `selection_uids_filter`, or `bool_filter` must be specified.
    """

    bool_filter: typing.Optional[bool] = pydantic.Field(default=None)
    """
    A query expression to filter items or item variations by matching their custom attributes'
    `boolean_value` property values against the specified Boolean expression.
    Exactly one of `string_filter`, `number_filter`, `selection_uids_filter`, or `bool_filter` must be specified.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
