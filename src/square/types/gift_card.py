# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from .gift_card_type import GiftCardType
from .gift_card_gan_source import GiftCardGanSource
from .gift_card_status import GiftCardStatus
from .money import Money
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class GiftCard(UncheckedBaseModel):
    """
    Represents a Square gift card.
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Square-assigned ID of the gift card.
    """

    type: GiftCardType = pydantic.Field()
    """
    The gift card type.
    See [Type](#type-type) for possible values
    """

    gan_source: typing.Optional[GiftCardGanSource] = pydantic.Field(default=None)
    """
    The source that generated the gift card account number (GAN). The default value is `SQUARE`.
    See [GANSource](#type-gansource) for possible values
    """

    state: typing.Optional[GiftCardStatus] = pydantic.Field(default=None)
    """
    The current gift card state.
    See [Status](#type-status) for possible values
    """

    balance_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The current gift card balance. This balance is always greater than or equal to zero.
    """

    gan: typing.Optional[str] = pydantic.Field(default=None)
    """
    The gift card account number (GAN). Buyers can use the GAN to make purchases or check 
    the gift card balance.
    """

    created_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    The timestamp when the gift card was created, in RFC 3339 format. 
    In the case of a digital gift card, it is the time when you create a card 
    (using the Square Point of Sale application, Seller Dashboard, or Gift Cards API).  
    In the case of a plastic gift card, it is the time when Square associates the card with the 
    seller at the time of activation.
    """

    customer_ids: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    The IDs of the [customer profiles](entity:Customer) to whom this gift card is linked.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
