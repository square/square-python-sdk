# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class LoyaltyEventAccumulatePoints(UncheckedBaseModel):
    """
    Provides metadata when the event `type` is `ACCUMULATE_POINTS`.
    """

    loyalty_program_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the [loyalty program](entity:LoyaltyProgram).
    """

    points: typing.Optional[int] = pydantic.Field(default=None)
    """
    The number of points accumulated by the event.
    """

    order_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the [order](entity:Order) for which the buyer accumulated the points.
    This field is returned only if the Orders API is used to process orders.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
