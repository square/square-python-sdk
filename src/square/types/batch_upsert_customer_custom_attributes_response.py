# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .batch_upsert_customer_custom_attributes_response_customer_custom_attribute_upsert_response import (
    BatchUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponse,
)
from .error import Error


class BatchUpsertCustomerCustomAttributesResponse(UncheckedBaseModel):
    """
    Represents a [BulkUpsertCustomerCustomAttributes](api-endpoint:CustomerCustomAttributes-BulkUpsertCustomerCustomAttributes) response,
    which contains a map of responses that each corresponds to an individual upsert request.
    """

    values: typing.Optional[
        typing.Dict[str, BatchUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponse]
    ] = pydantic.Field(default=None)
    """
    A map of responses that correspond to individual upsert requests. Each response has the
    same ID as the corresponding request and contains either a `customer_id` and `custom_attribute` or an `errors` field.
    """

    errors: typing.Optional[typing.List[Error]] = pydantic.Field(default=None)
    """
    Any errors that occurred during the request.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
