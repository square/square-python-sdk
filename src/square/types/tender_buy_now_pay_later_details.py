# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .tender_buy_now_pay_later_details_brand import TenderBuyNowPayLaterDetailsBrand
from .tender_buy_now_pay_later_details_status import TenderBuyNowPayLaterDetailsStatus


class TenderBuyNowPayLaterDetails(UncheckedBaseModel):
    """
    Represents the details of a tender with `type` `BUY_NOW_PAY_LATER`.
    """

    buy_now_pay_later_brand: typing.Optional[TenderBuyNowPayLaterDetailsBrand] = pydantic.Field(default=None)
    """
    The Buy Now Pay Later brand.
    See [Brand](#type-brand) for possible values
    """

    status: typing.Optional[TenderBuyNowPayLaterDetailsStatus] = pydantic.Field(default=None)
    """
    The buy now pay later payment's current state (such as `AUTHORIZED` or
    `CAPTURED`). See [TenderBuyNowPayLaterDetailsStatus](entity:TenderBuyNowPayLaterDetailsStatus)
    for possible values.
    See [Status](#type-status) for possible values
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
