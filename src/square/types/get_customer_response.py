# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .customer import Customer
from .error import Error


class GetCustomerResponse(UncheckedBaseModel):
    """
    Defines the fields that are included in the response body of
    a request to the `RetrieveCustomer` endpoint.

    Either `errors` or `customer` is present in a given response (never both).
    """

    errors: typing.Optional[typing.List[Error]] = pydantic.Field(default=None)
    """
    Any errors that occurred during the request.
    """

    customer: typing.Optional[Customer] = pydantic.Field(default=None)
    """
    The requested customer.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
