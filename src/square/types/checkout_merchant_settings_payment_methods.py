# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .checkout_merchant_settings_payment_methods_payment_method import (
    CheckoutMerchantSettingsPaymentMethodsPaymentMethod,
)
from .checkout_merchant_settings_payment_methods_afterpay_clearpay import (
    CheckoutMerchantSettingsPaymentMethodsAfterpayClearpay,
)
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class CheckoutMerchantSettingsPaymentMethods(UncheckedBaseModel):
    apple_pay: typing.Optional[CheckoutMerchantSettingsPaymentMethodsPaymentMethod] = None
    google_pay: typing.Optional[CheckoutMerchantSettingsPaymentMethodsPaymentMethod] = None
    cash_app: typing.Optional[CheckoutMerchantSettingsPaymentMethodsPaymentMethod] = None
    afterpay_clearpay: typing.Optional[CheckoutMerchantSettingsPaymentMethodsAfterpayClearpay] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
