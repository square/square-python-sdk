# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from .inventory_state import InventoryState
from .money import Money
from .source_application import SourceApplication
from .inventory_adjustment_group import InventoryAdjustmentGroup
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class InventoryAdjustment(UncheckedBaseModel):
    """
    Represents a change in state or quantity of product inventory at a
    particular time and location.
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    A unique ID generated by Square for the
    `InventoryAdjustment`.
    """

    reference_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    An optional ID provided by the application to tie the
    `InventoryAdjustment` to an external
    system.
    """

    from_state: typing.Optional[InventoryState] = pydantic.Field(default=None)
    """
    The [inventory state](entity:InventoryState) of the related quantity
    of items before the adjustment.
    See [InventoryState](#type-inventorystate) for possible values
    """

    to_state: typing.Optional[InventoryState] = pydantic.Field(default=None)
    """
    The [inventory state](entity:InventoryState) of the related quantity
    of items after the adjustment.
    See [InventoryState](#type-inventorystate) for possible values
    """

    location_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Square-generated ID of the [Location](entity:Location) where the related
    quantity of items is being tracked.
    """

    catalog_object_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Square-generated ID of the
    [CatalogObject](entity:CatalogObject) being tracked.
    """

    catalog_object_type: typing.Optional[str] = pydantic.Field(default=None)
    """
    The [type](entity:CatalogObjectType) of the [CatalogObject](entity:CatalogObject) being tracked. 
    
    The Inventory API supports setting and reading the `"catalog_object_type": "ITEM_VARIATION"` field value. 
    In addition, it can also read the `"catalog_object_type": "ITEM"` field value that is set by the Square Restaurants app.
    """

    quantity: typing.Optional[str] = pydantic.Field(default=None)
    """
    The number of items affected by the adjustment as a decimal string.
    Can support up to 5 digits after the decimal point.
    """

    total_price_money: typing.Optional[Money] = pydantic.Field(default=None)
    """
    The total price paid for goods associated with the
    adjustment. Present if and only if `to_state` is `SOLD`. Always
    non-negative.
    """

    occurred_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    A client-generated RFC 3339-formatted timestamp that indicates when
    the inventory adjustment took place. For inventory adjustment updates, the `occurred_at`
    timestamp cannot be older than 24 hours or in the future relative to the
    time of the request.
    """

    created_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    An RFC 3339-formatted timestamp that indicates when the inventory adjustment is received.
    """

    source: typing.Optional[SourceApplication] = pydantic.Field(default=None)
    """
    Information about the application that caused the
    inventory adjustment.
    """

    employee_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Square-generated ID of the [Employee](entity:Employee) responsible for the
    inventory adjustment.
    """

    team_member_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Square-generated ID of the [Team Member](entity:TeamMember) responsible for the
    inventory adjustment.
    """

    transaction_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Square-generated ID of the [Transaction](entity:Transaction) that
    caused the adjustment. Only relevant for payment-related state
    transitions.
    """

    refund_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Square-generated ID of the [Refund](entity:Refund) that
    caused the adjustment. Only relevant for refund-related state
    transitions.
    """

    purchase_order_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Square-generated ID of the purchase order that caused the
    adjustment. Only relevant for state transitions from the Square for Retail
    app.
    """

    goods_receipt_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Square-generated ID of the goods receipt that caused the
    adjustment. Only relevant for state transitions from the Square for Retail
    app.
    """

    adjustment_group: typing.Optional[InventoryAdjustmentGroup] = pydantic.Field(default=None)
    """
    An adjustment group bundling the related adjustments of item variations through stock conversions in a single inventory event.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
