# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class CatalogQueryExact(UncheckedBaseModel):
    """
    The query filter to return the search result by exact match of the specified attribute name and value.
    """

    attribute_name: str = pydantic.Field()
    """
    The name of the attribute to be searched. Matching of the attribute name is exact.
    """

    attribute_value: str = pydantic.Field()
    """
    The desired value of the search attribute. Matching of the attribute value is case insensitive and can be partial.
    For example, if a specified value of "sma", objects with the named attribute value of "Small", "small" are both matched.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
