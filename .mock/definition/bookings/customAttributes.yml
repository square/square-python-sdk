imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    batchDelete:
      path: /v2/bookings/custom-attributes/bulk-delete
      method: POST
      auth: true
      docs: >-
        Bulk deletes bookings custom attributes.


        To call this endpoint with buyer-level permissions, set
        `APPOINTMENTS_WRITE` for the OAuth scope.

        To call this endpoint with seller-level permissions, set
        `APPOINTMENTS_ALL_WRITE` and `APPOINTMENTS_WRITE` for the OAuth scope.


        For calls to this endpoint with seller-level permissions to succeed, the
        seller must have subscribed to *Appointments Plus*

        or *Appointments Premium*.
      source:
        openapi: openapi/openapi.json
      display-name: BulkDeleteBookingCustomAttributes
      request:
        name: BulkDeleteBookingCustomAttributesRequest
        body:
          properties:
            values:
              type: map<string, root.BookingCustomAttributeDeleteRequest>
              docs: >-
                A map containing 1 to 25 individual Delete requests. For each
                request, provide an

                arbitrary ID that is unique for this
                `BulkDeleteBookingCustomAttributes` request and the

                information needed to delete a custom attribute.
        content-type: application/json
      response:
        docs: Success
        type: root.BulkDeleteBookingCustomAttributesResponse
        status-code: 200
      examples:
        - request:
            values:
              key:
                booking_id: booking_id
                key: key
          response:
            body:
              values:
                id1:
                  booking_id: N3NCVYY3WS27HF0HKANA3R9FP8
                  errors:
                    - category: API_ERROR
                      code: INTERNAL_SERVER_ERROR
                id2:
                  booking_id: SY8EMWRNDN3TQDP2H4KS1QWMMM
                  errors:
                    - category: API_ERROR
                      code: INTERNAL_SERVER_ERROR
                id3:
                  booking_id: SY8EMWRNDN3TQDP2H4KS1QWMMM
                  errors:
                    - category: API_ERROR
                      code: INTERNAL_SERVER_ERROR
              errors:
                - category: API_ERROR
                  code: INTERNAL_SERVER_ERROR
                  detail: detail
                  field: field
    batchUpsert:
      path: /v2/bookings/custom-attributes/bulk-upsert
      method: POST
      auth: true
      docs: >-
        Bulk upserts bookings custom attributes.


        To call this endpoint with buyer-level permissions, set
        `APPOINTMENTS_WRITE` for the OAuth scope.

        To call this endpoint with seller-level permissions, set
        `APPOINTMENTS_ALL_WRITE` and `APPOINTMENTS_WRITE` for the OAuth scope.


        For calls to this endpoint with seller-level permissions to succeed, the
        seller must have subscribed to *Appointments Plus*

        or *Appointments Premium*.
      source:
        openapi: openapi/openapi.json
      display-name: BulkUpsertBookingCustomAttributes
      request:
        name: BulkUpsertBookingCustomAttributesRequest
        body:
          properties:
            values:
              type: map<string, root.BookingCustomAttributeUpsertRequest>
              docs: >-
                A map containing 1 to 25 individual upsert requests. For each
                request, provide an

                arbitrary ID that is unique for this
                `BulkUpsertBookingCustomAttributes` request and the

                information needed to create or update a custom attribute.
        content-type: application/json
      response:
        docs: Success
        type: root.BulkUpsertBookingCustomAttributesResponse
        status-code: 200
      examples:
        - request:
            values:
              key:
                booking_id: booking_id
                custom_attribute: {}
          response:
            body:
              values:
                id1:
                  booking_id: N3NCVYY3WS27HF0HKANA3R9FP8
                  custom_attribute:
                    key: favoriteShampoo
                    value: Spring Fresh
                    version: 1
                    visibility: VISIBILITY_READ_WRITE_VALUES
                    updated_at: '2022-11-16T00:16:23Z'
                    created_at: '2022-11-16T23:14:47Z'
                  errors:
                    - category: API_ERROR
                      code: INTERNAL_SERVER_ERROR
                id2:
                  booking_id: SY8EMWRNDN3TQDP2H4KS1QWMMM
                  custom_attribute:
                    key: hasShoes
                    value: false
                    version: 2
                    visibility: VISIBILITY_READ_WRITE_VALUES
                    updated_at: '2022-11-16T00:16:23Z'
                    created_at: '2022-11-16T00:16:20Z'
                  errors:
                    - category: API_ERROR
                      code: INTERNAL_SERVER_ERROR
                id3:
                  booking_id: SY8EMWRNDN3TQDP2H4KS1QWMMM
                  custom_attribute:
                    key: favoriteShampoo
                    value: Hydro-Cool
                    version: 2
                    visibility: VISIBILITY_READ_WRITE_VALUES
                    updated_at: '2022-11-16T00:16:23Z'
                    created_at: '2022-11-16T00:16:20Z'
                  errors:
                    - category: API_ERROR
                      code: INTERNAL_SERVER_ERROR
                id4:
                  booking_id: N3NCVYY3WS27HF0HKANA3R9FP8
                  custom_attribute:
                    key: partySize
                    value: 4
                    version: 1
                    visibility: VISIBILITY_READ_WRITE_VALUES
                    updated_at: '2022-11-16T00:16:23Z'
                    created_at: '2022-11-16T23:14:47Z'
                  errors:
                    - category: API_ERROR
                      code: INTERNAL_SERVER_ERROR
                id5:
                  booking_id: 70548QG1HN43B05G0KCZ4MMC1G
                  custom_attribute:
                    key: celebrating
                    value: birthday
                    version: 2
                    visibility: VISIBILITY_READ_WRITE_VALUES
                    updated_at: '2022-11-16T00:16:23Z'
                    created_at: '2022-11-16T00:16:20Z'
                  errors:
                    - category: API_ERROR
                      code: INTERNAL_SERVER_ERROR
              errors:
                - category: API_ERROR
                  code: INTERNAL_SERVER_ERROR
                  detail: detail
                  field: field
    list:
      path: /v2/bookings/{booking_id}/custom-attributes
      method: GET
      auth: true
      docs: >-
        Lists a booking's custom attributes.


        To call this endpoint with buyer-level permissions, set
        `APPOINTMENTS_READ` for the OAuth scope.

        To call this endpoint with seller-level permissions, set
        `APPOINTMENTS_ALL_READ` and `APPOINTMENTS_READ` for the OAuth scope.
      pagination:
        cursor: $request.cursor
        next_cursor: $response.cursor
        results: $response.custom_attributes
      source:
        openapi: openapi/openapi.json
      display-name: ListBookingCustomAttributes
      request:
        name: ListCustomAttributesRequest
        path-parameters:
          booking_id:
            type: string
            docs: The ID of the target [booking](entity:Booking).
        query-parameters:
          limit:
            type: optional<nullable<integer>>
            docs: >-
              The maximum number of results to return in a single paged
              response. This limit is advisory.

              The response might contain more or fewer results. The minimum
              value is 1 and the maximum value is 100.

              The default value is 20. For more information, see
              [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
          cursor:
            type: optional<nullable<string>>
            docs: >-
              The cursor returned in the paged response from the previous call
              to this endpoint.

              Provide this cursor to retrieve the next page of results for your
              original request. For more

              information, see
              [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
          with_definitions:
            type: optional<nullable<boolean>>
            default: false
            docs: >-
              Indicates whether to return the [custom attribute
              definition](entity:CustomAttributeDefinition) in the `definition`
              field of each

              custom attribute. Set this parameter to `true` to get the name and
              description of each custom

              attribute, information about the data type, or other definition
              details. The default value is `false`.
      response:
        docs: Success
        type: root.ListBookingCustomAttributesResponse
        status-code: 200
      examples:
        - path-parameters:
            booking_id: booking_id
          response:
            body:
              custom_attributes:
                - key: favoriteShampoo
                  value: Hydro-Cool
                  version: 1
                  visibility: VISIBILITY_READ_ONLY
                  updated_at: '2022-11-16T15:50:27Z'
                  created_at: '2022-11-16T15:50:27Z'
                - key: hasShoes
                  value: false
                  version: 1
                  visibility: VISIBILITY_HIDDEN
                  updated_at: '2022-11-16T15:51:53Z'
                  created_at: '2022-11-16T15:51:53Z'
              cursor: cursor
              errors:
                - category: API_ERROR
                  code: INTERNAL_SERVER_ERROR
                  detail: detail
                  field: field
    get:
      path: /v2/bookings/{booking_id}/custom-attributes/{key}
      method: GET
      auth: true
      docs: >-
        Retrieves a bookings custom attribute.


        To call this endpoint with buyer-level permissions, set
        `APPOINTMENTS_READ` for the OAuth scope.

        To call this endpoint with seller-level permissions, set
        `APPOINTMENTS_ALL_READ` and `APPOINTMENTS_READ` for the OAuth scope.
      source:
        openapi: openapi/openapi.json
      display-name: RetrieveBookingCustomAttribute
      request:
        name: GetCustomAttributesRequest
        path-parameters:
          booking_id:
            type: string
            docs: The ID of the target [booking](entity:Booking).
          key:
            type: string
            docs: >-
              The key of the custom attribute to retrieve. This key must match
              the `key` of a custom

              attribute definition in the Square seller account. If the
              requesting application is not the

              definition owner, you must use the qualified key.
        query-parameters:
          with_definition:
            type: optional<nullable<boolean>>
            default: false
            docs: >-
              Indicates whether to return the [custom attribute
              definition](entity:CustomAttributeDefinition) in the `definition`
              field of

              the custom attribute. Set this parameter to `true` to get the name
              and description of the custom

              attribute, information about the data type, or other definition
              details. The default value is `false`.
          version:
            type: optional<nullable<integer>>
            docs: >-
              The current version of the custom attribute, which is used for
              strongly consistent reads to

              guarantee that you receive the most up-to-date data. When included
              in the request, Square

              returns the specified version or a higher version if one exists.
              If the specified version is

              higher than the current version, Square returns a `BAD_REQUEST`
              error.
      response:
        docs: Success
        type: root.RetrieveBookingCustomAttributeResponse
        status-code: 200
      examples:
        - path-parameters:
            booking_id: booking_id
            key: key
          response:
            body:
              custom_attribute:
                key: favoriteShampoo
                value: Dune
                version: 1
                visibility: VISIBILITY_READ_ONLY
                definition:
                  key: key
                  schema:
                    key: value
                  name: name
                  description: description
                  visibility: VISIBILITY_HIDDEN
                  version: 1
                  updated_at: updated_at
                  created_at: created_at
                updated_at: '2022-11-16T15:50:27Z'
                created_at: '2022-11-16T15:50:27Z'
              errors:
                - category: API_ERROR
                  code: INTERNAL_SERVER_ERROR
                  detail: detail
                  field: field
    upsert:
      path: /v2/bookings/{booking_id}/custom-attributes/{key}
      method: PUT
      auth: true
      docs: >-
        Upserts a bookings custom attribute.


        To call this endpoint with buyer-level permissions, set
        `APPOINTMENTS_WRITE` for the OAuth scope.

        To call this endpoint with seller-level permissions, set
        `APPOINTMENTS_ALL_WRITE` and `APPOINTMENTS_WRITE` for the OAuth scope.


        For calls to this endpoint with seller-level permissions to succeed, the
        seller must have subscribed to *Appointments Plus*

        or *Appointments Premium*.
      source:
        openapi: openapi/openapi.json
      display-name: UpsertBookingCustomAttribute
      request:
        name: UpsertBookingCustomAttributeRequest
        path-parameters:
          booking_id:
            type: string
            docs: The ID of the target [booking](entity:Booking).
          key:
            type: string
            docs: >-
              The key of the custom attribute to create or update. This key must
              match the `key` of a

              custom attribute definition in the Square seller account. If the
              requesting application is not

              the definition owner, you must use the qualified key.
        body:
          properties:
            custom_attribute:
              type: root.CustomAttribute
              docs: >-
                The custom attribute to create or update, with the following
                fields:


                - `value`. This value must conform to the `schema` specified by
                the definition.

                For more information, see [Value data
                types](https://developer.squareup.com/docs/booking-custom-attributes-api/custom-attributes#value-data-types).


                - `version`. To enable [optimistic
                concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)

                control for an update operation, include this optional field and
                specify the current version

                of the custom attribute.
            idempotency_key:
              type: optional<nullable<string>>
              docs: >-
                A unique identifier for this request, used to ensure
                idempotency. For more information,

                see
                [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).
              validation:
                maxLength: 45
        content-type: application/json
      response:
        docs: Success
        type: root.UpsertBookingCustomAttributeResponse
        status-code: 200
      examples:
        - path-parameters:
            booking_id: booking_id
            key: key
          request:
            custom_attribute: {}
          response:
            body:
              custom_attribute:
                key: favoriteShampoo
                value: Spring Fresh
                version: 1
                visibility: VISIBILITY_READ_ONLY
                definition:
                  key: key
                  schema:
                    key: value
                  name: name
                  description: description
                  visibility: VISIBILITY_HIDDEN
                  version: 1
                  updated_at: updated_at
                  created_at: created_at
                updated_at: '2022-11-16T15:50:27Z'
                created_at: '2022-11-16T15:50:27Z'
              errors:
                - category: API_ERROR
                  code: INTERNAL_SERVER_ERROR
                  detail: detail
                  field: field
    delete:
      path: /v2/bookings/{booking_id}/custom-attributes/{key}
      method: DELETE
      auth: true
      docs: >-
        Deletes a bookings custom attribute.


        To call this endpoint with buyer-level permissions, set
        `APPOINTMENTS_WRITE` for the OAuth scope.

        To call this endpoint with seller-level permissions, set
        `APPOINTMENTS_ALL_WRITE` and `APPOINTMENTS_WRITE` for the OAuth scope.


        For calls to this endpoint with seller-level permissions to succeed, the
        seller must have subscribed to *Appointments Plus*

        or *Appointments Premium*.
      source:
        openapi: openapi/openapi.json
      display-name: DeleteBookingCustomAttribute
      request:
        name: DeleteCustomAttributesRequest
        path-parameters:
          booking_id:
            type: string
            docs: The ID of the target [booking](entity:Booking).
          key:
            type: string
            docs: >-
              The key of the custom attribute to delete. This key must match the
              `key` of a custom

              attribute definition in the Square seller account. If the
              requesting application is not the

              definition owner, you must use the qualified key.
      response:
        docs: Success
        type: root.DeleteBookingCustomAttributeResponse
        status-code: 200
      examples:
        - path-parameters:
            booking_id: booking_id
            key: key
          response:
            body:
              errors:
                - category: API_ERROR
                  code: INTERNAL_SERVER_ERROR
                  detail: detail
                  field: field
  source:
    openapi: openapi/openapi.json
