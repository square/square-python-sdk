types:
  AchDetails:
    docs: >-
      ACH-specific details about `BANK_ACCOUNT` type payments with the
      `transfer_type` of `ACH`.
    properties:
      routing_number:
        type: optional<nullable<string>>
        docs: The routing number for the bank account.
        validation:
          maxLength: 50
      account_number_suffix:
        type: optional<nullable<string>>
        docs: The last few digits of the bank account number.
        validation:
          minLength: 1
          maxLength: 4
      account_type:
        type: optional<nullable<string>>
        docs: >-
          The type of the bank account performing the transfer. The account type
          can be `CHECKING`,

          `SAVINGS`, or `UNKNOWN`.
        validation:
          maxLength: 50
    source:
      openapi: openapi/openapi.json
  AcceptDisputeResponse:
    docs: Defines the fields in an `AcceptDispute` response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      dispute:
        type: optional<Dispute>
        docs: Details about the accepted dispute.
    source:
      openapi: openapi/openapi.json
  AcceptedPaymentMethods:
    properties:
      apple_pay:
        type: optional<nullable<boolean>>
        docs: Whether Apple Pay is accepted at checkout.
      google_pay:
        type: optional<nullable<boolean>>
        docs: Whether Google Pay is accepted at checkout.
      cash_app_pay:
        type: optional<nullable<boolean>>
        docs: Whether Cash App Pay is accepted at checkout.
      afterpay_clearpay:
        type: optional<nullable<boolean>>
        docs: Whether Afterpay/Clearpay is accepted at checkout.
    source:
      openapi: openapi/openapi.json
  AccumulateLoyaltyPointsResponse:
    docs: >-
      Represents an
      [AccumulateLoyaltyPoints](api-endpoint:Loyalty-AccumulateLoyaltyPoints)
      response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      event:
        type: optional<LoyaltyEvent>
        docs: >-
          The resulting loyalty event. Starting in Square version 2022-08-17,
          this field is no longer returned.
      events:
        type: optional<list<LoyaltyEvent>>
        docs: >-
          The resulting loyalty events. If the purchase qualifies for points,
          the `ACCUMULATE_POINTS` event

          is always included. When using the Orders API, the
          `ACCUMULATE_PROMOTION_POINTS` event is included

          if the purchase also qualifies for a loyalty promotion.
    source:
      openapi: openapi/openapi.json
  ActionCancelReason:
    enum:
      - BUYER_CANCELED
      - SELLER_CANCELED
      - TIMED_OUT
    source:
      openapi: openapi/openapi.json
  ActivityType:
    enum:
      - ADJUSTMENT
      - APP_FEE_REFUND
      - APP_FEE_REVENUE
      - AUTOMATIC_SAVINGS
      - AUTOMATIC_SAVINGS_REVERSED
      - CHARGE
      - DEPOSIT_FEE
      - DEPOSIT_FEE_REVERSED
      - DISPUTE
      - ESCHEATMENT
      - FEE
      - FREE_PROCESSING
      - HOLD_ADJUSTMENT
      - INITIAL_BALANCE_CHANGE
      - MONEY_TRANSFER
      - MONEY_TRANSFER_REVERSAL
      - OPEN_DISPUTE
      - OTHER
      - OTHER_ADJUSTMENT
      - PAID_SERVICE_FEE
      - PAID_SERVICE_FEE_REFUND
      - REDEMPTION_CODE
      - REFUND
      - RELEASE_ADJUSTMENT
      - RESERVE_HOLD
      - RESERVE_RELEASE
      - RETURNED_PAYOUT
      - SQUARE_CAPITAL_PAYMENT
      - SQUARE_CAPITAL_REVERSED_PAYMENT
      - SUBSCRIPTION_FEE
      - SUBSCRIPTION_FEE_PAID_REFUND
      - SUBSCRIPTION_FEE_REFUND
      - TAX_ON_FEE
      - THIRD_PARTY_FEE
      - THIRD_PARTY_FEE_REFUND
      - PAYOUT
      - AUTOMATIC_BITCOIN_CONVERSIONS
      - AUTOMATIC_BITCOIN_CONVERSIONS_REVERSED
      - CREDIT_CARD_REPAYMENT
      - CREDIT_CARD_REPAYMENT_REVERSED
      - LOCAL_OFFERS_CASHBACK
      - LOCAL_OFFERS_FEE
      - PERCENTAGE_PROCESSING_ENROLLMENT
      - PERCENTAGE_PROCESSING_DEACTIVATION
      - PERCENTAGE_PROCESSING_REPAYMENT
      - PERCENTAGE_PROCESSING_REPAYMENT_REVERSED
      - PROCESSING_FEE
      - PROCESSING_FEE_REFUND
      - UNDO_PROCESSING_FEE_REFUND
      - GIFT_CARD_LOAD_FEE
      - GIFT_CARD_LOAD_FEE_REFUND
      - UNDO_GIFT_CARD_LOAD_FEE_REFUND
      - BALANCE_FOLDERS_TRANSFER
      - BALANCE_FOLDERS_TRANSFER_REVERSED
      - GIFT_CARD_POOL_TRANSFER
      - GIFT_CARD_POOL_TRANSFER_REVERSED
      - SQUARE_PAYROLL_TRANSFER
      - SQUARE_PAYROLL_TRANSFER_REVERSED
    source:
      openapi: openapi/openapi.json
  AddGroupToCustomerResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [AddGroupToCustomer](api-endpoint:Customers-AddGroupToCustomer) endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  AdditionalRecipient:
    docs: >-
      Represents an additional recipient (other than the merchant) receiving a
      portion of this tender.
    properties:
      location_id:
        type: string
        docs: >-
          The location ID for a recipient (other than the merchant) receiving a
          portion of this tender.
        validation:
          minLength: 1
          maxLength: 50
      description:
        type: optional<nullable<string>>
        docs: The description of the additional recipient.
        validation:
          maxLength: 100
      amount_money:
        type: Money
        docs: The amount of money distributed to the recipient.
      receivable_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID for the RETIRED `AdditionalRecipientReceivable` object.
          This field should be empty for any `AdditionalRecipient` objects
          created after the retirement.
        validation:
          maxLength: 192
    source:
      openapi: openapi/openapi.json
  Address:
    docs: >-
      Represents a postal address in a country. 

      For more information, see [Working with
      Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses).
    properties:
      address_line_1:
        type: optional<nullable<string>>
        docs: >-
          The first line of the address.


          Fields that start with `address_line` provide the address's most
          specific

          details, like street number, street name, and building name. They do
          *not*

          provide less specific details like city, state/province, or country
          (these

          details are provided in other fields).
      address_line_2:
        type: optional<nullable<string>>
        docs: The second line of the address, if any.
      address_line_3:
        type: optional<nullable<string>>
        docs: The third line of the address, if any.
      locality:
        type: optional<nullable<string>>
        docs: >-
          The city or town of the address. For a full list of field meanings by
          country, see [Working with
          Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses).
      sublocality:
        type: optional<nullable<string>>
        docs: A civil region within the address's `locality`, if any.
      sublocality_2:
        type: optional<nullable<string>>
        docs: A civil region within the address's `sublocality`, if any.
      sublocality_3:
        type: optional<nullable<string>>
        docs: A civil region within the address's `sublocality_2`, if any.
      administrative_district_level_1:
        type: optional<nullable<string>>
        docs: >-
          A civil entity within the address's country. In the US, this

          is the state. For a full list of field meanings by country, see
          [Working with
          Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses).
      administrative_district_level_2:
        type: optional<nullable<string>>
        docs: |-
          A civil entity within the address's `administrative_district_level_1`.
          In the US, this is the county.
      administrative_district_level_3:
        type: optional<nullable<string>>
        docs: |-
          A civil entity within the address's `administrative_district_level_2`,
          if any.
      postal_code:
        type: optional<nullable<string>>
        docs: >-
          The address's postal code. For a full list of field meanings by
          country, see [Working with
          Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses).
      country:
        type: optional<Country>
        docs: >-
          The address's country, in the two-letter format of ISO 3166. For
          example, `US` or `FR`.

          See [Country](#type-country) for possible values
      first_name:
        type: optional<nullable<string>>
        docs: Optional first name when it's representing recipient.
      last_name:
        type: optional<nullable<string>>
        docs: Optional last name when it's representing recipient.
    source:
      openapi: openapi/openapi.json
  AdjustLoyaltyPointsResponse:
    docs: >-
      Represents an
      [AdjustLoyaltyPoints](api-endpoint:Loyalty-AdjustLoyaltyPoints) request.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      event:
        type: optional<LoyaltyEvent>
        docs: The resulting event data for the adjustment.
    source:
      openapi: openapi/openapi.json
  AfterpayDetails:
    docs: Additional details about Afterpay payments.
    properties:
      email_address:
        type: optional<nullable<string>>
        docs: Email address on the buyer's Afterpay account.
        validation:
          maxLength: 255
    source:
      openapi: openapi/openapi.json
  ApplicationDetails:
    docs: Details about the application that took the payment.
    properties:
      square_product:
        type: optional<ApplicationDetailsExternalSquareProduct>
        docs: >-
          The Square product, such as Square Point of Sale (POS), 

          Square Invoices, or Square Virtual Terminal.

          See [ExternalSquareProduct](#type-externalsquareproduct) for possible
          values
      application_id:
        type: optional<nullable<string>>
        docs: >-
          The Square ID assigned to the application used to take the payment. 

          Application developers can use this information to identify payments
          that 

          their application processed. 

          For example, if a developer uses a custom application to process
          payments, 

          this field contains the application ID from the Developer Dashboard. 

          If a seller uses a [Square App
          Marketplace](https://developer.squareup.com/docs/app-marketplace) 

          application to process payments, the field contains the corresponding
          application ID.
    source:
      openapi: openapi/openapi.json
  ApplicationDetailsExternalSquareProduct:
    enum:
      - APPOINTMENTS
      - ECOMMERCE_API
      - INVOICES
      - ONLINE_STORE
      - OTHER
      - RESTAURANTS
      - RETAIL
      - SQUARE_POS
      - TERMINAL_API
      - VIRTUAL_TERMINAL
    docs: A list of products to return to external callers.
    source:
      openapi: openapi/openapi.json
  ApplicationType: literal<"TERMINAL_API">
  AppointmentSegment:
    docs: Defines an appointment segment of a booking.
    properties:
      duration_minutes:
        type: optional<nullable<integer>>
        docs: The time span in minutes of an appointment segment.
        validation:
          max: 1500
      service_variation_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the [CatalogItemVariation](entity:CatalogItemVariation)
          object representing the service booked in this segment.
        validation:
          maxLength: 36
      team_member_id:
        type: string
        docs: >-
          The ID of the [TeamMember](entity:TeamMember) object representing the
          team member booked in this segment.
        validation:
          minLength: 1
          maxLength: 32
      service_variation_version:
        type: optional<nullable<long>>
        docs: >-
          The current version of the item variation representing the service
          booked in this segment.
      intermission_minutes:
        type: optional<integer>
        docs: >-
          Time between the end of this segment and the beginning of the
          subsequent segment.
        access: read-only
      any_team_member:
        type: optional<boolean>
        docs: >-
          Whether the customer accepts any team member, instead of a specific
          one, to serve this segment.
        access: read-only
      resource_ids:
        type: optional<list<string>>
        docs: >-
          The IDs of the seller-accessible resources used for this appointment
          segment.
        access: read-only
    source:
      openapi: openapi/openapi.json
  ArchivedState:
    enum:
      - ARCHIVED_STATE_NOT_ARCHIVED
      - ARCHIVED_STATE_ARCHIVED
      - ARCHIVED_STATE_ALL
    docs: |-
      Defines the values for the `archived_state` query expression 
      used in [SearchCatalogItems](api-endpoint:Catalog-SearchCatalogItems) 
      to return the archived, not archived or either type of catalog items.
    source:
      openapi: openapi/openapi.json
  Availability:
    docs: >-
      Defines an appointment slot that encapsulates the appointment segments,
      location and starting time available for booking.
    properties:
      start_at:
        type: optional<nullable<string>>
        docs: >-
          The RFC 3339 timestamp specifying the beginning time of the slot
          available for booking.
      location_id:
        type: optional<string>
        docs: The ID of the location available for booking.
        validation:
          maxLength: 32
        access: read-only
      appointment_segments:
        type: optional<nullable<list<AppointmentSegment>>>
        docs: The list of appointment segments available for booking
    source:
      openapi: openapi/openapi.json
  BankAccount:
    docs: >-
      Represents a bank account. For more information about 

      linking a bank account to a Square account, see 

      [Bank Accounts
      API](https://developer.squareup.com/docs/bank-accounts-api).
    properties:
      id:
        type: string
        docs: The unique, Square-issued identifier for the bank account.
        validation:
          minLength: 1
          maxLength: 30
      account_number_suffix:
        type: string
        docs: The last few digits of the account number.
        validation:
          minLength: 1
      country:
        type: Country
        docs: |-
          The ISO 3166 Alpha-2 country code where the bank account is based.
          See [Country](#type-country) for possible values
      currency:
        type: Currency
        docs: >-
          The 3-character ISO 4217 currency code indicating the operating

          currency of the bank account. For example, the currency code for US
          dollars

          is `USD`.

          See [Currency](#type-currency) for possible values
      account_type:
        type: BankAccountType
        docs: |-
          The financial purpose of the associated bank account.
          See [BankAccountType](#type-bankaccounttype) for possible values
      holder_name:
        type: string
        docs: |-
          Name of the account holder. This name must match the name 
          on the targeted bank account record.
        validation:
          minLength: 1
      primary_bank_identification_number:
        type: string
        docs: >-
          Primary identifier for the bank. For more information, see 

          [Bank Accounts
          API](https://developer.squareup.com/docs/bank-accounts-api).
        validation:
          maxLength: 40
      secondary_bank_identification_number:
        type: optional<nullable<string>>
        docs: >-
          Secondary identifier for the bank. For more information, see 

          [Bank Accounts
          API](https://developer.squareup.com/docs/bank-accounts-api).
        validation:
          maxLength: 40
      debit_mandate_reference_id:
        type: optional<nullable<string>>
        docs: >-
          Reference identifier that will be displayed to UK bank account owners

          when collecting direct debit authorization. Only required for UK bank
          accounts.
      reference_id:
        type: optional<nullable<string>>
        docs: >-
          Client-provided identifier for linking the banking account to an
          entity

          in a third-party system (for example, a bank account number or a user
          identifier).
      location_id:
        type: optional<nullable<string>>
        docs: The location to which the bank account belongs.
      status:
        type: BankAccountStatus
        docs: |-
          Read-only. The current verification status of this BankAccount object.
          See [BankAccountStatus](#type-bankaccountstatus) for possible values
      creditable:
        type: boolean
        docs: >-
          Indicates whether it is possible for Square to send money to this bank
          account.
      debitable:
        type: boolean
        docs: |-
          Indicates whether it is possible for Square to take money from this 
          bank account.
      fingerprint:
        type: optional<nullable<string>>
        docs: >-
          A Square-assigned, unique identifier for the bank account based on the

          account information. The account fingerprint can be used to compare
          account

          entries and determine if the they represent the same real-world bank
          account.
      version:
        type: optional<integer>
        docs: The current version of the `BankAccount`.
      bank_name:
        type: optional<nullable<string>>
        docs: |-
          Read only. Name of actual financial institution. 
          For example "Bank of America".
        validation:
          maxLength: 100
    source:
      openapi: openapi/openapi.json
  BankAccountCreatedEvent:
    docs: |-
      Published when you link an external bank account to a Square
      account in the Seller Dashboard. Square sets the initial status to
      `VERIFICATION_IN_PROGRESS` and publishes the event.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"bank_account.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<BankAccountCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  BankAccountCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"bank_account"`.
      id:
        type: optional<string>
        docs: ID of the affected bank account.
      object:
        type: optional<BankAccountCreatedEventObject>
        docs: An object containing the created bank account.
    source:
      openapi: openapi/openapi.json
  BankAccountCreatedEventObject:
    properties:
      bank_account:
        type: optional<BankAccount>
        docs: The created bank account.
    source:
      openapi: openapi/openapi.json
  BankAccountDisabledEvent:
    docs: |-
      Published when Square sets the status of a
      [BankAccount](entity:BankAccount) to `DISABLED`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"bank_account.disabled"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was disabled, in RFC 3339 format.
        access: read-only
      data:
        type: optional<BankAccountDisabledEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  BankAccountDisabledEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"bank_account"`.
      id:
        type: optional<string>
        docs: ID of the affected bank account.
      object:
        type: optional<BankAccountDisabledEventObject>
        docs: An object containing the disabled bank account.
    source:
      openapi: openapi/openapi.json
  BankAccountDisabledEventObject:
    properties:
      bank_account:
        type: optional<BankAccount>
        docs: The disabled bank account.
    source:
      openapi: openapi/openapi.json
  BankAccountPaymentDetails:
    docs: Additional details about BANK_ACCOUNT type payments.
    properties:
      bank_name:
        type: optional<nullable<string>>
        docs: The name of the bank associated with the bank account.
        validation:
          maxLength: 100
      transfer_type:
        type: optional<nullable<string>>
        docs: The type of the bank transfer. The type can be `ACH` or `UNKNOWN`.
        validation:
          maxLength: 50
      account_ownership_type:
        type: optional<nullable<string>>
        docs: |-
          The ownership type of the bank account performing the transfer.
          The type can be `INDIVIDUAL`, `COMPANY`, or `ACCOUNT_TYPE_UNKNOWN`.
        validation:
          maxLength: 50
      fingerprint:
        type: optional<nullable<string>>
        docs: |-
          Uniquely identifies the bank account for this seller and can be used
          to determine if payments are from the same bank account.
        validation:
          maxLength: 255
      country:
        type: optional<nullable<string>>
        docs: >-
          The two-letter ISO code representing the country the bank account is
          located in.
        validation:
          minLength: 2
          maxLength: 2
      statement_description:
        type: optional<nullable<string>>
        docs: The statement description as sent to the bank.
        validation:
          maxLength: 1000
      ach_details:
        type: optional<AchDetails>
        docs: >-
          ACH-specific information about the transfer. The information is only
          populated

          if the `transfer_type` is `ACH`.
      errors:
        type: optional<nullable<list<Error>>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  BankAccountStatus:
    enum:
      - VERIFICATION_IN_PROGRESS
      - VERIFIED
      - DISABLED
    docs: Indicates the current verification status of a `BankAccount` object.
    source:
      openapi: openapi/openapi.json
  BankAccountType:
    enum:
      - CHECKING
      - SAVINGS
      - INVESTMENT
      - OTHER
      - BUSINESS_CHECKING
    docs: Indicates the financial purpose of the bank account.
    source:
      openapi: openapi/openapi.json
  BankAccountVerifiedEvent:
    docs: |-
      Published when Square sets the status of a
      [BankAccount](entity:BankAccount) to `VERIFIED`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"bank_account.verified"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was verified, in RFC 3339 format.
        access: read-only
      data:
        type: optional<BankAccountVerifiedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  BankAccountVerifiedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"bank_account"`.
      id:
        type: optional<string>
        docs: ID of the affected bank account.
      object:
        type: optional<BankAccountVerifiedEventObject>
        docs: An object containing the verified bank account.
    source:
      openapi: openapi/openapi.json
  BankAccountVerifiedEventObject:
    properties:
      bank_account:
        type: optional<BankAccount>
        docs: The verified bank account.
    source:
      openapi: openapi/openapi.json
  BatchChangeInventoryRequest:
    properties:
      idempotency_key:
        type: string
        docs: >-
          A client-supplied, universally unique identifier (UUID) for the

          request.


          See
          [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency)
          in the

          [API Development 101](https://developer.squareup.com/docs/buildbasics)
          section for more

          information.
        validation:
          minLength: 1
          maxLength: 128
      changes:
        type: optional<nullable<list<InventoryChange>>>
        docs: >-
          The set of physical counts and inventory adjustments to be made.

          Changes are applied based on the client-supplied timestamp and may be
          sent

          out of order.
      ignore_unchanged_counts:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether the current physical count should be ignored if

          the quantity is unchanged since the last physical count. Default:
          `true`.
    source:
      openapi: openapi/openapi.json
  BatchChangeInventoryResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      counts:
        type: optional<list<InventoryCount>>
        docs: The current counts for all objects referenced in the request.
      changes:
        type: optional<list<InventoryChange>>
        docs: Changes created for the request.
    source:
      openapi: openapi/openapi.json
  BatchDeleteCatalogObjectsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      deleted_object_ids:
        type: optional<list<string>>
        docs: The IDs of all CatalogObjects deleted by this request.
      deleted_at:
        type: optional<string>
        docs: >-
          The database
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          of this deletion in RFC 3339 format, e.g., "2016-09-04T23:59:33.123Z".
    source:
      openapi: openapi/openapi.json
  BatchGetCatalogObjectsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      objects:
        type: optional<list<CatalogObject>>
        docs: A list of [CatalogObject](entity:CatalogObject)s returned.
      related_objects:
        type: optional<list<CatalogObject>>
        docs: >-
          A list of [CatalogObject](entity:CatalogObject)s referenced by the
          object in the `objects` field.
    source:
      openapi: openapi/openapi.json
  BatchRetrieveInventoryChangesRequest:
    properties:
      catalog_object_ids:
        type: optional<nullable<list<string>>>
        docs: |-
          The filter to return results by `CatalogObject` ID.
          The filter is only applicable when set. The default value is null.
      location_ids:
        type: optional<nullable<list<string>>>
        docs: |-
          The filter to return results by `Location` ID.
          The filter is only applicable when set. The default value is null.
      types:
        type: optional<nullable<list<InventoryChangeType>>>
        docs: >-
          The filter to return results by `InventoryChangeType` values other
          than `TRANSFER`.

          The default value is `[PHYSICAL_COUNT, ADJUSTMENT]`.
      states:
        type: optional<nullable<list<InventoryState>>>
        docs: |-
          The filter to return `ADJUSTMENT` query results by
          `InventoryState`. This filter is only applied when set.
          The default value is null.
      updated_after:
        type: optional<nullable<string>>
        docs: |-
          The filter to return results with their `calculated_at` value
          after the given time as specified in an RFC 3339 timestamp.
          The default value is the UNIX epoch of (`1970-01-01T00:00:00Z`).
      updated_before:
        type: optional<nullable<string>>
        docs: >-
          The filter to return results with their `created_at` or
          `calculated_at` value

          strictly before the given time as specified in an RFC 3339 timestamp.

          The default value is the UNIX epoch of (`1970-01-01T00:00:00Z`).
      cursor:
        type: optional<nullable<string>>
        docs: >-
          A pagination cursor returned by a previous call to this endpoint.

          Provide this to retrieve the next set of results for the original
          query.


          See the
          [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)
          guide for more information.
      limit:
        type: optional<nullable<integer>>
        docs: The number of [records](entity:InventoryChange) to return.
        validation:
          min: 1
          max: 1000
    source:
      openapi: openapi/openapi.json
  BatchGetInventoryChangesResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      changes:
        type: optional<list<InventoryChange>>
        docs: |-
          The current calculated inventory changes for the requested objects
          and locations.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If unset,

          this is the final response.

          See the
          [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)
          guide for more information.
    source:
      openapi: openapi/openapi.json
  BatchGetInventoryCountsRequest:
    properties:
      catalog_object_ids:
        type: optional<nullable<list<string>>>
        docs: |-
          The filter to return results by `CatalogObject` ID.
          The filter is applicable only when set.  The default is null.
      location_ids:
        type: optional<nullable<list<string>>>
        docs: |-
          The filter to return results by `Location` ID.
          This filter is applicable only when set. The default is null.
      updated_after:
        type: optional<nullable<string>>
        docs: |-
          The filter to return results with their `calculated_at` value
          after the given time as specified in an RFC 3339 timestamp.
          The default value is the UNIX epoch of (`1970-01-01T00:00:00Z`).
      cursor:
        type: optional<nullable<string>>
        docs: >-
          A pagination cursor returned by a previous call to this endpoint.

          Provide this to retrieve the next set of results for the original
          query.


          See the
          [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)
          guide for more information.
      states:
        type: optional<nullable<list<InventoryState>>>
        docs: >-
          The filter to return results by `InventoryState`. The filter is only
          applicable when set.

          Ignored are untracked states of `NONE`, `SOLD`, and `UNLINKED_RETURN`.

          The default is null.
      limit:
        type: optional<nullable<integer>>
        docs: The number of [records](entity:InventoryCount) to return.
        validation:
          min: 1
          max: 1000
    source:
      openapi: openapi/openapi.json
  BatchGetInventoryCountsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      counts:
        type: optional<list<InventoryCount>>
        docs: |-
          The current calculated inventory counts for the requested objects
          and locations.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If unset,

          this is the final response.


          See the
          [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)
          guide for more information.
    source:
      openapi: openapi/openapi.json
  BatchGetOrdersResponse:
    docs: |-
      Defines the fields that are included in the response body of
      a request to the `BatchRetrieveOrders` endpoint.
    properties:
      orders:
        type: optional<list<Order>>
        docs: >-
          The requested orders. This will omit any requested orders that do not
          exist.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  BatchUpsertCatalogObjectsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      objects:
        type: optional<list<CatalogObject>>
        docs: The created successfully created CatalogObjects.
      updated_at:
        type: optional<string>
        docs: >-
          The database
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          of this update in RFC 3339 format, e.g., "2016-09-04T23:59:33.123Z".
      id_mappings:
        type: optional<list<CatalogIdMapping>>
        docs: The mapping between client and server IDs for this upsert.
    source:
      openapi: openapi/openapi.json
  Booking:
    docs: >-
      Represents a booking as a time-bound service contract for a seller's staff
      member to provide a specified service

      at a given location to a requesting customer in one or more appointment
      segments.
    properties:
      id:
        type: optional<string>
        docs: A unique ID of this object representing a booking.
        validation:
          maxLength: 36
        access: read-only
      version:
        type: optional<integer>
        docs: The revision number for the booking used for optimistic concurrency.
      status:
        type: optional<BookingStatus>
        docs: >-
          The status of the booking, describing where the booking stands with
          respect to the booking state machine.

          See [BookingStatus](#type-bookingstatus) for possible values
      created_at:
        type: optional<string>
        docs: The RFC 3339 timestamp specifying the creation time of this booking.
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The RFC 3339 timestamp specifying the most recent update time of this
          booking.
        access: read-only
      start_at:
        type: optional<nullable<string>>
        docs: The RFC 3339 timestamp specifying the starting time of this booking.
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the [Location](entity:Location) object representing the
          location where the booked service is provided. Once set when the
          booking is created, its value cannot be changed.
        validation:
          maxLength: 32
      customer_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the [Customer](entity:Customer) object representing the
          customer receiving the booked service.
        validation:
          maxLength: 192
      customer_note:
        type: optional<nullable<string>>
        docs: >-
          The free-text field for the customer to supply notes about the
          booking. For example, the note can be preferences that cannot be
          expressed by supported attributes of a relevant
          [CatalogObject](entity:CatalogObject) instance.
        validation:
          maxLength: 4096
      seller_note:
        type: optional<nullable<string>>
        docs: >-
          The free-text field for the seller to supply notes about the booking.
          For example, the note can be preferences that cannot be expressed by
          supported attributes of a specific
          [CatalogObject](entity:CatalogObject) instance.

          This field should not be visible to customers.
        validation:
          maxLength: 4096
      appointment_segments:
        type: optional<nullable<list<AppointmentSegment>>>
        docs: A list of appointment segments for this booking.
      transition_time_minutes:
        type: optional<integer>
        docs: >-
          Additional time at the end of a booking.

          Applications should not make this field visible to customers of a
          seller.
        access: read-only
      all_day:
        type: optional<boolean>
        docs: Whether the booking is of a full business day.
        access: read-only
      location_type:
        type: optional<BusinessAppointmentSettingsBookingLocationType>
        docs: >-
          The type of location where the booking is held.

          See
          [BusinessAppointmentSettingsBookingLocationType](#type-businessappointmentsettingsbookinglocationtype)
          for possible values
      creator_details:
        type: optional<BookingCreatorDetails>
        docs: Information about the booking creator.
      source:
        type: optional<BookingBookingSource>
        docs: >-
          The source of the booking.

          Access to this field requires seller-level permissions.

          See [BookingBookingSource](#type-bookingbookingsource) for possible
          values
      address:
        type: optional<Address>
        docs: Stores a customer address if the location type is `CUSTOMER_LOCATION`.
    source:
      openapi: openapi/openapi.json
  BookingBookingSource:
    enum:
      - FIRST_PARTY_MERCHANT
      - FIRST_PARTY_BUYER
      - THIRD_PARTY_BUYER
      - API
    docs: Supported sources a booking was created from.
    source:
      openapi: openapi/openapi.json
  BookingCreatedEvent:
    docs: >-
      Published when a booking is created.


      To receive this event with buyer-level permissions, you must have
      `APPOINTMENTS_READ` set for the OAuth scope.  

      To receive this event with seller-level permissions, you must have
      `APPOINTMENTS_ALL_READ` and `APPOINTMENTS_READ` set for the OAuth scope.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of this event. The value is `"booking.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<BookingCreatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  BookingCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: The type of the event data object. The value is `"booking"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the event data object.
        validation:
          maxLength: 192
      object:
        type: optional<BookingCreatedEventObject>
        docs: An object containing the created booking.
    source:
      openapi: openapi/openapi.json
  BookingCreatedEventObject:
    properties:
      booking:
        type: optional<Booking>
        docs: The created booking.
    source:
      openapi: openapi/openapi.json
  BookingCreatorDetails:
    docs: Information about a booking creator.
    properties:
      creator_type:
        type: optional<BookingCreatorDetailsCreatorType>
        docs: >-
          The seller-accessible type of the creator of the booking.

          See
          [BookingCreatorDetailsCreatorType](#type-bookingcreatordetailscreatortype)
          for possible values
      team_member_id:
        type: optional<string>
        docs: >-
          The ID of the team member who created the booking, when the booking
          creator is of the `TEAM_MEMBER` type.

          Access to this field requires seller-level permissions.
        validation:
          maxLength: 32
        access: read-only
      customer_id:
        type: optional<string>
        docs: >-
          The ID of the customer who created the booking, when the booking
          creator is of the `CUSTOMER` type.

          Access to this field requires seller-level permissions.
        validation:
          maxLength: 192
        access: read-only
    source:
      openapi: openapi/openapi.json
  BookingCreatorDetailsCreatorType:
    enum:
      - TEAM_MEMBER
      - CUSTOMER
    docs: Supported types of a booking creator.
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeDefinitionOwnedCreatedEvent:
    docs: >-
      Published when a booking [custom attribute
      definition](entity:CustomAttributeDefinition) 

      is created by the subscribing application. Subscribe to this event to be
      notified 

      when your application creates a booking custom attribute definition.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"booking.custom_attribute_definition.owned.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeDefinitionOwnedDeletedEvent:
    docs: >-
      Published when a booking [custom attribute
      definition](entity:CustomAttributeDefinition) 

      is deleted by the subscribing application. Subscribe to this event to be
      notified 

      when your application deletes a booking custom attribute definition.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"booking.custom_attribute_definition.owned.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeDefinitionOwnedUpdatedEvent:
    docs: >-
      Published when a booking [custom attribute
      definition](entity:CustomAttributeDefinition) 

      is updated by the subscribing application. Subscribe to this event to be
      notified 

      when your application updates a booking custom attribute definition.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"booking.custom_attribute_definition.owned.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeDefinitionVisibleCreatedEvent:
    docs: >-
      Published when a booking [custom attribute
      definition](entity:CustomAttributeDefinition) 

      with the `visibility` field set to `VISIBILITY_READ_ONLY` or
      `VISIBILITY_READ_WRITE_VALUES` is created.

      An application that subscribes to this event is notified when a booking
      custom attribute definition is created 

      by any application for which the subscribing application has read access
      to the booking custom attribute definition.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"booking.custom_attribute_definition.visible.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeDefinitionVisibleDeletedEvent:
    docs: >-
      Published when a booking [custom attribute
      definition](entity:CustomAttributeDefinition) 

      with the `visibility` field set to `VISIBILITY_READ_ONLY` or
      `VISIBILITY_READ_WRITE_VALUES` is deleted.

      An application that subscribes to this event is notified when a booking
      custom attribute definition is deleted 

      by any application for which the subscribing application has read access
      to the booking custom attribute definition.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"booking.custom_attribute_definition.visible.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeDefinitionVisibleUpdatedEvent:
    docs: >-
      Published when a booking [custom attribute
      definition](entity:CustomAttributeDefinition) 

      with the `visibility` field set to `VISIBILITY_READ_ONLY` or
      `VISIBILITY_READ_WRITE_VALUES` is updated.

      An application that subscribes to this event is notified when a booking
      custom attribute definition is updated 

      by any application for which the subscribing application has read access
      to the booking custom attribute definition.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"booking.custom_attribute_definition.visible.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeDeleteRequest:
    docs: >-
      Represents an individual delete request in a
      [BulkDeleteBookingCustomAttributes](api-endpoint:BookingCustomAttributes-BulkDeleteBookingCustomAttributes)

      request. An individual request contains a booking ID, the custom attribute
      to delete, and an optional idempotency key.
    properties:
      booking_id:
        type: string
        docs: The ID of the target [booking](entity:Booking).
        validation:
          minLength: 1
          maxLength: 36
      key:
        type: string
        docs: >-
          The key of the custom attribute to delete. This key must match the
          `key` of a

          custom attribute definition in the Square seller account. If the
          requesting application is not

          the definition owner, you must use the qualified key.
        validation:
          minLength: 1
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeDeleteResponse:
    docs: >-
      Represents a response for an individual upsert request in a
      [BulkDeleteBookingCustomAttributes](api-endpoint:BookingCustomAttributes-BulkDeleteBookingCustomAttributes)
      operation.
    properties:
      booking_id:
        type: optional<string>
        docs: >-
          The ID of the [booking](entity:Booking) associated with the custom
          attribute.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred while processing the individual request.
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeOwnedDeletedEvent:
    docs: >-
      Published when a booking [custom attribute](entity:CustomAttribute) 

      associated with a [custom attribute
      definition](entity:CustomAttributeDefinition) that is

      owned by the subscribing application is deleted.

      Subscribe to this event to be notified 

      when your application deletes a booking custom attribute.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"booking.custom_attribute.owned.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeOwnedUpdatedEvent:
    docs: >-
      Published when a booking [custom attribute](entity:CustomAttribute) 

      is updated by the subscribing application. Subscribe to this event to be
      notified 

      when your application updates a booking custom attribute.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"booking.custom_attribute.owned.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeUpsertRequest:
    docs: >-
      Represents an individual upsert request in a
      [BulkUpsertBookingCustomAttributes](api-endpoint:BookingCustomAttributes-BulkUpsertBookingCustomAttributes)

      request. An individual request contains a booking ID, the custom attribute
      to create or update,

      and an optional idempotency key.
    properties:
      booking_id:
        type: string
        docs: The ID of the target [booking](entity:Booking).
        validation:
          minLength: 1
          maxLength: 36
      custom_attribute:
        type: CustomAttribute
        docs: >-
          The custom attribute to create or update, with following fields:


          - `key`. This key must match the `key` of a custom attribute
          definition in the Square seller

          account. If the requesting application is not the definition owner,
          you must provide the qualified key.


          - `value`. This value must conform to the `schema` specified by the
          definition.

          For more information, see [Value data
          types](https://developer.squareup.com/docs/booking-custom-attributes-api/custom-attributes#value-data-types).


          - `version`. To enable [optimistic
          concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)

          control for update operations, include this optional field in the
          request and set the

          value to the current version of the custom attribute.
      idempotency_key:
        type: optional<nullable<string>>
        docs: >-
          A unique identifier for this individual upsert request, used to ensure
          idempotency.

          For more information, see
          [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).
        validation:
          maxLength: 45
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeUpsertResponse:
    docs: >-
      Represents a response for an individual upsert request in a
      [BulkUpsertBookingCustomAttributes](api-endpoint:BookingCustomAttributes-BulkUpsertBookingCustomAttributes)
      operation.
    properties:
      booking_id:
        type: optional<string>
        docs: >-
          The ID of the [booking](entity:Booking) associated with the custom
          attribute.
      custom_attribute:
        type: optional<CustomAttribute>
        docs: The new or updated custom attribute.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred while processing the individual request.
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeVisibleDeletedEvent:
    docs: >-
      Published when a booking [custom attribute](entity:CustomAttribute) with

      the `visibility` field set to `VISIBILITY_READ_ONLY` or
      `VISIBILITY_READ_WRITE_VALUES` is deleted.

      An application that subscribes to this event is notified when a booking
      custom attribute is deleted 

      by any application for which the subscribing application has read access
      to the booking custom attribute.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"booking.custom_attribute.visible.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  BookingCustomAttributeVisibleUpdatedEvent:
    docs: >-
      Published when a booking [custom attribute](entity:CustomAttribute) 

      with the `visibility` field set to `VISIBILITY_READ_ONLY` or
      `VISIBILITY_READ_WRITE_VALUES` is updated.

      An application that subscribes to this event is notified when a booking
      custom attribute is updated 

      by any application for which the subscribing application has read access
      to the booking custom attribute.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"booking.custom_attribute.visible.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  BookingStatus:
    enum:
      - PENDING
      - CANCELLED_BY_CUSTOMER
      - CANCELLED_BY_SELLER
      - DECLINED
      - ACCEPTED
      - NO_SHOW
    docs: Supported booking statuses.
    source:
      openapi: openapi/openapi.json
  BookingUpdatedEvent:
    docs: >-
      Published when a booking is updated or cancelled.


      To receive this event with buyer-level permissions, you must have
      `APPOINTMENTS_READ` set for the OAuth scope.  

      To receive this event with seller-level permissions, you must have
      `APPOINTMENTS_ALL_READ` and `APPOINTMENTS_READ` set for the OAuth scope.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of this event. The value is `"booking.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<BookingUpdatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  BookingUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: The type of the event data object. The value is `"booking"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the event data object.
        validation:
          maxLength: 192
      object:
        type: optional<BookingUpdatedEventObject>
        docs: An object containing the updated booking.
    source:
      openapi: openapi/openapi.json
  BookingUpdatedEventObject:
    properties:
      booking:
        type: optional<Booking>
        docs: The updated booking.
    source:
      openapi: openapi/openapi.json
  Break:
    docs: A record of a team member's break on a [timecard](entity:Timecard).
    properties:
      id:
        type: optional<string>
        docs: The UUID for this object.
      start_at:
        type: string
        docs: >-
          RFC 3339; follows the same timezone information as the
          [timecard](entity:Timecard). Precision up to

          the minute is respected; seconds are truncated.
        validation:
          minLength: 1
      end_at:
        type: optional<nullable<string>>
        docs: >-
          RFC 3339; follows the same timezone information as the
          [timecard](entity:Timecard). Precision up to

          the minute is respected; seconds are truncated.
      break_type_id:
        type: string
        docs: The [BreakType](entity:BreakType) that this break was templated on.
        validation:
          minLength: 1
      name:
        type: string
        docs: A human-readable name.
        validation:
          minLength: 1
      expected_duration:
        type: string
        docs: |-
          Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of
          the break.

          Example for break expected duration of 15 minutes: PT15M
        validation:
          minLength: 1
      is_paid:
        type: boolean
        docs: |-
          Whether this break counts towards time worked for compensation
          purposes.
    source:
      openapi: openapi/openapi.json
  BreakType:
    docs: >-
      A template for a type of [break](entity:Break) that can be added to a

      [timecard](entity:Timecard), including the expected duration and paid
      status.
    properties:
      id:
        type: optional<string>
        docs: The UUID for this object.
        validation:
          maxLength: 255
      location_id:
        type: string
        docs: The ID of the business location this type of break applies to.
        validation:
          minLength: 1
      break_name:
        type: string
        docs: |-
          A human-readable name for this type of break. The name is displayed to
          team members in Square products.
        validation:
          minLength: 1
      expected_duration:
        type: string
        docs: |-
          Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of
          this break. Precision less than minutes is truncated.

          Example for break expected duration of 15 minutes: PT15M
        validation:
          minLength: 1
      is_paid:
        type: boolean
        docs: |-
          Whether this break counts towards time worked for compensation
          purposes.
      version:
        type: optional<integer>
        docs: >-
          Used for resolving concurrency issues. The request fails if the
          version

          provided does not match the server version at the time of the request.
          If a value is not

          provided, Square's servers execute a "blind" write; potentially

          overwriting another writer's data.
      created_at:
        type: optional<string>
        docs: A read-only timestamp in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: A read-only timestamp in RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  BulkCreateCustomerData:
    docs: >-
      Defines the customer data provided in individual create requests for a

      [BulkCreateCustomers](api-endpoint:Customers-BulkCreateCustomers)
      operation.
    properties:
      given_name:
        type: optional<nullable<string>>
        docs: >-
          The given name (that is, the first name) associated with the customer
          profile.
        validation:
          maxLength: 300
      family_name:
        type: optional<nullable<string>>
        docs: >-
          The family name (that is, the last name) associated with the customer
          profile.
        validation:
          maxLength: 300
      company_name:
        type: optional<nullable<string>>
        docs: A business name associated with the customer profile.
        validation:
          maxLength: 500
      nickname:
        type: optional<nullable<string>>
        docs: A nickname for the customer profile.
        validation:
          maxLength: 100
      email_address:
        type: optional<nullable<string>>
        docs: The email address associated with the customer profile.
        validation:
          maxLength: 254
      address:
        type: optional<Address>
        docs: >-
          The physical address associated with the customer profile. For maximum
          length constraints,

          see [Customer
          addresses](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#address).

          The `first_name` and `last_name` fields are ignored if they are
          present in the request.
      phone_number:
        type: optional<nullable<string>>
        docs: >-
          The phone number associated with the customer profile. The phone
          number must be valid

          and can contain 9–16 digits, with an optional `+` prefix and country
          code. For more information,

          see [Customer phone
          numbers](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#phone-number).
      reference_id:
        type: optional<nullable<string>>
        docs: |-
          An optional second ID used to associate the customer profile with an
          entity in another system.
        validation:
          maxLength: 100
      note:
        type: optional<nullable<string>>
        docs: A custom note associated with the customer profile.
      birthday:
        type: optional<nullable<string>>
        docs: >-
          The birthday associated with the customer profile, in `YYYY-MM-DD` or
          `MM-DD` format.

          For example, specify `1998-09-21` for September 21, 1998, or `09-21`
          for September 21.

          Birthdays are returned in `YYYY-MM-DD` format, where `YYYY` is the
          specified birth year or

          `0000` if a birth year is not specified.
      tax_ids:
        type: optional<CustomerTaxIds>
        docs: >-
          The tax ID associated with the customer profile. This field is
          available only for

          customers of sellers in EU countries or the United Kingdom. For more
          information, see

          [Customer tax
          IDs](https://developer.squareup.com/docs/customers-api/what-it-does#customer-tax-ids).
    source:
      openapi: openapi/openapi.json
  BulkCreateCustomersResponse:
    docs: >-
      Defines the fields included in the response body from the

      [BulkCreateCustomers](api-endpoint:Customers-BulkCreateCustomers)
      endpoint.
    properties:
      responses:
        type: optional<map<string, CreateCustomerResponse>>
        docs: >-
          A map of responses that correspond to individual create requests,
          represented by

          key-value pairs.


          Each key is the idempotency key that was provided for a create request
          and each value

          is the corresponding response.

          If the request succeeds, the value is the new customer profile.

          If the request fails, the value contains any errors that occurred
          during the request.
      errors:
        type: optional<list<Error>>
        docs: Any top-level errors that prevented the bulk operation from running.
    source:
      openapi: openapi/openapi.json
  BatchCreateTeamMembersResponse:
    docs: >-
      Represents a response from a bulk create request containing the created
      `TeamMember` objects or error messages.
    properties:
      team_members:
        type: optional<map<string, CreateTeamMemberResponse>>
        docs: >-
          The successfully created `TeamMember` objects. Each key is the
          `idempotency_key` that maps to the `CreateTeamMemberRequest`.
      errors:
        type: optional<list<Error>>
        docs: The errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  BatchCreateVendorsResponse:
    docs: >-
      Represents an output from a call to
      [BulkCreateVendors](api-endpoint:Vendors-BulkCreateVendors).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      responses:
        type: optional<map<string, CreateVendorResponse>>
        docs: >-
          A set of [CreateVendorResponse](entity:CreateVendorResponse) objects
          encapsulating successfully created [Vendor](entity:Vendor)

          objects or error responses for failed attempts. The set is represented
          by 

          a collection of idempotency-key/`Vendor`-object or
          idempotency-key/error-object pairs. The idempotency keys correspond to
          those specified

          in the input.
    source:
      openapi: openapi/openapi.json
  BulkDeleteBookingCustomAttributesResponse:
    docs: >-
      Represents a
      [BulkDeleteBookingCustomAttributes](api-endpoint:BookingCustomAttributes-BulkDeleteBookingCustomAttributes)
      response,

      which contains a map of responses that each corresponds to an individual
      delete request.
    properties:
      values:
        type: optional<map<string, BookingCustomAttributeDeleteResponse>>
        docs: >-
          A map of responses that correspond to individual delete requests. Each
          response has the

          same ID as the corresponding request and contains `booking_id` and 
          `errors` field.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  BulkDeleteCustomersResponse:
    docs: >-
      Defines the fields included in the response body from the

      [BulkDeleteCustomers](api-endpoint:Customers-BulkDeleteCustomers)
      endpoint.
    properties:
      responses:
        type: optional<map<string, DeleteCustomerResponse>>
        docs: >-
          A map of responses that correspond to individual delete requests,
          represented by

          key-value pairs.


          Each key is the customer ID that was specified for a delete request
          and each value

          is the corresponding response.

          If the request succeeds, the value is an empty object (`{ }`).

          If the request fails, the value contains any errors that occurred
          during the request.
      errors:
        type: optional<list<Error>>
        docs: Any top-level errors that prevented the bulk operation from running.
    source:
      openapi: openapi/openapi.json
  BulkDeleteLocationCustomAttributesRequestLocationCustomAttributeDeleteRequest:
    docs: >-
      Represents an individual delete request in a
      [BulkDeleteLocationCustomAttributes](api-endpoint:LocationCustomAttributes-BulkDeleteLocationCustomAttributes)

      request. An individual request contains an optional ID of the associated
      custom attribute definition

      and optional key of the associated custom attribute definition.
    properties:
      key:
        type: optional<string>
        docs: >-
          The key of the associated custom attribute definition.

          Represented as a qualified key if the requesting app is not the
          definition owner.
        validation:
          pattern: ^([a-zA-Z0-9_-]+:)?[a-zA-Z0-9_-]{1,60}$
        access: read-only
    source:
      openapi: openapi/openapi.json
  BulkDeleteLocationCustomAttributesResponse:
    docs: >-
      Represents a
      [BulkDeleteLocationCustomAttributes](api-endpoint:LocationCustomAttributes-BulkDeleteLocationCustomAttributes)
      response,

      which contains a map of responses that each corresponds to an individual
      delete request.
    properties:
      values:
        type: >-
          map<string,
          BulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponse>
        docs: >-
          A map of responses that correspond to individual delete requests. Each
          response has the

          same key as the corresponding request.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  BulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponse:
    docs: >-
      Represents an individual delete response in a
      [BulkDeleteLocationCustomAttributes](api-endpoint:LocationCustomAttributes-BulkDeleteLocationCustomAttributes)

      request.
    properties:
      location_id:
        type: optional<string>
        docs: The ID of the location associated with the custom attribute.
      errors:
        type: optional<list<Error>>
        docs: >-
          Errors that occurred while processing the individual
          LocationCustomAttributeDeleteRequest request
    source:
      openapi: openapi/openapi.json
  BulkDeleteMerchantCustomAttributesRequestMerchantCustomAttributeDeleteRequest:
    docs: >-
      Represents an individual delete request in a
      [BulkDeleteMerchantCustomAttributes](api-endpoint:MerchantCustomAttributes-BulkDeleteMerchantCustomAttributes)

      request. An individual request contains an optional ID of the associated
      custom attribute definition

      and optional key of the associated custom attribute definition.
    properties:
      key:
        type: optional<string>
        docs: >-
          The key of the associated custom attribute definition.

          Represented as a qualified key if the requesting app is not the
          definition owner.
        validation:
          pattern: ^([a-zA-Z0-9_-]+:)?[a-zA-Z0-9_-]{1,60}$
        access: read-only
    source:
      openapi: openapi/openapi.json
  BulkDeleteMerchantCustomAttributesResponse:
    docs: >-
      Represents a
      [BulkDeleteMerchantCustomAttributes](api-endpoint:MerchantCustomAttributes-BulkDeleteMerchantCustomAttributes)
      response,

      which contains a map of responses that each corresponds to an individual
      delete request.
    properties:
      values:
        type: >-
          map<string,
          BulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponse>
        docs: >-
          A map of responses that correspond to individual delete requests. Each
          response has the

          same key as the corresponding request.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  BulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponse:
    docs: >-
      Represents an individual delete response in a
      [BulkDeleteMerchantCustomAttributes](api-endpoint:MerchantCustomAttributes-BulkDeleteMerchantCustomAttributes)

      request.
    properties:
      errors:
        type: optional<list<Error>>
        docs: >-
          Errors that occurred while processing the individual
          MerchantCustomAttributeDeleteRequest request
    source:
      openapi: openapi/openapi.json
  BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute:
    docs: Represents one delete within the bulk operation.
    properties:
      key:
        type: optional<string>
        docs: >-
          The key of the custom attribute to delete.  This key must match the
          key 

          of an existing custom attribute definition.
        validation:
          pattern: ^([a-zA-Z0-9_-]+:)?[a-zA-Z0-9_-]{1,60}$
          minLength: 1
        access: read-only
      order_id:
        type: string
        docs: The ID of the target [order](entity:Order).
        validation:
          minLength: 1
          maxLength: 255
    source:
      openapi: openapi/openapi.json
  BulkDeleteOrderCustomAttributesResponse:
    docs: Represents a response from deleting one or more order custom attributes.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      values:
        type: map<string, DeleteOrderCustomAttributeResponse>
        docs: >2-
           A map of responses that correspond to individual delete requests. Each response has the same ID 
          as the corresponding request and contains either a `custom_attribute`
          or an `errors` field.
    source:
      openapi: openapi/openapi.json
  BulkPublishScheduledShiftsData:
    docs: >-
      Represents options for an individual publish request in a

      [BulkPublishScheduledShifts](api-endpoint:Labor-BulkPublishScheduledShifts)

      operation, provided as the value in a key-value pair.
    properties:
      version:
        type: optional<integer>
        docs: >-
          The current version of the scheduled shift, used to enable [optimistic
          concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)

          control. If the provided version doesn't match the server version, the
          request fails.

          If omitted, Square executes a blind write, potentially overwriting
          data from another publish request.
    source:
      openapi: openapi/openapi.json
  BulkPublishScheduledShiftsResponse:
    docs: >-
      Represents a
      [BulkPublishScheduledShifts](api-endpoint:Labor-BulkPublishScheduledShifts)
      response.

      Either `scheduled_shifts` or `errors` is present in the response.
    properties:
      responses:
        type: optional<map<string, PublishScheduledShiftResponse>>
        docs: >-
          A map of key-value pairs that represent responses for individual
          publish requests.

          The order of responses might differ from the order in which the
          requests were provided.


          - Each key is the scheduled shift ID that was specified for a publish
          request.

          - Each value is the corresponding response. If the request succeeds,
          the value is the

          published scheduled shift. If the request fails, the value is an
          `errors` array containing

          any errors that occurred while processing the request.
      errors:
        type: optional<list<Error>>
        docs: >-
          Any top-level errors that prevented the bulk operation from
          succeeding.
    source:
      openapi: openapi/openapi.json
  BulkRetrieveBookingsResponse:
    docs: Response payload for bulk retrieval of bookings.
    properties:
      bookings:
        type: optional<map<string, GetBookingResponse>>
        docs: >-
          Requested bookings returned as a map containing `booking_id` as the
          key and `RetrieveBookingResponse` as the value.
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  BulkRetrieveCustomersResponse:
    docs: >-
      Defines the fields included in the response body from the

      [BulkRetrieveCustomers](api-endpoint:Customers-BulkRetrieveCustomers)
      endpoint.
    properties:
      responses:
        type: optional<map<string, GetCustomerResponse>>
        docs: >-
          A map of responses that correspond to individual retrieve requests,
          represented by

          key-value pairs.


          Each key is the customer ID that was specified for a retrieve request
          and each value

          is the corresponding response.

          If the request succeeds, the value is the requested customer profile.

          If the request fails, the value contains any errors that occurred
          during the request.
      errors:
        type: optional<list<Error>>
        docs: Any top-level errors that prevented the bulk operation from running.
    source:
      openapi: openapi/openapi.json
  BulkRetrieveTeamMemberBookingProfilesResponse:
    docs: >-
      Response payload for the
      [BulkRetrieveTeamMemberBookingProfiles](api-endpoint:Bookings-BulkRetrieveTeamMemberBookingProfiles)
      endpoint.
    properties:
      team_member_booking_profiles:
        type: optional<map<string, GetTeamMemberBookingProfileResponse>>
        docs: >-
          The returned team members' booking profiles, as a map with
          `team_member_id` as the key and
          [TeamMemberBookingProfile](entity:TeamMemberBookingProfile) the value.
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  BatchGetVendorsResponse:
    docs: >-
      Represents an output from a call to
      [BulkRetrieveVendors](api-endpoint:Vendors-BulkRetrieveVendors).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      responses:
        type: optional<map<string, GetVendorResponse>>
        docs: >-
          The set of [RetrieveVendorResponse](entity:RetrieveVendorResponse)
          objects encapsulating successfully retrieved [Vendor](entity:Vendor)

          objects or error responses for failed attempts. The set is represented
          by 

          a collection of `Vendor`-ID/`Vendor`-object or
          `Vendor`-ID/error-object pairs.
    source:
      openapi: openapi/openapi.json
  BulkSwapPlanResponse:
    docs: |-
      Defines output parameters in a response of the
      [BulkSwapPlan](api-endpoint:Subscriptions-BulkSwapPlan) endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered during the request.
      affected_subscriptions:
        type: optional<integer>
        docs: The number of affected subscriptions.
    source:
      openapi: openapi/openapi.json
  BulkUpdateCustomerData:
    docs: >-
      Defines the customer data provided in individual update requests for a

      [BulkUpdateCustomers](api-endpoint:Customers-BulkUpdateCustomers)
      operation.
    properties:
      given_name:
        type: optional<nullable<string>>
        docs: >-
          The given name (that is, the first name) associated with the customer
          profile.
        validation:
          maxLength: 300
      family_name:
        type: optional<nullable<string>>
        docs: >-
          The family name (that is, the last name) associated with the customer
          profile.
        validation:
          maxLength: 300
      company_name:
        type: optional<nullable<string>>
        docs: A business name associated with the customer profile.
        validation:
          maxLength: 500
      nickname:
        type: optional<nullable<string>>
        docs: A nickname for the customer profile.
        validation:
          maxLength: 100
      email_address:
        type: optional<nullable<string>>
        docs: The email address associated with the customer profile.
        validation:
          maxLength: 254
      address:
        type: optional<Address>
        docs: >-
          The physical address associated with the customer profile. For maximum
          length constraints,

          see [Customer
          addresses](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#address).

          The `first_name` and `last_name` fields are ignored if they are
          present in the request.
      phone_number:
        type: optional<nullable<string>>
        docs: >-
          The phone number associated with the customer profile. The phone
          number must be valid

          and can contain 9–16 digits, with an optional `+` prefix and country
          code. For more information,

          see [Customer phone
          numbers](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#phone-number).
      reference_id:
        type: optional<nullable<string>>
        docs: |-
          An optional second ID used to associate the customer profile with an
          entity in another system.
        validation:
          maxLength: 100
      note:
        type: optional<nullable<string>>
        docs: An custom note associates with the customer profile.
      birthday:
        type: optional<nullable<string>>
        docs: >-
          The birthday associated with the customer profile, in `YYYY-MM-DD` or
          `MM-DD` format.

          For example, specify `1998-09-21` for September 21, 1998, or `09-21`
          for September 21.

          Birthdays are returned in `YYYY-MM-DD` format, where `YYYY` is the
          specified birth year or

          `0000` if a birth year is not specified.
      tax_ids:
        type: optional<CustomerTaxIds>
        docs: >-
          The tax ID associated with the customer profile. This field is
          available only for

          customers of sellers in EU countries or the United Kingdom. For more
          information, see

          [Customer tax
          IDs](https://developer.squareup.com/docs/customers-api/what-it-does#customer-tax-ids).
      version:
        type: optional<long>
        docs: >-
          The current version of the customer profile.


          As a best practice, you should include this field to enable

          [optimistic
          concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)

          control.
    source:
      openapi: openapi/openapi.json
  BulkUpdateCustomersResponse:
    docs: >-
      Defines the fields included in the response body from the

      [BulkUpdateCustomers](api-endpoint:Customers-BulkUpdateCustomers)
      endpoint.
    properties:
      responses:
        type: optional<map<string, UpdateCustomerResponse>>
        docs: >-
          A map of responses that correspond to individual update requests,
          represented by

          key-value pairs.


          Each key is the customer ID that was specified for an update request
          and each value

          is the corresponding response.

          If the request succeeds, the value is the updated customer profile.

          If the request fails, the value contains any errors that occurred
          during the request.
      errors:
        type: optional<list<Error>>
        docs: Any top-level errors that prevented the bulk operation from running.
    source:
      openapi: openapi/openapi.json
  BatchUpdateTeamMembersResponse:
    docs: >-
      Represents a response from a bulk update request containing the updated
      `TeamMember` objects or error messages.
    properties:
      team_members:
        type: optional<map<string, UpdateTeamMemberResponse>>
        docs: >-
          The successfully updated `TeamMember` objects. Each key is the
          `team_member_id` that maps to the `UpdateTeamMemberRequest`.
      errors:
        type: optional<list<Error>>
        docs: The errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  BatchUpdateVendorsResponse:
    docs: >-
      Represents an output from a call to
      [BulkUpdateVendors](api-endpoint:Vendors-BulkUpdateVendors).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered when the request fails.
      responses:
        type: optional<map<string, UpdateVendorResponse>>
        docs: >-
          A set of [UpdateVendorResponse](entity:UpdateVendorResponse) objects
          encapsulating successfully created [Vendor](entity:Vendor)

          objects or error responses for failed attempts. The set is represented
          by a collection of `Vendor`-ID/`UpdateVendorResponse`-object or 

          `Vendor`-ID/error-object pairs.
    source:
      openapi: openapi/openapi.json
  BulkUpsertBookingCustomAttributesResponse:
    docs: >-
      Represents a
      [BulkUpsertBookingCustomAttributes](api-endpoint:BookingCustomAttributes-BulkUpsertBookingCustomAttributes)
      response,

      which contains a map of responses that each corresponds to an individual
      upsert request.
    properties:
      values:
        type: optional<map<string, BookingCustomAttributeUpsertResponse>>
        docs: >-
          A map of responses that correspond to individual upsert requests. Each
          response has the

          same ID as the corresponding request and contains either a
          `booking_id` and `custom_attribute` or an `errors` field.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  BatchUpsertCustomerCustomAttributesRequestCustomerCustomAttributeUpsertRequest:
    docs: >-
      Represents an individual upsert request in a
      [BulkUpsertCustomerCustomAttributes](api-endpoint:CustomerCustomAttributes-BulkUpsertCustomerCustomAttributes)

      request. An individual request contains a customer ID, the custom
      attribute to create or update,

      and an optional idempotency key.
    properties:
      customer_id:
        type: string
        docs: The ID of the target [customer profile](entity:Customer).
        validation:
          minLength: 1
      custom_attribute:
        type: CustomAttribute
        docs: >-
          The custom attribute to create or update, with following fields:


          - `key`. This key must match the `key` of a custom attribute
          definition in the Square seller 

          account. If the requesting application is not the definition owner,
          you must provide the qualified key.


          - `value`. This value must conform to the `schema` specified by the
          definition. 

          For more information, see [Value data
          types](https://developer.squareup.com/docs/customer-custom-attributes-api/custom-attributes#value-data-types).


          - `version`. To enable [optimistic
          concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)

          control for update operations, include this optional field in the
          request and set the

          value to the current version of the custom attribute.
      idempotency_key:
        type: optional<nullable<string>>
        docs: >-
          A unique identifier for this individual upsert request, used to ensure
          idempotency.

          For more information, see
          [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).
        validation:
          maxLength: 45
    source:
      openapi: openapi/openapi.json
  BatchUpsertCustomerCustomAttributesResponse:
    docs: >-
      Represents a
      [BulkUpsertCustomerCustomAttributes](api-endpoint:CustomerCustomAttributes-BulkUpsertCustomerCustomAttributes)
      response,

      which contains a map of responses that each corresponds to an individual
      upsert request.
    properties:
      values:
        type: >-
          optional<map<string,
          BatchUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponse>>
        docs: >-
          A map of responses that correspond to individual upsert requests. Each
          response has the

          same ID as the corresponding request and contains either a
          `customer_id` and `custom_attribute` or an `errors` field.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  BatchUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponse:
    docs: >-
      Represents a response for an individual upsert request in a
      [BulkUpsertCustomerCustomAttributes](api-endpoint:CustomerCustomAttributes-BulkUpsertCustomerCustomAttributes)
      operation.
    properties:
      customer_id:
        type: optional<string>
        docs: The ID of the customer profile associated with the custom attribute.
      custom_attribute:
        type: optional<CustomAttribute>
        docs: The new or updated custom attribute.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred while processing the individual request.
    source:
      openapi: openapi/openapi.json
  BulkUpsertLocationCustomAttributesRequestLocationCustomAttributeUpsertRequest:
    docs: >-
      Represents an individual upsert request in a
      [BulkUpsertLocationCustomAttributes](api-endpoint:LocationCustomAttributes-BulkUpsertLocationCustomAttributes)

      request. An individual request contains a location ID, the custom
      attribute to create or update,

      and an optional idempotency key.
    properties:
      location_id:
        type: string
        docs: The ID of the target [location](entity:Location).
        validation:
          minLength: 1
      custom_attribute:
        type: CustomAttribute
        docs: >-
          The custom attribute to create or update, with following fields:

          - `key`. This key must match the `key` of a custom attribute
          definition in the Square seller

          account. If the requesting application is not the definition owner,
          you must provide the qualified key.

          - `value`. This value must conform to the `schema` specified by the
          definition.

          For more information, see [Supported data
          types](https://developer.squareup.com/docs/devtools/customattributes/overview#supported-data-types)..

          - `version`. To enable [optimistic
          concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)

          control, specify the current version of the custom attribute. 

          If this is not important for your application, `version` can be set to
          -1.
      idempotency_key:
        type: optional<nullable<string>>
        docs: >-
          A unique identifier for this individual upsert request, used to ensure
          idempotency.

          For more information, see
          [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).
        validation:
          maxLength: 45
    source:
      openapi: openapi/openapi.json
  BulkUpsertLocationCustomAttributesResponse:
    docs: >-
      Represents a
      [BulkUpsertLocationCustomAttributes](api-endpoint:LocationCustomAttributes-BulkUpsertLocationCustomAttributes)
      response,

      which contains a map of responses that each corresponds to an individual
      upsert request.
    properties:
      values:
        type: >-
          optional<map<string,
          BulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponse>>
        docs: >-
          A map of responses that correspond to individual upsert requests. Each
          response has the

          same ID as the corresponding request and contains either a
          `location_id` and `custom_attribute` or an `errors` field.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  BulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponse:
    docs: >-
      Represents a response for an individual upsert request in a
      [BulkUpsertLocationCustomAttributes](api-endpoint:LocationCustomAttributes-BulkUpsertLocationCustomAttributes)
      operation.
    properties:
      location_id:
        type: optional<string>
        docs: The ID of the location associated with the custom attribute.
      custom_attribute:
        type: optional<CustomAttribute>
        docs: The new or updated custom attribute.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred while processing the individual request.
    source:
      openapi: openapi/openapi.json
  BulkUpsertMerchantCustomAttributesRequestMerchantCustomAttributeUpsertRequest:
    docs: >-
      Represents an individual upsert request in a
      [BulkUpsertMerchantCustomAttributes](api-endpoint:MerchantCustomAttributes-BulkUpsertMerchantCustomAttributes)

      request. An individual request contains a merchant ID, the custom
      attribute to create or update,

      and an optional idempotency key.
    properties:
      merchant_id:
        type: string
        docs: The ID of the target [merchant](entity:Merchant).
        validation:
          minLength: 1
      custom_attribute:
        type: CustomAttribute
        docs: >-
          The custom attribute to create or update, with following fields:

          - `key`. This key must match the `key` of a custom attribute
          definition in the Square seller

          account. If the requesting application is not the definition owner,
          you must provide the qualified key.

          - `value`. This value must conform to the `schema` specified by the
          definition.

          For more information, see [Supported data
          types](https://developer.squareup.com/docs/devtools/customattributes/overview#supported-data-types).

          - The version field must match the current version of the custom
          attribute definition to enable

          [optimistic
          concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)

          If this is not important for your application, version can be set to
          -1. For any other values, the request fails with a BAD_REQUEST error.
      idempotency_key:
        type: optional<nullable<string>>
        docs: >-
          A unique identifier for this individual upsert request, used to ensure
          idempotency.

          For more information, see
          [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).
        validation:
          maxLength: 45
    source:
      openapi: openapi/openapi.json
  BulkUpsertMerchantCustomAttributesResponse:
    docs: >-
      Represents a
      [BulkUpsertMerchantCustomAttributes](api-endpoint:MerchantCustomAttributes-BulkUpsertMerchantCustomAttributes)
      response,

      which contains a map of responses that each corresponds to an individual
      upsert request.
    properties:
      values:
        type: >-
          optional<map<string,
          BulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponse>>
        docs: >-
          A map of responses that correspond to individual upsert requests. Each
          response has the

          same ID as the corresponding request and contains either a
          `merchant_id` and `custom_attribute` or an `errors` field.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  BulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponse:
    docs: >-
      Represents a response for an individual upsert request in a
      [BulkUpsertMerchantCustomAttributes](api-endpoint:MerchantCustomAttributes-BulkUpsertMerchantCustomAttributes)
      operation.
    properties:
      merchant_id:
        type: optional<string>
        docs: The ID of the merchant associated with the custom attribute.
      custom_attribute:
        type: optional<CustomAttribute>
        docs: The new or updated custom attribute.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred while processing the individual request.
    source:
      openapi: openapi/openapi.json
  BulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute:
    docs: Represents one upsert within the bulk operation.
    properties:
      custom_attribute:
        type: CustomAttribute
        docs: >-
          The custom attribute to create or update, with the following fields:


          - `value`. This value must conform to the `schema` specified by the
          definition. 

          For more information, see [Value data
          types](https://developer.squareup.com/docs/customer-custom-attributes-api/custom-attributes#value-data-types).


          - `version`. To enable [optimistic
          concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)

          control, include this optional field and specify the current version
          of the custom attribute.
      idempotency_key:
        type: optional<nullable<string>>
        docs: >-
          A unique identifier for this request, used to ensure idempotency. 

          For more information, see
          [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).
        validation:
          minLength: 1
          maxLength: 45
      order_id:
        type: string
        docs: The ID of the target [order](entity:Order).
        validation:
          minLength: 1
          maxLength: 255
    source:
      openapi: openapi/openapi.json
  BulkUpsertOrderCustomAttributesResponse:
    docs: Represents a response from a bulk upsert of order custom attributes.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      values:
        type: map<string, UpsertOrderCustomAttributeResponse>
        docs: ' A map of responses that correspond to individual upsert operations for custom attributes.'
    source:
      openapi: openapi/openapi.json
  BusinessAppointmentSettings:
    docs: >-
      The service appointment settings, including where and how the service is
      provided.
    properties:
      location_types:
        type: >-
          optional<nullable<list<BusinessAppointmentSettingsBookingLocationType>>>
        docs: >-
          Types of the location allowed for bookings.

          See
          [BusinessAppointmentSettingsBookingLocationType](#type-businessappointmentsettingsbookinglocationtype)
          for possible values
      alignment_time:
        type: optional<BusinessAppointmentSettingsAlignmentTime>
        docs: >-
          The time unit of the service duration for bookings.

          See
          [BusinessAppointmentSettingsAlignmentTime](#type-businessappointmentsettingsalignmenttime)
          for possible values
      min_booking_lead_time_seconds:
        type: optional<nullable<integer>>
        docs: >-
          The minimum lead time in seconds before a service can be booked. A
          booking must be created at least this amount of time before its
          starting time.
      max_booking_lead_time_seconds:
        type: optional<nullable<integer>>
        docs: >-
          The maximum lead time in seconds before a service can be booked. A
          booking must be created at most this amount of time before its
          starting time.
      any_team_member_booking_enabled:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether a customer can choose from all available time slots
          and have a staff member assigned

          automatically (`true`) or not (`false`).
      multiple_service_booking_enabled:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether a customer can book multiple services in a single
          online booking.
      max_appointments_per_day_limit_type:
        type: optional<BusinessAppointmentSettingsMaxAppointmentsPerDayLimitType>
        docs: >-
          Indicates whether the daily appointment limit applies to team members
          or to

          business locations.

          See
          [BusinessAppointmentSettingsMaxAppointmentsPerDayLimitType](#type-businessappointmentsettingsmaxappointmentsperdaylimittype)
          for possible values
      max_appointments_per_day_limit:
        type: optional<nullable<integer>>
        docs: >-
          The maximum number of daily appointments per team member or per
          location.
      cancellation_window_seconds:
        type: optional<nullable<integer>>
        docs: >-
          The cut-off time in seconds for allowing clients to cancel or
          reschedule an appointment.
      cancellation_fee_money:
        type: optional<Money>
        docs: The flat-fee amount charged for a no-show booking.
      cancellation_policy:
        type: optional<BusinessAppointmentSettingsCancellationPolicy>
        docs: >-
          The cancellation policy adopted by the seller.

          See
          [BusinessAppointmentSettingsCancellationPolicy](#type-businessappointmentsettingscancellationpolicy)
          for possible values
      cancellation_policy_text:
        type: optional<nullable<string>>
        docs: The free-form text of the seller's cancellation policy.
        validation:
          maxLength: 65536
      skip_booking_flow_staff_selection:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether customers has an assigned staff member (`true`) or
          can select s staff member of their choice (`false`).
    source:
      openapi: openapi/openapi.json
  BusinessAppointmentSettingsAlignmentTime:
    enum:
      - SERVICE_DURATION
      - QUARTER_HOURLY
      - HALF_HOURLY
      - HOURLY
    docs: Time units of a service duration for bookings.
    source:
      openapi: openapi/openapi.json
  BusinessAppointmentSettingsBookingLocationType:
    enum:
      - BUSINESS_LOCATION
      - CUSTOMER_LOCATION
      - PHONE
    docs: Supported types of location where service is provided.
    source:
      openapi: openapi/openapi.json
  BusinessAppointmentSettingsCancellationPolicy:
    enum:
      - CANCELLATION_TREATED_AS_NO_SHOW
      - CUSTOM_POLICY
    docs: The category of the seller’s cancellation policy.
    source:
      openapi: openapi/openapi.json
  BusinessAppointmentSettingsMaxAppointmentsPerDayLimitType:
    enum:
      - PER_TEAM_MEMBER
      - PER_LOCATION
    docs: Types of daily appointment limits.
    source:
      openapi: openapi/openapi.json
  BusinessBookingProfile:
    docs: >-
      A seller's business booking profile, including booking policy, appointment
      settings, etc.
    properties:
      seller_id:
        type: optional<nullable<string>>
        docs: The ID of the seller, obtainable using the Merchants API.
        validation:
          maxLength: 32
      created_at:
        type: optional<string>
        docs: The RFC 3339 timestamp specifying the booking's creation time.
        access: read-only
      booking_enabled:
        type: optional<nullable<boolean>>
        docs: Indicates whether the seller is open for booking.
      customer_timezone_choice:
        type: optional<BusinessBookingProfileCustomerTimezoneChoice>
        docs: >-
          The choice of customer's time zone information of a booking.

          The Square online booking site and all notifications to customers uses
          either the seller location’s time zone

          or the time zone the customer chooses at booking.

          See
          [BusinessBookingProfileCustomerTimezoneChoice](#type-businessbookingprofilecustomertimezonechoice)
          for possible values
      booking_policy:
        type: optional<BusinessBookingProfileBookingPolicy>
        docs: >-
          The policy for the seller to automatically accept booking requests
          (`ACCEPT_ALL`) or not (`REQUIRES_ACCEPTANCE`).

          See
          [BusinessBookingProfileBookingPolicy](#type-businessbookingprofilebookingpolicy)
          for possible values
      allow_user_cancel:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether customers can cancel or reschedule their own
          bookings (`true`) or not (`false`).
      business_appointment_settings:
        type: optional<BusinessAppointmentSettings>
        docs: Settings for appointment-type bookings.
      support_seller_level_writes:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether the seller's subscription to Square Appointments
          supports creating, updating or canceling an appointment through the
          API (`true`) or not (`false`) using seller permission.
    source:
      openapi: openapi/openapi.json
  BusinessBookingProfileBookingPolicy:
    enum:
      - ACCEPT_ALL
      - REQUIRES_ACCEPTANCE
    docs: Policies for accepting bookings.
    source:
      openapi: openapi/openapi.json
  BusinessBookingProfileCustomerTimezoneChoice:
    enum:
      - BUSINESS_LOCATION_TIMEZONE
      - CUSTOMER_CHOICE
    docs: Choices of customer-facing time zone used for bookings.
    source:
      openapi: openapi/openapi.json
  BusinessHours:
    docs: The hours of operation for a location.
    properties:
      periods:
        type: optional<nullable<list<BusinessHoursPeriod>>>
        docs: >-
          The list of time periods during which the business is open. There can
          be at most 10 periods per day.
    source:
      openapi: openapi/openapi.json
  BusinessHoursPeriod:
    docs: Represents a period of time during which a business location is open.
    properties:
      day_of_week:
        type: optional<DayOfWeek>
        docs: |-
          The day of the week for this time period.
          See [DayOfWeek](#type-dayofweek) for possible values
      start_local_time:
        type: optional<nullable<string>>
        docs: >-
          The start time of a business hours period, specified in local time
          using partial-time

          RFC 3339 format. For example, `8:30:00` for a period starting at 8:30
          in the morning.

          Note that the seconds value is always :00, but it is appended for
          conformance to the RFC.
      end_local_time:
        type: optional<nullable<string>>
        docs: >-
          The end time of a business hours period, specified in local time using
          partial-time

          RFC 3339 format. For example, `21:00:00` for a period ending at 9:00
          in the evening.

          Note that the seconds value is always :00, but it is appended for
          conformance to the RFC.
    source:
      openapi: openapi/openapi.json
  BuyNowPayLaterDetails:
    docs: Additional details about a Buy Now Pay Later payment type.
    properties:
      brand:
        type: optional<nullable<string>>
        docs: |-
          The brand used for the Buy Now Pay Later payment.
          The brand can be `AFTERPAY`, `CLEARPAY` or `UNKNOWN`.
        validation:
          maxLength: 50
      afterpay_details:
        type: optional<AfterpayDetails>
        docs: >-
          Details about an Afterpay payment. These details are only populated if
          the `brand` is

          `AFTERPAY`.
      clearpay_details:
        type: optional<ClearpayDetails>
        docs: >-
          Details about a Clearpay payment. These details are only populated if
          the `brand` is

          `CLEARPAY`.
    source:
      openapi: openapi/openapi.json
  CalculateLoyaltyPointsResponse:
    docs: >-
      Represents a
      [CalculateLoyaltyPoints](api-endpoint:Loyalty-CalculateLoyaltyPoints)
      response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      points:
        type: optional<integer>
        docs: >-
          The number of points that the buyer can earn from the base loyalty
          program.
      promotion_points:
        type: optional<integer>
        docs: >-
          The number of points that the buyer can earn from a loyalty promotion.
          To be eligible

          to earn promotion points, the purchase must first qualify for program
          points. When `order_id`

          is not provided in the request, this value is always 0.
    source:
      openapi: openapi/openapi.json
  CalculateOrderResponse:
    properties:
      order:
        type: optional<Order>
        docs: The calculated version of the order provided in the request.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CancelBookingResponse:
    properties:
      booking:
        type: optional<Booking>
        docs: The booking that was cancelled.
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CancelInvoiceResponse:
    docs: The response returned by the `CancelInvoice` request.
    properties:
      invoice:
        type: optional<Invoice>
        docs: The canceled invoice.
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  CancelLoyaltyPromotionResponse:
    docs: >-
      Represents a
      [CancelLoyaltyPromotion](api-endpoint:Loyalty-CancelLoyaltyPromotion)
      response.

      Either `loyalty_promotion` or `errors` is present in the response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      loyalty_promotion:
        type: optional<LoyaltyPromotion>
        docs: The canceled loyalty promotion.
    source:
      openapi: openapi/openapi.json
  CancelPaymentByIdempotencyKeyResponse:
    docs: >-
      Defines the response returned by 

      [CancelPaymentByIdempotencyKey](api-endpoint:Payments-CancelPaymentByIdempotencyKey).

      On success, `errors` is empty.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CancelPaymentResponse:
    docs: >-
      Defines the response returned by
      [CancelPayment](api-endpoint:Payments-CancelPayment).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      payment:
        type: optional<Payment>
        docs: The successfully canceled `Payment` object.
    source:
      openapi: openapi/openapi.json
  CancelSubscriptionResponse:
    docs: >-
      Defines output parameters in a response from the 

      [CancelSubscription](api-endpoint:Subscriptions-CancelSubscription)
      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered during the request.
      subscription:
        type: optional<Subscription>
        docs: >-
          The specified subscription scheduled for cancellation according to the
          action created by the request.
      actions:
        type: optional<list<SubscriptionAction>>
        docs: A list of a single `CANCEL` action scheduled for the subscription.
    source:
      openapi: openapi/openapi.json
  CancelTerminalActionResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      action:
        type: optional<TerminalAction>
        docs: The canceled `TerminalAction`
    source:
      openapi: openapi/openapi.json
  CancelTerminalCheckoutResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      checkout:
        type: optional<TerminalCheckout>
        docs: The canceled `TerminalCheckout`.
    source:
      openapi: openapi/openapi.json
  CancelTerminalRefundResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      refund:
        type: optional<TerminalRefund>
        docs: The updated `TerminalRefund`.
    source:
      openapi: openapi/openapi.json
  CaptureTransactionResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [CaptureTransaction](api-endpoint:Transactions-CaptureTransaction)
      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  Card:
    docs: |-
      Represents the payment details of a card to be used for payments. These
      details are determined by the payment token generated by Web Payments SDK.
    properties:
      id:
        type: optional<string>
        docs: Unique ID for this card. Generated by Square.
        validation:
          maxLength: 64
        access: read-only
      card_brand:
        type: optional<CardBrand>
        docs: |-
          The card's brand.
          See [CardBrand](#type-cardbrand) for possible values
      last_4:
        type: optional<string>
        docs: The last 4 digits of the card number.
        validation:
          maxLength: 4
        access: read-only
      exp_month:
        type: optional<nullable<long>>
        docs: >-
          The expiration month of the associated card as an integer between 1
          and 12.
      exp_year:
        type: optional<nullable<long>>
        docs: The four-digit year of the card's expiration date.
      cardholder_name:
        type: optional<nullable<string>>
        docs: The name of the cardholder.
        validation:
          maxLength: 96
      billing_address:
        type: optional<Address>
        docs: >-
          The billing address for this card. `US` postal codes can be provided
          as a 5-digit zip code

          or 9-digit ZIP+4 (example: `12345-6789`). For a full list of field
          meanings by country, see

          [Working with
          Addresses](https://developer.squareup.com/docs/build-basics/common-data-types/working-with-addresses).
      fingerprint:
        type: optional<string>
        docs: >-
          Intended as a Square-assigned identifier, based

          on the card number, to identify the card across multiple locations
          within a

          single application.
        validation:
          maxLength: 255
        access: read-only
      customer_id:
        type: optional<nullable<string>>
        docs: >-
          **Required** The ID of a [customer](entity:Customer) to be associated
          with the card.
      merchant_id:
        type: optional<string>
        docs: The ID of the merchant associated with the card.
        access: read-only
      reference_id:
        type: optional<nullable<string>>
        docs: >-
          An optional user-defined reference ID that associates this card with

          another entity in an external system. For example, a customer ID from
          an

          external customer management system.
        validation:
          maxLength: 128
      enabled:
        type: optional<boolean>
        docs: Indicates whether or not a card can be used for payments.
        access: read-only
      card_type:
        type: optional<CardType>
        docs: >-
          The type of the card.

          The Card object includes this field only in response to Payments API
          calls.

          See [CardType](#type-cardtype) for possible values
      prepaid_type:
        type: optional<CardPrepaidType>
        docs: |-
          Indicates whether the card is prepaid or not.
          See [CardPrepaidType](#type-cardprepaidtype) for possible values
      bin:
        type: optional<string>
        docs: >-
          The first six digits of the card number, known as the Bank
          Identification Number (BIN). Only the Payments API

          returns this field.
        validation:
          maxLength: 6
        access: read-only
      version:
        type: optional<long>
        docs: >-
          Current version number of the card. Increments with each card update.
          Requests to update an

          existing Card object will be rejected unless the version in the
          request matches the current

          version for the Card.
      card_co_brand:
        type: optional<CardCoBrand>
        docs: >-
          The card's co-brand if available. For example, an Afterpay virtual
          card would have a

          co-brand of AFTERPAY.

          See [CardCoBrand](#type-cardcobrand) for possible values
      issuer_alert:
        type: optional<CardIssuerAlert>
        docs: >-
          An alert from the issuing bank about the card status. Alerts can
          indicate whether

          future charges to the card are likely to fail. For more information,
          see

          [Manage Card on File
          Declines](https://developer.squareup.com/docs/cards-api/manage-card-on-file-declines).


          This field is present only if there's an active issuer alert.

          See [IssuerAlert](#type-issueralert) for possible values
      issuer_alert_at:
        type: optional<string>
        docs: >-
          The timestamp of when the current issuer alert was received and
          processed, in

          RFC 3339 format.


          This field is present only if there's an active issuer alert.
        access: read-only
      hsa_fsa:
        type: optional<boolean>
        docs: >-
          Indicates whether the card is linked to a Health Savings Account (HSA)
          or Flexible

          Spending Account (FSA), based on the card BIN.
        access: read-only
    source:
      openapi: openapi/openapi.json
  CardAutomaticallyUpdatedEvent:
    docs: >-
      Published when Square automatically updates the expiration date or

      primary account number (PAN) of a [card](entity:Card) or adds or removes
      an issuer alert.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of this event. The value is `"card.automatically_updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CardAutomaticallyUpdatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  CardAutomaticallyUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: The type of the event data object. The value is `"card"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the event data object.
        validation:
          maxLength: 192
      object:
        type: optional<CardAutomaticallyUpdatedEventObject>
        docs: An object containing the automatically updated card.
    source:
      openapi: openapi/openapi.json
  CardAutomaticallyUpdatedEventObject:
    properties:
      card:
        type: optional<Card>
        docs: The automatically updated card.
    source:
      openapi: openapi/openapi.json
  CardBrand:
    enum:
      - OTHER_BRAND
      - VISA
      - MASTERCARD
      - AMERICAN_EXPRESS
      - DISCOVER
      - DISCOVER_DINERS
      - JCB
      - CHINA_UNIONPAY
      - SQUARE_GIFT_CARD
      - SQUARE_CAPITAL_CARD
      - INTERAC
      - EFTPOS
      - FELICA
      - EBT
    docs: Indicates a card's brand, such as `VISA` or `MASTERCARD`.
    source:
      openapi: openapi/openapi.json
  CardCoBrand:
    enum:
      - UNKNOWN
      - AFTERPAY
      - CLEARPAY
    docs: Indicates the brand for a co-branded card.
    source:
      openapi: openapi/openapi.json
  CardCreatedEvent:
    docs: Published when a [card](entity:Card) is created or imported.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of this event. The value is `"card.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CardCreatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  CardCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: The type of the event data object. The value is `"card"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the event data object.
        validation:
          maxLength: 192
      object:
        type: optional<CardCreatedEventObject>
        docs: An object containing the created card.
    source:
      openapi: openapi/openapi.json
  CardCreatedEventObject:
    properties:
      card:
        type: optional<Card>
        docs: The created card.
    source:
      openapi: openapi/openapi.json
  CardDisabledEvent:
    docs: Published when a [card](entity:Card) is disabled.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of this event. The value is `"card.disabled"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CardDisabledEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  CardDisabledEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: The type of the event data object. The value is `"card"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the event data object.
        validation:
          maxLength: 192
      object:
        type: optional<CardDisabledEventObject>
        docs: An object containing the disabled card.
    source:
      openapi: openapi/openapi.json
  CardDisabledEventObject:
    properties:
      card:
        type: optional<Card>
        docs: The disabled card.
    source:
      openapi: openapi/openapi.json
  CardForgottenEvent:
    docs: Published when a [card](entity:Card) is GDPR forgotten or vaulted.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of this event. The value is `"card.forgotten"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CardForgottenEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  CardForgottenEventCard:
    properties:
      id:
        type: optional<string>
        docs: Unique ID for this card. Generated by Square.
        validation:
          maxLength: 64
        access: read-only
      customer_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of a customer created using the Customers API associated with
          the card.
      enabled:
        type: optional<nullable<boolean>>
        docs: Indicates whether or not a card can be used for payments.
      reference_id:
        type: optional<nullable<string>>
        docs: >-
          An optional user-defined reference ID that associates this card with

          another entity in an external system. For example, a customer ID from
          an

          external customer management system.
      version:
        type: optional<long>
        docs: >-
          Current version number of the card. Increments with each card update.
          Requests to update an

          existing Card object will be rejected unless the version in the
          request matches the current

          version for the Card.
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the merchant associated with the card.
    source:
      openapi: openapi/openapi.json
  CardForgottenEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: The type of the event data object. The value is `"card"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the event data object.
        validation:
          maxLength: 192
      object:
        type: optional<CardForgottenEventObject>
        docs: An object containing the forgotten card.
    source:
      openapi: openapi/openapi.json
  CardForgottenEventObject:
    properties:
      card:
        type: optional<CardForgottenEventCard>
        docs: The forgotten card.
    source:
      openapi: openapi/openapi.json
  CardIssuerAlert:
    type: literal<"ISSUER_ALERT_CARD_CLOSED">
    docs: Indicates the type of issuer alert for a [card on file](entity:Card).
  CardPaymentDetails:
    docs: >-
      Reflects the current status of a card payment. Contains only
      non-confidential information.
    properties:
      status:
        type: optional<nullable<string>>
        docs: >-
          The card payment's current state. The state can be AUTHORIZED,
          CAPTURED, VOIDED, or

          FAILED.
        validation:
          maxLength: 50
      card:
        type: optional<Card>
        docs: The credit card's non-confidential details.
      entry_method:
        type: optional<nullable<string>>
        docs: >-
          The method used to enter the card's details for the payment. The
          method can be

          `KEYED`, `SWIPED`, `EMV`, `ON_FILE`, or `CONTACTLESS`.
        validation:
          maxLength: 50
      cvv_status:
        type: optional<nullable<string>>
        docs: >-
          The status code returned from the Card Verification Value (CVV) check.
          The code can be

          `CVV_ACCEPTED`, `CVV_REJECTED`, or `CVV_NOT_CHECKED`.
        validation:
          maxLength: 50
      avs_status:
        type: optional<nullable<string>>
        docs: >-
          The status code returned from the Address Verification System (AVS)
          check. The code can be

          `AVS_ACCEPTED`, `AVS_REJECTED`, or `AVS_NOT_CHECKED`.
        validation:
          maxLength: 50
      auth_result_code:
        type: optional<nullable<string>>
        docs: >-
          The status code returned by the card issuer that describes the
          payment's

          authorization status.
        validation:
          maxLength: 10
      application_identifier:
        type: optional<nullable<string>>
        docs: >-
          For EMV payments, the application ID identifies the EMV application
          used for the payment.
        validation:
          maxLength: 32
      application_name:
        type: optional<nullable<string>>
        docs: >-
          For EMV payments, the human-readable name of the EMV application used
          for the payment.
        validation:
          maxLength: 16
      application_cryptogram:
        type: optional<nullable<string>>
        docs: For EMV payments, the cryptogram generated for the payment.
        validation:
          maxLength: 16
      verification_method:
        type: optional<nullable<string>>
        docs: >-
          For EMV payments, the method used to verify the cardholder's identity.
          The method can be

          `PIN`, `SIGNATURE`, `PIN_AND_SIGNATURE`, `ON_DEVICE`, or `NONE`.
        validation:
          maxLength: 50
      verification_results:
        type: optional<nullable<string>>
        docs: >-
          For EMV payments, the results of the cardholder verification. The
          result can be

          `SUCCESS`, `FAILURE`, or `UNKNOWN`.
        validation:
          maxLength: 50
      statement_description:
        type: optional<nullable<string>>
        docs: >-
          The statement description sent to the card networks.


          Note: The actual statement description varies and is likely to be
          truncated and appended with

          additional information on a per issuer basis.
        validation:
          maxLength: 50
      device_details:
        type: optional<DeviceDetails>
        docs: |-
          __Deprecated__: Use `Payment.device_details` instead.

          Details about the device that took the payment.
      card_payment_timeline:
        type: optional<CardPaymentTimeline>
        docs: The timeline for card payments.
      refund_requires_card_presence:
        type: optional<nullable<boolean>>
        docs: |-
          Whether the card must be physically present for the payment to
          be refunded.  If set to `true`, the card must be present.
      errors:
        type: optional<nullable<list<Error>>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  CardPaymentTimeline:
    docs: The timeline for card payments.
    properties:
      authorized_at:
        type: optional<nullable<string>>
        docs: The timestamp when the payment was authorized, in RFC 3339 format.
      captured_at:
        type: optional<nullable<string>>
        docs: The timestamp when the payment was captured, in RFC 3339 format.
      voided_at:
        type: optional<nullable<string>>
        docs: The timestamp when the payment was voided, in RFC 3339 format.
    source:
      openapi: openapi/openapi.json
  CardPrepaidType:
    enum:
      - UNKNOWN_PREPAID_TYPE
      - NOT_PREPAID
      - PREPAID
    docs: Indicates a card's prepaid type, such as `NOT_PREPAID` or `PREPAID`.
    source:
      openapi: openapi/openapi.json
  CardType:
    enum:
      - UNKNOWN_CARD_TYPE
      - CREDIT
      - DEBIT
    docs: Indicates a card's type, such as `CREDIT` or `DEBIT`.
    source:
      openapi: openapi/openapi.json
  CardUpdatedEvent:
    docs: >-
      Published when a [card](entity:Card) is updated by the seller in the
      Square Dashboard.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of this event. The value is `"card.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CardUpdatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  CardUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: The type of the event data object. The value is `"card"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the event data object.
        validation:
          maxLength: 192
      object:
        type: optional<CardUpdatedEventObject>
        docs: An object containing the updated card.
    source:
      openapi: openapi/openapi.json
  CardUpdatedEventObject:
    properties:
      card:
        type: optional<Card>
        docs: The updated card.
    source:
      openapi: openapi/openapi.json
  CashAppDetails:
    docs: >-
      Additional details about `WALLET` type payments with the `brand` of
      `CASH_APP`.
    properties:
      buyer_full_name:
        type: optional<nullable<string>>
        docs: The name of the Cash App account holder.
        validation:
          maxLength: 255
      buyer_country_code:
        type: optional<nullable<string>>
        docs: >-
          The country of the Cash App account holder, in ISO 3166-1-alpha-2
          format.


          For possible values, see [Country](entity:Country).
        validation:
          minLength: 2
          maxLength: 2
      buyer_cashtag:
        type: optional<string>
        docs: $Cashtag of the Cash App account holder.
        validation:
          minLength: 1
          maxLength: 21
        access: read-only
    source:
      openapi: openapi/openapi.json
  CashDrawerDevice:
    properties:
      id:
        type: optional<string>
        docs: The device Square-issued ID
      name:
        type: optional<nullable<string>>
        docs: The device merchant-specified name.
    source:
      openapi: openapi/openapi.json
  CashDrawerEventType:
    enum:
      - NO_SALE
      - CASH_TENDER_PAYMENT
      - OTHER_TENDER_PAYMENT
      - CASH_TENDER_CANCELLED_PAYMENT
      - OTHER_TENDER_CANCELLED_PAYMENT
      - CASH_TENDER_REFUND
      - OTHER_TENDER_REFUND
      - PAID_IN
      - PAID_OUT
    docs: |-
      The types of events on a CashDrawerShift.
      Each event type represents an employee action on the actual cash drawer
      represented by a CashDrawerShift.
    source:
      openapi: openapi/openapi.json
  CashDrawerShift:
    docs: >-
      This model gives the details of a cash drawer shift.

      The cash_payment_money, cash_refund_money, cash_paid_in_money,

      and cash_paid_out_money fields are all computed by summing their
      respective

      event types.
    properties:
      id:
        type: optional<string>
        docs: The shift unique ID.
      state:
        type: optional<CashDrawerShiftState>
        docs: >-
          The shift current state.

          See [CashDrawerShiftState](#type-cashdrawershiftstate) for possible
          values
      opened_at:
        type: optional<nullable<string>>
        docs: The time when the shift began, in ISO 8601 format.
      ended_at:
        type: optional<nullable<string>>
        docs: The time when the shift ended, in ISO 8601 format.
      closed_at:
        type: optional<nullable<string>>
        docs: The time when the shift was closed, in ISO 8601 format.
      description:
        type: optional<nullable<string>>
        docs: The free-form text description of a cash drawer by an employee.
      opened_cash_money:
        type: optional<Money>
        docs: |-
          The amount of money in the cash drawer at the start of the shift.
          The amount must be greater than or equal to zero.
      cash_payment_money:
        type: optional<Money>
        docs: >-
          The amount of money added to the cash drawer from cash payments.

          This is computed by summing all events with the types
          CASH_TENDER_PAYMENT and

          CASH_TENDER_CANCELED_PAYMENT. The amount is always greater than or
          equal to

          zero.
      cash_refunds_money:
        type: optional<Money>
        docs: >-
          The amount of money removed from the cash drawer from cash refunds.

          It is computed by summing the events of type CASH_TENDER_REFUND. The
          amount

          is always greater than or equal to zero.
      cash_paid_in_money:
        type: optional<Money>
        docs: >-
          The amount of money added to the cash drawer for reasons other than
          cash

          payments. It is computed by summing the events of type PAID_IN. The
          amount is

          always greater than or equal to zero.
      cash_paid_out_money:
        type: optional<Money>
        docs: >-
          The amount of money removed from the cash drawer for reasons other
          than

          cash refunds. It is computed by summing the events of type PAID_OUT.
          The amount

          is always greater than or equal to zero.
      expected_cash_money:
        type: optional<Money>
        docs: >-
          The amount of money that should be in the cash drawer at the end of
          the

          shift, based on the shift's other money amounts.

          This can be negative if employees have not correctly recorded all the
          events

          on the cash drawer.

          cash_paid_out_money is a summation of amounts from cash_payment_money
          (zero

          or positive), cash_refunds_money (zero or negative),
          cash_paid_in_money (zero

          or positive), and cash_paid_out_money (zero or negative) event types.
      closed_cash_money:
        type: optional<Money>
        docs: |-
          The amount of money found in the cash drawer at the end of the shift
          by an auditing employee. The amount should be positive.
      device:
        type: optional<CashDrawerDevice>
        docs: >-
          The device running Square Point of Sale that was connected to the cash
          drawer.
      created_at:
        type: optional<string>
        docs: The shift start time in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: The shift updated at time in RFC 3339 format.
        access: read-only
      location_id:
        type: optional<string>
        docs: The ID of the location the cash drawer shift belongs to.
        access: read-only
      team_member_ids:
        type: optional<list<string>>
        docs: >-
          The IDs of all team members that were logged into Square Point of Sale
          at any

          point while the cash drawer shift was open.
        access: read-only
      opening_team_member_id:
        type: optional<string>
        docs: The ID of the team member that started the cash drawer shift.
        access: read-only
      ending_team_member_id:
        type: optional<string>
        docs: The ID of the team member that ended the cash drawer shift.
        access: read-only
      closing_team_member_id:
        type: optional<string>
        docs: >-
          The ID of the team member that closed the cash drawer shift by
          auditing

          the cash drawer contents.
        access: read-only
    source:
      openapi: openapi/openapi.json
  CashDrawerShiftEvent:
    properties:
      id:
        type: optional<string>
        docs: The unique ID of the event.
      event_type:
        type: optional<CashDrawerEventType>
        docs: >-
          The type of cash drawer shift event.

          See [CashDrawerEventType](#type-cashdrawereventtype) for possible
          values
      event_money:
        type: optional<Money>
        docs: >-
          The amount of money that was added to or removed from the cash drawer

          in the event. The amount can be positive (for added money)

          or zero (for other tender type payments). The addition or removal of
          money can be determined by

          by the event type.
      created_at:
        type: optional<string>
        docs: The event time in RFC 3339 format.
        access: read-only
      description:
        type: optional<nullable<string>>
        docs: |-
          An optional description of the event, entered by the employee that
          created the event.
      team_member_id:
        type: optional<string>
        docs: The ID of the team member that created the event.
        access: read-only
    source:
      openapi: openapi/openapi.json
  CashDrawerShiftState:
    enum:
      - OPEN
      - ENDED
      - CLOSED
    docs: The current state of a cash drawer shift.
    source:
      openapi: openapi/openapi.json
  CashDrawerShiftSummary:
    docs: >-
      The summary of a closed cash drawer shift.

      This model contains only the money counted to start a cash drawer shift,
      counted

      at the end of the shift, and the amount that should be in the drawer at
      shift

      end based on summing all cash drawer shift events.
    properties:
      id:
        type: optional<string>
        docs: The shift unique ID.
      state:
        type: optional<CashDrawerShiftState>
        docs: >-
          The shift current state.

          See [CashDrawerShiftState](#type-cashdrawershiftstate) for possible
          values
      opened_at:
        type: optional<nullable<string>>
        docs: The shift start time in ISO 8601 format.
      ended_at:
        type: optional<nullable<string>>
        docs: The shift end time in ISO 8601 format.
      closed_at:
        type: optional<nullable<string>>
        docs: The shift close time in ISO 8601 format.
      description:
        type: optional<nullable<string>>
        docs: An employee free-text description of a cash drawer shift.
      opened_cash_money:
        type: optional<Money>
        docs: |-
          The amount of money in the cash drawer at the start of the shift. This
          must be a positive amount.
      expected_cash_money:
        type: optional<Money>
        docs: >-
          The amount of money that should be in the cash drawer at the end of
          the

          shift, based on the cash drawer events on the shift.

          The amount is correct if all shift employees accurately recorded their

          cash drawer shift events. Unrecorded events and events with the wrong
          amount

          result in an incorrect expected_cash_money amount that can be
          negative.
      closed_cash_money:
        type: optional<Money>
        docs: >-
          The amount of money found in the cash drawer at the end of the shift
          by

          an auditing employee. The amount must be greater than or equal to
          zero.
      created_at:
        type: optional<string>
        docs: The shift start time in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: The shift updated at time in RFC 3339 format.
        access: read-only
      location_id:
        type: optional<string>
        docs: The ID of the location the cash drawer shift belongs to.
        access: read-only
    source:
      openapi: openapi/openapi.json
  CashPaymentDetails:
    docs: >-
      Stores details about a cash payment. Contains only non-confidential
      information. For more information, see 

      [Take Cash
      Payments](https://developer.squareup.com/docs/payments-api/take-payments/cash-payments).
    properties:
      buyer_supplied_money:
        type: Money
        docs: The amount and currency of the money supplied by the buyer.
      change_back_money:
        type: optional<Money>
        docs: |-
          The amount of change due back to the buyer. 
          This read-only field is calculated
          from the `amount_money` and `buyer_supplied_money` fields.
    source:
      openapi: openapi/openapi.json
  CatalogAvailabilityPeriod:
    docs: Represents a time period of availability.
    properties:
      start_local_time:
        type: optional<nullable<string>>
        docs: >-
          The start time of an availability period, specified in local time
          using partial-time

          RFC 3339 format. For example, `8:30:00` for a period starting at 8:30
          in the morning.

          Note that the seconds value is always :00, but it is appended for
          conformance to the RFC.
      end_local_time:
        type: optional<nullable<string>>
        docs: >-
          The end time of an availability period, specified in local time using
          partial-time

          RFC 3339 format. For example, `21:00:00` for a period ending at 9:00
          in the evening.

          Note that the seconds value is always :00, but it is appended for
          conformance to the RFC.
      day_of_week:
        type: optional<DayOfWeek>
        docs: |-
          The day of the week for this availability period.
          See [DayOfWeek](#type-dayofweek) for possible values
    source:
      openapi: openapi/openapi.json
  CatalogCategory:
    docs: A category to which a `CatalogItem` instance belongs.
    properties:
      name:
        type: optional<nullable<string>>
        docs: >-
          The category name. This is a searchable attribute for use in
          applicable query filters, and its value length is of Unicode code
          points.
        validation:
          maxLength: 255
      image_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The IDs of images associated with this `CatalogCategory` instance.

          Currently these images are not displayed by Square, but are free to be
          displayed in 3rd party applications.
      category_type:
        type: optional<CatalogCategoryType>
        docs: >-
          The type of the category.

          See [CatalogCategoryType](#type-catalogcategorytype) for possible
          values
      parent_category:
        type: optional<CatalogObjectCategory>
        docs: The ID of the parent category of this category instance.
      is_top_level:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether a category is a top level category, which does not
          have any parent_category.
      channels:
        type: optional<nullable<list<string>>>
        docs: >-
          A list of IDs representing channels, such as a Square Online site,
          where the category can be made visible.
      availability_period_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The IDs of the `CatalogAvailabilityPeriod` objects associated with the
          category.
      online_visibility:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether the category is visible (`true`) or hidden (`false`)
          on all of the seller's Square Online sites.
      root_category:
        type: optional<string>
        docs: The top-level category in a category hierarchy.
        access: read-only
      ecom_seo_data:
        type: optional<CatalogEcomSeoData>
        docs: The SEO data for a seller's Square Online store.
      path_to_root:
        type: optional<nullable<list<CategoryPathToRootNode>>>
        docs: >-
          The path from the category to its root category. The first node of the
          path is the parent of the category

          and the last is the root category. The path is empty if the category
          is a root category.
    source:
      openapi: openapi/openapi.json
  CatalogCategoryType:
    enum:
      - REGULAR_CATEGORY
      - MENU_CATEGORY
      - KITCHEN_CATEGORY
    docs: Indicates the type of a category.
    source:
      openapi: openapi/openapi.json
  CatalogCustomAttributeDefinition:
    docs: >-
      Contains information defining a custom attribute. Custom attributes are

      intended to store additional information about a catalog object or to
      associate a

      catalog object with an entity in another system. Do not use custom
      attributes

      to store any sensitive information (personally identifiable information,
      card details, etc.).

      [Read more about custom
      attributes](https://developer.squareup.com/docs/catalog-api/add-custom-attributes)
    properties:
      type:
        type: CatalogCustomAttributeDefinitionType
        docs: >-
          The type of this custom attribute. Cannot be modified after creation.

          Required.

          See
          [CatalogCustomAttributeDefinitionType](#type-catalogcustomattributedefinitiontype)
          for possible values
      name:
        type: string
        docs: >2-
           The name of this definition for API and seller-facing UI purposes.
          The name must be unique within the (merchant, application) pair.
          Required.

          May not be empty and may not exceed 255 characters. Can be modified
          after creation.
        validation:
          minLength: 1
          maxLength: 255
      description:
        type: optional<nullable<string>>
        docs: >-
          Seller-oriented description of the meaning of this Custom Attribute,

          any constraints that the seller should observe, etc. May be displayed
          as a tooltip in Square UIs.
        validation:
          maxLength: 255
      source_application:
        type: optional<SourceApplication>
        docs: |-
          __Read only.__ Contains information about the application that
          created this custom attribute definition.
      allowed_object_types:
        docs: >-
          The set of `CatalogObject` types that this custom atttribute may be
          applied to.

          Currently, only `ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`,
          and `CATEGORY` are allowed. At least one type must be included.

          See [CatalogObjectType](#type-catalogobjecttype) for possible values
        type: list<CatalogObjectType>
      seller_visibility:
        type: optional<CatalogCustomAttributeDefinitionSellerVisibility>
        docs: >-
          The visibility of a custom attribute in seller-facing UIs (including
          Square Point

          of Sale applications and Square Dashboard). May be modified.

          See
          [CatalogCustomAttributeDefinitionSellerVisibility](#type-catalogcustomattributedefinitionsellervisibility)
          for possible values
      app_visibility:
        type: optional<CatalogCustomAttributeDefinitionAppVisibility>
        docs: >-
          The visibility of a custom attribute to applications other than the
          application

          that created the attribute.

          See
          [CatalogCustomAttributeDefinitionAppVisibility](#type-catalogcustomattributedefinitionappvisibility)
          for possible values
      string_config:
        type: optional<CatalogCustomAttributeDefinitionStringConfig>
        docs: Optionally, populated when `type` = `STRING`, unset otherwise.
      number_config:
        type: optional<CatalogCustomAttributeDefinitionNumberConfig>
        docs: Optionally, populated when `type` = `NUMBER`, unset otherwise.
      selection_config:
        type: optional<CatalogCustomAttributeDefinitionSelectionConfig>
        docs: Populated when `type` is set to `SELECTION`, unset otherwise.
      custom_attribute_usage_count:
        type: optional<integer>
        docs: >-
          The number of custom attributes that reference this

          custom attribute definition. Set by the server in response to a
          ListCatalog

          request with `include_counts` set to `true`.  If the actual count is
          greater

          than 100, `custom_attribute_usage_count` will be set to `100`.
        access: read-only
      key:
        type: optional<nullable<string>>
        docs: >-
          The name of the desired custom attribute key that can be used to
          access

          the custom attribute value on catalog objects. Cannot be modified
          after the

          custom attribute definition has been created.

          Must be between 1 and 60 characters, and may only contain the
          characters `[a-zA-Z0-9_-]`.
        validation:
          pattern: ^[a-zA-Z0-9_-]*$
          minLength: 1
          maxLength: 60
    source:
      openapi: openapi/openapi.json
  CatalogCustomAttributeDefinitionAppVisibility:
    enum:
      - APP_VISIBILITY_HIDDEN
      - APP_VISIBILITY_READ_ONLY
      - APP_VISIBILITY_READ_WRITE_VALUES
    docs: >-
      Defines the visibility of a custom attribute to applications other than
      their

      creating application.
    source:
      openapi: openapi/openapi.json
  CatalogCustomAttributeDefinitionNumberConfig:
    properties:
      precision:
        type: optional<nullable<integer>>
        docs: |-
          An integer between 0 and 5 that represents the maximum number of
          positions allowed after the decimal in number custom attribute values
          For example:

          - if the precision is 0, the quantity can be 1, 2, 3, etc.
          - if the precision is 1, the quantity can be 0.1, 0.2, etc.
          - if the precision is 2, the quantity can be 0.01, 0.12, etc.

          Default: 5
        validation:
          max: 5
    source:
      openapi: openapi/openapi.json
  CatalogCustomAttributeDefinitionSelectionConfig:
    docs: >-
      Configuration associated with `SELECTION`-type custom attribute
      definitions.
    properties:
      max_allowed_selections:
        type: optional<nullable<integer>>
        docs: >-
          The maximum number of selections that can be set. The maximum value
          for this

          attribute is 100. The default value is 1. The value can be modified,
          but changing the value will not

          affect existing custom attribute values on objects. Clients need to

          handle custom attributes with more selected values than allowed by
          this limit.
        validation:
          max: 100
      allowed_selections:
        type: >-
          optional<nullable<list<CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection>>>
        docs: >-
          The set of valid `CatalogCustomAttributeSelections`. Up to a maximum
          of 100

          selections can be defined. Can be modified.
    source:
      openapi: openapi/openapi.json
  CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection:
    docs: A named selection for this `SELECTION`-type custom attribute definition.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: Unique ID set by Square.
      name:
        type: string
        docs: Selection name, unique within `allowed_selections`.
        validation:
          minLength: 1
          maxLength: 255
    source:
      openapi: openapi/openapi.json
  CatalogCustomAttributeDefinitionSellerVisibility:
    enum:
      - SELLER_VISIBILITY_HIDDEN
      - SELLER_VISIBILITY_READ_WRITE_VALUES
    docs: |-
      Defines the visibility of a custom attribute to sellers in Square
      client applications, Square APIs or in Square UIs (including Square Point
      of Sale applications and Square Dashboard).
    source:
      openapi: openapi/openapi.json
  CatalogCustomAttributeDefinitionStringConfig:
    docs: >-
      Configuration associated with Custom Attribute Definitions of type
      `STRING`.
    properties:
      enforce_uniqueness:
        type: optional<nullable<boolean>>
        docs: >-
          If true, each Custom Attribute instance associated with this Custom
          Attribute

          Definition must have a unique value within the seller's catalog. For

          example, this may be used for a value like a SKU that should not be

          duplicated within a seller's catalog. May not be modified after the

          definition has been created.
    source:
      openapi: openapi/openapi.json
  CatalogCustomAttributeDefinitionType:
    enum:
      - STRING
      - BOOLEAN
      - NUMBER
      - SELECTION
    docs: Defines the possible types for a custom attribute.
    source:
      openapi: openapi/openapi.json
  CatalogCustomAttributeValue:
    docs: >-
      An instance of a custom attribute. Custom attributes can be defined and

      added to `ITEM` and `ITEM_VARIATION` type catalog objects.

      [Read more about custom
      attributes](https://developer.squareup.com/docs/catalog-api/add-custom-attributes).
    properties:
      name:
        type: optional<nullable<string>>
        docs: The name of the custom attribute.
      string_value:
        type: optional<nullable<string>>
        docs: >-
          The string value of the custom attribute.  Populated if `type` =
          `STRING`.
      custom_attribute_definition_id:
        type: optional<string>
        docs: >-
          The id of the
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)
          this value belongs to.
        access: read-only
      type:
        type: optional<CatalogCustomAttributeDefinitionType>
        docs: >-
          A copy of type from the associated `CatalogCustomAttributeDefinition`.

          See
          [CatalogCustomAttributeDefinitionType](#type-catalogcustomattributedefinitiontype)
          for possible values
      number_value:
        type: optional<nullable<string>>
        docs: >-
          Populated if `type` = `NUMBER`. Contains a string

          representation of a decimal number, using a `.` as the decimal
          separator.
      boolean_value:
        type: optional<nullable<boolean>>
        docs: A `true` or `false` value. Populated if `type` = `BOOLEAN`.
      selection_uid_values:
        type: optional<nullable<list<string>>>
        docs: >-
          One or more choices from `allowed_selections`. Populated if `type` =
          `SELECTION`.
      key:
        type: optional<string>
        docs: >-
          If the associated `CatalogCustomAttributeDefinition` object is defined
          by another application, this key is prefixed by the defining
          application ID.

          For example, if the CatalogCustomAttributeDefinition has a key
          attribute of "cocoa_brand" and the defining application ID is
          "abcd1234", this key is "abcd1234:cocoa_brand"

          when the application making the request is different from the
          application defining the custom attribute definition. Otherwise, the
          key is simply "cocoa_brand".
        access: read-only
    source:
      openapi: openapi/openapi.json
  CatalogDiscount:
    docs: A discount applicable to items.
    properties:
      name:
        type: optional<nullable<string>>
        docs: >-
          The discount name. This is a searchable attribute for use in
          applicable query filters, and its value length is of Unicode code
          points.
        validation:
          maxLength: 255
      discount_type:
        type: optional<CatalogDiscountType>
        docs: >-
          Indicates whether the discount is a fixed amount or percentage, or
          entered at the time of sale.

          See [CatalogDiscountType](#type-catalogdiscounttype) for possible
          values
      percentage:
        type: optional<nullable<string>>
        docs: >-
          The percentage of the discount as a string representation of a decimal
          number, using a `.` as the decimal

          separator and without a `%` sign. A value of `7.5` corresponds to
          `7.5%`. Specify a percentage of `0` if `discount_type`

          is `VARIABLE_PERCENTAGE`.


          Do not use this field for amount-based or variable discounts.
      amount_money:
        type: optional<Money>
        docs: >-
          The amount of the discount. Specify an amount of `0` if
          `discount_type` is `VARIABLE_AMOUNT`.


          Do not use this field for percentage-based or variable discounts.
      pin_required:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether a mobile staff member needs to enter their PIN to
          apply the

          discount to a payment in the Square Point of Sale app.
      label_color:
        type: optional<nullable<string>>
        docs: >-
          The color of the discount display label in the Square Point of Sale
          app. This must be a valid hex color code.
      modify_tax_basis:
        type: optional<CatalogDiscountModifyTaxBasis>
        docs: >-
          Indicates whether this discount should reduce the price used to
          calculate tax.


          Most discounts should use `MODIFY_TAX_BASIS`. However, in some
          circumstances taxes must

          be calculated based on an item's price, ignoring a particular
          discount. For example,

          in many US jurisdictions, a manufacturer coupon or instant rebate
          reduces the price a

          customer pays but does not reduce the sale price used to calculate how
          much sales tax is

          due. In this case, the discount representing that manufacturer coupon
          should have

          `DO_NOT_MODIFY_TAX_BASIS` for this field.


          If you are unsure whether you need to use this field, consult your tax
          professional.

          See
          [CatalogDiscountModifyTaxBasis](#type-catalogdiscountmodifytaxbasis)
          for possible values
      maximum_amount_money:
        type: optional<Money>
        docs: >-
          For a percentage discount, the maximum absolute value of the discount.
          For example, if a

          50% discount has a `maximum_amount_money` of $20, a $100 purchase will
          yield a $20 discount,

          not a $50 discount.
    source:
      openapi: openapi/openapi.json
  CatalogDiscountModifyTaxBasis:
    enum:
      - MODIFY_TAX_BASIS
      - DO_NOT_MODIFY_TAX_BASIS
    source:
      openapi: openapi/openapi.json
  CatalogDiscountType:
    enum:
      - FIXED_PERCENTAGE
      - FIXED_AMOUNT
      - VARIABLE_PERCENTAGE
      - VARIABLE_AMOUNT
    docs: How to apply a CatalogDiscount to a CatalogItem.
    source:
      openapi: openapi/openapi.json
  CatalogEcomSeoData:
    docs: SEO data for for a seller's Square Online store.
    properties:
      page_title:
        type: optional<nullable<string>>
        docs: The SEO title used for the Square Online store.
      page_description:
        type: optional<nullable<string>>
        docs: The SEO description used for the Square Online store.
      permalink:
        type: optional<nullable<string>>
        docs: The SEO permalink used for the Square Online store.
    source:
      openapi: openapi/openapi.json
  CatalogIdMapping:
    docs: >-
      A mapping between a temporary client-supplied ID and a permanent
      server-generated ID.


      When calling
      [UpsertCatalogObject](api-endpoint:Catalog-UpsertCatalogObject) or

      [BatchUpsertCatalogObjects](api-endpoint:Catalog-BatchUpsertCatalogObjects)
      to

      create a [CatalogObject](entity:CatalogObject) instance, you can supply

      a temporary ID for the to-be-created object, especially when the object is
      to be referenced

      elsewhere in the same request body. This temporary ID can be any string
      unique within

      the call, but must be prefixed by "#".


      After the request is submitted and the object created, a permanent
      server-generated ID is assigned

      to the new object. The permanent ID is unique across the Square catalog.
    properties:
      client_object_id:
        type: optional<nullable<string>>
        docs: >-
          The client-supplied temporary `#`-prefixed ID for a new
          `CatalogObject`.
      object_id:
        type: optional<nullable<string>>
        docs: The permanent ID for the CatalogObject created by the server.
    source:
      openapi: openapi/openapi.json
  CatalogImage:
    docs: >-
      An image file to use in Square catalogs. It can be associated with

      `CatalogItem`, `CatalogItemVariation`, `CatalogCategory`, and
      `CatalogModifierList` objects.

      Only the images on items and item variations are exposed in Dashboard.

      Only the first image on an item is displayed in Square Point of Sale
      (SPOS).

      Images on items and variations are displayed through Square Online Store.

      Images on other object types are for use by 3rd party application
      developers.
    properties:
      name:
        type: optional<nullable<string>>
        docs: >-
          The internal name to identify this image in calls to the Square API.

          This is a searchable attribute for use in applicable query filters

          using the
          [SearchCatalogObjects](api-endpoint:Catalog-SearchCatalogObjects).

          It is not unique and should not be shown in a buyer facing context.
      url:
        type: optional<nullable<string>>
        docs: >-
          The URL of this image, generated by Square after an image is uploaded

          using the
          [CreateCatalogImage](api-endpoint:Catalog-CreateCatalogImage)
          endpoint.

          To modify the image, use the UpdateCatalogImage endpoint. Do not
          change the URL field.
      caption:
        type: optional<nullable<string>>
        docs: >-
          A caption that describes what is shown in the image. Displayed in the

          Square Online Store. This is a searchable attribute for use in
          applicable query filters

          using the
          [SearchCatalogObjects](api-endpoint:Catalog-SearchCatalogObjects).
      photo_studio_order_id:
        type: optional<nullable<string>>
        docs: >-
          The immutable order ID for this image object created by the Photo
          Studio service in Square Online Store.
    source:
      openapi: openapi/openapi.json
  CatalogInfoResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      limits:
        type: optional<CatalogInfoResponseLimits>
        docs: Limits that apply to this API.
      standard_unit_description_group:
        type: optional<StandardUnitDescriptionGroup>
        docs: Names and abbreviations for standard units.
    source:
      openapi: openapi/openapi.json
  CatalogInfoResponseLimits:
    properties:
      batch_upsert_max_objects_per_batch:
        type: optional<nullable<integer>>
        docs: >-
          The maximum number of objects that may appear within a single batch in
          a

          `/v2/catalog/batch-upsert` request.
      batch_upsert_max_total_objects:
        type: optional<nullable<integer>>
        docs: |-
          The maximum number of objects that may appear across all batches in a
          `/v2/catalog/batch-upsert` request.
      batch_retrieve_max_object_ids:
        type: optional<nullable<integer>>
        docs: >-
          The maximum number of object IDs that may appear in a
          `/v2/catalog/batch-retrieve`

          request.
      search_max_page_limit:
        type: optional<nullable<integer>>
        docs: |-
          The maximum number of results that may be returned in a page of a
          `/v2/catalog/search` response.
      batch_delete_max_object_ids:
        type: optional<nullable<integer>>
        docs: |-
          The maximum number of object IDs that may be included in a single
          `/v2/catalog/batch-delete` request.
      update_item_taxes_max_item_ids:
        type: optional<nullable<integer>>
        docs: |-
          The maximum number of item IDs that may be included in a single
          `/v2/catalog/update-item-taxes` request.
      update_item_taxes_max_taxes_to_enable:
        type: optional<nullable<integer>>
        docs: >-
          The maximum number of tax IDs to be enabled that may be included in a
          single

          `/v2/catalog/update-item-taxes` request.
      update_item_taxes_max_taxes_to_disable:
        type: optional<nullable<integer>>
        docs: >-
          The maximum number of tax IDs to be disabled that may be included in a
          single

          `/v2/catalog/update-item-taxes` request.
      update_item_modifier_lists_max_item_ids:
        type: optional<nullable<integer>>
        docs: |-
          The maximum number of item IDs that may be included in a single
          `/v2/catalog/update-item-modifier-lists` request.
      update_item_modifier_lists_max_modifier_lists_to_enable:
        type: optional<nullable<integer>>
        docs: >-
          The maximum number of modifier list IDs to be enabled that may be
          included in

          a single `/v2/catalog/update-item-modifier-lists` request.
      update_item_modifier_lists_max_modifier_lists_to_disable:
        type: optional<nullable<integer>>
        docs: >-
          The maximum number of modifier list IDs to be disabled that may be
          included in

          a single `/v2/catalog/update-item-modifier-lists` request.
    source:
      openapi: openapi/openapi.json
  CatalogItem:
    docs: >-
      A [CatalogObject](entity:CatalogObject) instance of the `ITEM` type, also
      referred to as an item, in the catalog.
    properties:
      name:
        type: optional<nullable<string>>
        docs: >-
          The item's name. This is a searchable attribute for use in applicable
          query filters, its value must not be empty, and the length is of
          Unicode code points.
        validation:
          maxLength: 512
      description:
        type: optional<nullable<string>>
        docs: >-
          The item's description. This is a searchable attribute for use in
          applicable query filters, and its value length is of Unicode code
          points.


          Deprecated at 2022-07-20, this field is planned to retire in 6 months.
          You should migrate to use `description_html` to set the description

          of the [CatalogItem](entity:CatalogItem) instance.  The `description`
          and `description_html` field values are kept in sync. If you try to

          set the both fields, the `description_html` text value overwrites the
          `description` value. Updates in one field are also reflected in the
          other,

          except for when you use an early version before Square API 2022-07-20
          and `description_html` is set to blank, setting the `description`
          value to null

          does not nullify `description_html`.
        validation:
          maxLength: 4096
      abbreviation:
        type: optional<nullable<string>>
        docs: >-
          The text of the item's display label in the Square Point of Sale app.
          Only up to the first five characters of the string are used.

          This attribute is searchable, and its value length is of Unicode code
          points.
        validation:
          maxLength: 24
      label_color:
        type: optional<nullable<string>>
        docs: >-
          The color of the item's display label in the Square Point of Sale app.
          This must be a valid hex color code.
      is_taxable:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether the item is taxable (`true`) or non-taxable
          (`false`). Default is `true`.
      category_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the item's category, if any. Deprecated since 2023-12-13.
          Use `CatalogItem.categories`, instead.
      tax_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          A set of IDs indicating the taxes enabled for

          this item. When updating an item, any taxes listed here will be added
          to the item.

          Taxes may also be added to or deleted from an item using
          `UpdateItemTaxes`.
      modifier_list_info:
        type: optional<nullable<list<CatalogItemModifierListInfo>>>
        docs: >-
          A set of `CatalogItemModifierListInfo` objects

          representing the modifier lists that apply to this item, along with
          the overrides and min

          and max limits that are specific to this item. Modifier lists

          may also be added to or deleted from an item using
          `UpdateItemModifierLists`.
      variations:
        type: optional<nullable<list<CatalogObject>>>
        docs: >-
          A list of [CatalogItemVariation](entity:CatalogItemVariation) objects
          for this item. An item must have

          at least one variation.
      product_type:
        type: optional<CatalogItemProductType>
        docs: >-
          The product type of the item. Once set, the `product_type` value
          cannot be modified.


          Items of the `LEGACY_SQUARE_ONLINE_SERVICE` and
          `LEGACY_SQUARE_ONLINE_MEMBERSHIP` product types can be updated

          but cannot be created using the API.

          See [CatalogItemProductType](#type-catalogitemproducttype) for
          possible values
      skip_modifier_screen:
        type: optional<nullable<boolean>>
        docs: >-
          If `false`, the Square Point of Sale app will present the
          `CatalogItem`'s

          details screen immediately, allowing the merchant to choose
          `CatalogModifier`s

          before adding the item to the cart.  This is the default behavior.


          If `true`, the Square Point of Sale app will immediately add the item
          to the cart with the pre-selected

          modifiers, and merchants can edit modifiers by drilling down onto the
          item's details.


          Third-party clients are encouraged to implement similar behaviors.
      item_options:
        type: optional<nullable<list<CatalogItemOptionForItem>>>
        docs: |-
          List of item options IDs for this item. Used to manage and group item
          variations in a specified order.

          Maximum: 6 item options.
      ecom_uri:
        type: optional<nullable<string>>
        docs: >-
          Deprecated. A URI pointing to a published e-commerce product page for
          the Item.
      ecom_image_uris:
        type: optional<nullable<list<string>>>
        docs: >-
          Deprecated. A comma-separated list of encoded URIs pointing to a set
          of published e-commerce images for the Item.
      image_ids:
        type: optional<nullable<list<string>>>
        docs: |-
          The IDs of images associated with this `CatalogItem` instance.
          These images will be shown to customers in Square Online Store.
          The first image will show up as the icon for this item in POS.
      sort_name:
        type: optional<nullable<string>>
        docs: >-
          A name to sort the item by. If this name is unspecified, namely, the
          `sort_name` field is absent, the regular `name` field is used for
          sorting.

          Its value must not be empty.


          It is currently supported for sellers of the Japanese locale only.
      categories:
        type: optional<nullable<list<CatalogObjectCategory>>>
        docs: The list of categories.
      description_html:
        type: optional<nullable<string>>
        docs: >-
          The item's description as expressed in valid HTML elements. The length
          of this field value, including those of HTML tags,

          is of Unicode points. With application query filters, the text values
          of the HTML elements and attributes are searchable. Invalid or

          unsupported HTML elements or attributes are ignored.


          Supported HTML elements include:

          - `a`: Link. Supports linking to website URLs, email address, and
          telephone numbers.

          - `b`, `strong`:  Bold text

          - `br`: Line break

          - `code`: Computer code

          - `div`: Section

          - `h1-h6`: Headings

          - `i`, `em`: Italics

          - `li`: List element

          - `ol`: Numbered list

          - `p`: Paragraph

          - `ul`: Bullet list

          - `u`: Underline



          Supported HTML attributes include:

          - `align`: Alignment of the text content

          - `href`: Link destination

          - `rel`: Relationship between link's target and source

          - `target`: Place to open the linked document
        validation:
          maxLength: 65535
      description_plaintext:
        type: optional<string>
        docs: >-
          A server-generated plaintext version of the `description_html` field,
          without formatting tags.
        validation:
          maxLength: 65535
        access: read-only
      channels:
        type: optional<nullable<list<string>>>
        docs: >-
          A list of IDs representing channels, such as a Square Online site,
          where the item can be made visible or available.

          This field is read only and cannot be edited.
      is_archived:
        type: optional<nullable<boolean>>
        docs: Indicates whether this item is archived (`true`) or not (`false`).
      ecom_seo_data:
        type: optional<CatalogEcomSeoData>
        docs: The SEO data for a seller's Square Online store.
      food_and_beverage_details:
        type: optional<CatalogItemFoodAndBeverageDetails>
        docs: The food and beverage-specific details for the `FOOD_AND_BEV` item.
      reporting_category:
        type: optional<CatalogObjectCategory>
        docs: The item's reporting category.
      is_alcoholic:
        type: optional<nullable<boolean>>
        docs: Indicates whether this item is alcoholic (`true`) or not (`false`).
    source:
      openapi: openapi/openapi.json
  CatalogItemFoodAndBeverageDetails:
    docs: The food and beverage-specific details of a `FOOD_AND_BEV` item.
    properties:
      calorie_count:
        type: optional<nullable<integer>>
        docs: >-
          The calorie count (in the unit of kcal) for the `FOOD_AND_BEV` type of
          items.
      dietary_preferences:
        type: >-
          optional<nullable<list<CatalogItemFoodAndBeverageDetailsDietaryPreference>>>
        docs: The dietary preferences for the `FOOD_AND_BEV` item.
      ingredients:
        type: optional<nullable<list<CatalogItemFoodAndBeverageDetailsIngredient>>>
        docs: The ingredients for the `FOOD_AND_BEV` type item.
    source:
      openapi: openapi/openapi.json
  CatalogItemFoodAndBeverageDetailsDietaryPreference:
    docs: >-
      Dietary preferences that can be assigned to an `FOOD_AND_BEV` item and its
      ingredients.
    properties:
      type:
        type: optional<CatalogItemFoodAndBeverageDetailsDietaryPreferenceType>
        docs: >-
          The dietary preference type. Supported values include `STANDARD` and
          `CUSTOM` as specified in
          `FoodAndBeverageDetails.DietaryPreferenceType`.

          See [DietaryPreferenceType](#type-dietarypreferencetype) for possible
          values
      standard_name:
        type: >-
          optional<CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference>
        docs: >-
          The name of the dietary preference from a standard pre-defined list.
          This should be null if it's a custom dietary preference.

          See [StandardDietaryPreference](#type-standarddietarypreference) for
          possible values
      custom_name:
        type: optional<nullable<string>>
        docs: >-
          The name of a user-defined custom dietary preference. This should be
          null if it's a standard dietary preference.
    source:
      openapi: openapi/openapi.json
  CatalogItemFoodAndBeverageDetailsDietaryPreferenceStandardDietaryPreference:
    enum:
      - DAIRY_FREE
      - GLUTEN_FREE
      - HALAL
      - KOSHER
      - NUT_FREE
      - VEGAN
      - VEGETARIAN
    docs: >-
      Standard dietary preferences for food and beverage items that are
      recommended on item creation.
    source:
      openapi: openapi/openapi.json
  CatalogItemFoodAndBeverageDetailsDietaryPreferenceType:
    enum:
      - STANDARD
      - CUSTOM
    docs: >-
      The type of dietary preference for the `FOOD_AND_BEV` type of items and
      integredients.
    source:
      openapi: openapi/openapi.json
  CatalogItemFoodAndBeverageDetailsIngredient:
    docs: Describes the ingredient used in a `FOOD_AND_BEV` item.
    properties:
      type:
        type: optional<CatalogItemFoodAndBeverageDetailsDietaryPreferenceType>
        docs: >-
          The dietary preference type of the ingredient. Supported values
          include `STANDARD` and `CUSTOM` as specified in
          `FoodAndBeverageDetails.DietaryPreferenceType`.

          See [DietaryPreferenceType](#type-dietarypreferencetype) for possible
          values
      standard_name:
        type: >-
          optional<CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient>
        docs: >-
          The name of the ingredient from a standard pre-defined list. This
          should be null if it's a custom dietary preference.

          See [StandardIngredient](#type-standardingredient) for possible values
      custom_name:
        type: optional<nullable<string>>
        docs: >-
          The name of a custom user-defined ingredient. This should be null if
          it's a standard dietary preference.
    source:
      openapi: openapi/openapi.json
  CatalogItemFoodAndBeverageDetailsIngredientStandardIngredient:
    enum:
      - CELERY
      - CRUSTACEANS
      - EGGS
      - FISH
      - GLUTEN
      - LUPIN
      - MILK
      - MOLLUSCS
      - MUSTARD
      - PEANUTS
      - SESAME
      - SOY
      - SULPHITES
      - TREE_NUTS
    docs: >-
      Standard ingredients for food and beverage items that are recommended on
      item creation.
    source:
      openapi: openapi/openapi.json
  CatalogItemModifierListInfo:
    docs: >-
      Controls how a modifier list is applied to a specific item. This object
      allows for item-specific customization of modifier list behavior

      and provides the ability to override global modifier list settings.
    properties:
      modifier_list_id:
        type: string
        docs: >-
          The ID of the `CatalogModifierList` controlled by this
          `CatalogModifierListInfo`.
        validation:
          minLength: 1
      modifier_overrides:
        type: optional<nullable<list<CatalogModifierOverride>>>
        docs: >-
          A set of `CatalogModifierOverride` objects that override default
          modifier settings for this item.
      min_selected_modifiers:
        type: optional<nullable<integer>>
        docs: >-
          The minimum number of modifiers that must be selected from this
          modifier list.

          Values:


          - 0: No selection is required.

          - -1: Default value, the attribute was not set by the client. When
          `max_selected_modifiers` is

          also -1, use the minimum and maximum selection values set on the
          `CatalogItemModifierList`.

          - &gt;0: The required minimum modifier selections. This can be larger
          than the total `CatalogModifiers` when `allow_quantities` is enabled.

          - &lt; -1: Invalid. Treated as no selection required.
      max_selected_modifiers:
        type: optional<nullable<integer>>
        docs: >-
          The maximum number of modifiers that can be selected.

          Values:


          - 0: No maximum limit.

          - -1: Default value, the attribute was not set by the client. When
          `min_selected_modifiers` is

          also -1, use the minimum and maximum selection values set on the
          `CatalogItemModifierList`.

          - &gt;0: The maximum total modifier selections. This can be larger
          than the total `CatalogModifiers` when `allow_quantities` is enabled.

          - &lt; -1: Invalid. Treated as no maximum limit.
      enabled:
        type: optional<nullable<boolean>>
        docs: >-
          If `true`, enable this `CatalogModifierList`. The default value is
          `true`.
      ordinal:
        type: optional<nullable<integer>>
        docs: >-
          The position of this `CatalogItemModifierListInfo` object within the
          `modifier_list_info` list applied 

          to a `CatalogItem` instance.
      allow_quantities: optional<unknown>
      is_conversational: optional<unknown>
      hidden_from_customer_override: optional<unknown>
    source:
      openapi: openapi/openapi.json
  CatalogItemOption:
    docs: A group of variations for a `CatalogItem`.
    properties:
      name:
        type: optional<nullable<string>>
        docs: >-
          The item option's display name for the seller. Must be unique across

          all item options. This is a searchable attribute for use in applicable
          query filters.
      display_name:
        type: optional<nullable<string>>
        docs: >-
          The item option's display name for the customer. This is a searchable
          attribute for use in applicable query filters.
      description:
        type: optional<nullable<string>>
        docs: >-
          The item option's human-readable description. Displayed in the Square

          Point of Sale app for the seller and in the Online Store or on
          receipts for

          the buyer. This is a searchable attribute for use in applicable query
          filters.
      show_colors:
        type: optional<nullable<boolean>>
        docs: If true, display colors for entries in `values` when present.
      values:
        type: optional<nullable<list<CatalogObject>>>
        docs: |-
          A list of CatalogObjects containing the
          `CatalogItemOptionValue`s for this item.
    source:
      openapi: openapi/openapi.json
  CatalogItemOptionForItem:
    docs: |2-
       An option that can be assigned to an item.
      For example, a t-shirt item may offer a color option or a size option.
    properties:
      item_option_id:
        type: optional<nullable<string>>
        docs: >-
          The unique id of the item option, used to form the dimensions of the
          item option matrix in a specified order.
    source:
      openapi: openapi/openapi.json
  CatalogItemOptionValue:
    docs: |-
      An enumerated value that can link a
      `CatalogItemVariation` to an item option as one of
      its item option values.
    properties:
      item_option_id:
        type: optional<nullable<string>>
        docs: Unique ID of the associated item option.
      name:
        type: optional<nullable<string>>
        docs: >-
          Name of this item option value. This is a searchable attribute for use
          in applicable query filters.
      description:
        type: optional<nullable<string>>
        docs: >-
          A human-readable description for the option value. This is a
          searchable attribute for use in applicable query filters.
      color:
        type: optional<nullable<string>>
        docs: >-
          The HTML-supported hex color for the item option (e.g., "#ff8d4e85").

          Only displayed if `show_colors` is enabled on the parent `ItemOption`.
          When

          left unset, `color` defaults to white ("#ffffff") when `show_colors`
          is

          enabled on the parent `ItemOption`.
      ordinal:
        type: optional<nullable<integer>>
        docs: Determines where this option value appears in a list of option values.
    source:
      openapi: openapi/openapi.json
  CatalogItemOptionValueForItemVariation:
    docs: >-
      A `CatalogItemOptionValue` links an item variation to an item option as

      an item option value. For example, a t-shirt item may offer a color option
      and

      a size option. An item option value would represent each variation of
      t-shirt:

      For example, "Color:Red, Size:Small" or "Color:Blue, Size:Medium".
    properties:
      item_option_id:
        type: optional<nullable<string>>
        docs: The unique id of an item option.
      item_option_value_id:
        type: optional<nullable<string>>
        docs: The unique id of the selected value for the item option.
    source:
      openapi: openapi/openapi.json
  CatalogItemProductType:
    enum:
      - REGULAR
      - GIFT_CARD
      - APPOINTMENTS_SERVICE
      - FOOD_AND_BEV
      - EVENT
      - DIGITAL
      - DONATION
      - LEGACY_SQUARE_ONLINE_SERVICE
      - LEGACY_SQUARE_ONLINE_MEMBERSHIP
    docs: >-
      The type of a CatalogItem. Connect V2 only allows the creation of
      `REGULAR` or `APPOINTMENTS_SERVICE` items.
    source:
      openapi: openapi/openapi.json
  CatalogItemVariation:
    docs: >-
      An item variation, representing a product for sale, in the Catalog object
      model. Each [item](entity:CatalogItem) must have at least one

      item variation and can have at most 250 item variations.


      An item variation can be sellable, stockable, or both if it has a unit of
      measure for its count for the sold number of the variation, the stocked

      number of the variation, or both. For example, when a variation
      representing wine is stocked and sold by the bottle, the variation is both

      stockable and sellable. But when a variation of the wine is sold by the
      glass, the sold units cannot be used as a measure of the stocked units.
      This by-the-glass

      variation is sellable, but not stockable. To accurately keep track of the
      wine's inventory count at any time, the sellable count must be

      converted to stockable count. Typically, the seller defines this unit
      conversion. For example, 1 bottle equals 5 glasses. The Square API exposes

      the `stockable_conversion` property on the variation to specify the
      conversion. Thus, when two glasses of the wine are sold, the sellable
      count

      decreases by 2, and the stockable count automatically decreases by 0.4
      bottle according to the conversion.
    properties:
      item_id:
        type: optional<nullable<string>>
        docs: The ID of the `CatalogItem` associated with this item variation.
      name:
        type: optional<nullable<string>>
        docs: >-
          The item variation's name. This is a searchable attribute for use in
          applicable query filters.


          Its value has a maximum length of 255 Unicode code points. However,
          when the parent [item](entity:CatalogItem)

          uses [item options](entity:CatalogItemOption), this attribute is
          auto-generated, read-only, and can be

          longer than 255 Unicode code points.
      sku:
        type: optional<nullable<string>>
        docs: >-
          The item variation's SKU, if any. This is a searchable attribute for
          use in applicable query filters.
      upc:
        type: optional<nullable<string>>
        docs: >-
          The universal product code (UPC) of the item variation, if any. This
          is a searchable attribute for use in applicable query filters.


          The value of this attribute should be a number of 12-14 digits long. 
          This restriction is enforced on the Square Seller Dashboard,

          Square Point of Sale or Retail Point of Sale apps, where this
          attribute shows in the GTIN field. If a non-compliant UPC value is
          assigned

          to this attribute using the API, the value is not editable on the
          Seller Dashboard, Square Point of Sale or Retail Point of Sale apps

          unless it is updated to fit the expected format.
      ordinal:
        type: optional<integer>
        docs: >-
          The order in which this item variation should be displayed. This value
          is read-only. On writes, the ordinal

          for each item variation within a parent `CatalogItem` is set according
          to the item variations's

          position. On reads, the value is not guaranteed to be sequential or
          unique.
        access: read-only
      pricing_type:
        type: optional<CatalogPricingType>
        docs: >-
          Indicates whether the item variation's price is fixed or determined at
          the time

          of sale.

          See [CatalogPricingType](#type-catalogpricingtype) for possible values
      price_money:
        type: optional<Money>
        docs: The item variation's price, if fixed pricing is used.
      location_overrides:
        type: optional<nullable<list<ItemVariationLocationOverrides>>>
        docs: Per-location price and inventory overrides.
      track_inventory:
        type: optional<nullable<boolean>>
        docs: If `true`, inventory tracking is active for the variation.
      inventory_alert_type:
        type: optional<InventoryAlertType>
        docs: >-
          Indicates whether the item variation displays an alert when its
          inventory quantity is less than or equal

          to its `inventory_alert_threshold`.

          See [InventoryAlertType](#type-inventoryalerttype) for possible values
      inventory_alert_threshold:
        type: optional<nullable<long>>
        docs: >-
          If the inventory quantity for the variation is less than or equal to
          this value and `inventory_alert_type`

          is `LOW_QUANTITY`, the variation displays an alert in the merchant
          dashboard.


          This value is always an integer.
      user_data:
        type: optional<nullable<string>>
        docs: >-
          Arbitrary user metadata to associate with the item variation. This
          attribute value length is of Unicode code points.
        validation:
          maxLength: 255
      service_duration:
        type: optional<nullable<long>>
        docs: >-
          If the `CatalogItem` that owns this item variation is of type

          `APPOINTMENTS_SERVICE`, then this is the duration of the service in
          milliseconds. For

          example, a 30 minute appointment would have the value `1800000`, which
          is equal to

          30 (minutes) * 60 (seconds per minute) * 1000 (milliseconds per
          second).
      available_for_booking:
        type: optional<nullable<boolean>>
        docs: >-
          If the `CatalogItem` that owns this item variation is of type

          `APPOINTMENTS_SERVICE`, a bool representing whether this service is
          available for booking.
      item_option_values:
        type: optional<nullable<list<CatalogItemOptionValueForItemVariation>>>
        docs: |-
          List of item option values associated with this item variation. Listed
          in the same order as the item options of the parent item.
      measurement_unit_id:
        type: optional<nullable<string>>
        docs: >-
          ID of the ‘CatalogMeasurementUnit’ that is used to measure the
          quantity

          sold of this item variation. If left unset, the item will be sold in

          whole quantities.
      sellable:
        type: optional<nullable<boolean>>
        docs: >-
          Whether this variation can be sold. The inventory count of a sellable
          variation indicates

          the number of units available for sale. When a variation is both
          stockable and sellable,

          its sellable inventory count can be smaller than or equal to its
          stockable count.
      stockable:
        type: optional<nullable<boolean>>
        docs: >-
          Whether stock is counted directly on this variation (TRUE) or only on
          its components (FALSE).

          When a variation is both stockable and sellable, the inventory count
          of a stockable variation keeps track of the number of units of this
          variation in stock

          and is not an indicator of the number of units of the variation that
          can be sold.
      image_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The IDs of images associated with this `CatalogItemVariation`
          instance.

          These images will be shown to customers in Square Online Store.
      team_member_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          Tokens of employees that can perform the service represented by this
          variation. Only valid for

          variations of type `APPOINTMENTS_SERVICE`.
      stockable_conversion:
        type: optional<CatalogStockConversion>
        docs: >-
          The unit conversion rule, as prescribed by the
          [CatalogStockConversion](entity:CatalogStockConversion) type,

          that describes how this non-stockable (i.e., sellable/receivable) item
          variation is converted

          to/from the stockable item variation sharing the same parent item.
          With the stock conversion,

          you can accurately track inventory when an item variation is sold in
          one unit, but stocked in

          another unit.
    source:
      openapi: openapi/openapi.json
  CatalogMeasurementUnit:
    docs: |-
      Represents the unit used to measure a `CatalogItemVariation` and
      specifies the precision for decimal quantities.
    properties:
      measurement_unit:
        type: optional<MeasurementUnit>
        docs: >-
          Indicates the unit used to measure the quantity of a catalog item
          variation.
      precision:
        type: optional<nullable<integer>>
        docs: >-
          An integer between 0 and 5 that represents the maximum number of

          positions allowed after the decimal in quantities measured with this
          unit.

          For example:


          - if the precision is 0, the quantity can be 1, 2, 3, etc.

          - if the precision is 1, the quantity can be 0.1, 0.2, etc.

          - if the precision is 2, the quantity can be 0.01, 0.12, etc.


          Default: 3
    source:
      openapi: openapi/openapi.json
  CatalogModifier:
    docs: >-
      A modifier that can be applied to items at the time of sale. For example,
      a cheese modifier for a burger, or a flavor modifier for a serving of ice
      cream.
    properties:
      name:
        type: optional<nullable<string>>
        docs: >-
          The modifier name.  This is a searchable attribute for use in
          applicable query filters, and its value length is of Unicode code
          points.
        validation:
          maxLength: 255
      price_money:
        type: optional<Money>
        docs: The modifier price.
      on_by_default:
        type: optional<nullable<boolean>>
        docs: >-
          When `true`, this modifier is selected by default when displaying the
          modifier list.

          This setting can be overridden at the item level using
          `CatalogModifierListInfo.modifier_overrides`.
      ordinal:
        type: optional<nullable<integer>>
        docs: >-
          Determines where this `CatalogModifier` appears in the
          `CatalogModifierList`.
      modifier_list_id:
        type: optional<nullable<string>>
        docs: The ID of the `CatalogModifierList` associated with this modifier.
      location_overrides:
        type: optional<nullable<list<ModifierLocationOverrides>>>
        docs: Location-specific price overrides.
      image_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the image associated with this `CatalogModifier` instance.

          Currently this image is not displayed by Square, but is free to be
          displayed in 3rd party applications.
      hidden_online:
        type: optional<nullable<boolean>>
        docs: >-
          When `true`, this modifier is hidden from online ordering channels.
          This setting can be overridden at the item level using
          `CatalogModifierListInfo.modifier_overrides`.
    source:
      openapi: openapi/openapi.json
  CatalogModifierList:
    docs: >-
      A container for a list of modifiers, or a text-based modifier.

      For text-based modifiers, this represents text configuration for an item.
      (For example, custom text to print on a t-shirt).

      For non text-based modifiers, this represents a list of modifiers that can
      be applied to items at the time of sale.

      (For example, a list of condiments for a hot dog, or a list of ice cream
      flavors).

      Each element of the modifier list is a `CatalogObject` instance of the
      `MODIFIER` type.
    properties:
      name:
        type: optional<nullable<string>>
        docs: >-
          The name of the `CatalogModifierList` instance. This is a searchable
          attribute for use in applicable query filters, and its value length is
          of 

          Unicode code points.
        validation:
          maxLength: 255
      ordinal:
        type: optional<nullable<integer>>
        docs: >-
          The position of this `CatalogModifierList` within a list of
          `CatalogModifierList` instances.
      selection_type:
        type: optional<CatalogModifierListSelectionType>
        docs: >-
          __Deprecated__: Indicates whether a single (`SINGLE`) modifier or
          multiple (`MULTIPLE`) modifiers can be selected. Use

          `min_selected_modifiers` and `max_selected_modifiers` instead.

          See
          [CatalogModifierListSelectionType](#type-catalogmodifierlistselectiontype)
          for possible values
      modifiers:
        type: optional<nullable<list<CatalogObject>>>
        docs: >-
          A non-empty list of `CatalogModifier` objects to be included in the
          `CatalogModifierList`, 

          for non text-based modifiers when the `modifier_type` attribute is
          `LIST`. Each element of this list 

          is a `CatalogObject` instance of the `MODIFIER` type, containing the
          following attributes:

          ```

          {

          "id": "{{catalog_modifier_id}}",

          "type": "MODIFIER", 

          "modifier_data": {{a CatalogModifier instance>}} 

          }

          ```
      image_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The IDs of images associated with this `CatalogModifierList` instance.

          Currently these images are not displayed on Square products, but may
          be displayed in 3rd-party applications.
      allow_quantities:
        type: optional<nullable<boolean>>
        docs: >-
          When `true`, allows multiple quantities of the same modifier to be
          selected.
      is_conversational:
        type: optional<nullable<boolean>>
        docs: True if modifiers belonging to this list can be used conversationally.
      modifier_type:
        type: optional<CatalogModifierListModifierType>
        docs: >-
          The type of the modifier. 


          When this `modifier_type` value is `TEXT`,  the `CatalogModifierList`
          represents a text-based modifier. 

          When this `modifier_type` value is `LIST`, the `CatalogModifierList`
          contains a list of `CatalogModifier` objects.

          See
          [CatalogModifierListModifierType](#type-catalogmodifierlistmodifiertype)
          for possible values
      max_length:
        type: optional<nullable<integer>>
        docs: >-
          The maximum length, in Unicode points, of the text string of the
          text-based modifier as represented by 

          this `CatalogModifierList` object with the `modifier_type` set to
          `TEXT`.
      text_required:
        type: optional<nullable<boolean>>
        docs: >-
          Whether the text string must be a non-empty string (`true`) or not
          (`false`) for a text-based modifier

          as represented by this `CatalogModifierList` object with the
          `modifier_type` set to `TEXT`.
      internal_name:
        type: optional<nullable<string>>
        docs: >-
          A note for internal use by the business.   


          For example, for a text-based modifier applied to a T-shirt item, if
          the buyer-supplied text of "Hello, Kitty!"  

          is to be printed on the T-shirt, this `internal_name` attribute can be
          "Use italic face" as 

          an instruction for the business to follow.  


          For non text-based modifiers, this `internal_name` attribute can be 

          used to include SKUs, internal codes, or supplemental descriptions for
          internal use.
        validation:
          maxLength: 512
      min_selected_modifiers:
        type: optional<nullable<long>>
        docs: >-
          The minimum number of modifiers that must be selected from this list.
          The value can be overridden with `CatalogItemModifierListInfo`.


          Values:


          - 0: No selection is required.

          - -1: Default value, the attribute was not set by the client. Treated
          as no selection required.

          - &gt;0: The required minimum modifier selections. This can be larger
          than the total `CatalogModifiers` when `allow_quantities` is enabled.

          - &lt; -1: Invalid. Treated as no selection required.
      max_selected_modifiers:
        type: optional<nullable<long>>
        docs: >-
          The maximum number of modifiers that must be selected from this list.
          The value can be overridden with `CatalogItemModifierListInfo`.


          Values:


          - 0: No maximum limit.

          - -1: Default value, the attribute was not set by the client. Treated
          as no maximum limit.

          - &gt;0: The maximum total modifier selections. This can be larger
          than the total `CatalogModifiers` when `allow_quantities` is enabled.

          - &lt; -1: Invalid. Treated as no maximum limit.
      hidden_from_customer:
        type: optional<nullable<boolean>>
        docs: >-
          If `true`, modifiers from this list are hidden from customer receipts.
          The default value is `false`.

          This setting can be overridden with
          `CatalogItemModifierListInfo.hidden_from_customer_override`.
    source:
      openapi: openapi/openapi.json
  CatalogModifierListModifierType:
    enum:
      - LIST
      - TEXT
    docs: Defines the type of `CatalogModifierList`.
    source:
      openapi: openapi/openapi.json
  CatalogModifierListSelectionType:
    enum:
      - SINGLE
      - MULTIPLE
    docs: Indicates whether a CatalogModifierList supports multiple selections.
    source:
      openapi: openapi/openapi.json
  CatalogModifierOverride:
    docs: >-
      Options to control how to override the default behavior of the specified
      modifier.
    properties:
      modifier_id:
        type: string
        docs: >-
          The ID of the `CatalogModifier` whose default behavior is being
          overridden.
        validation:
          minLength: 1
      on_by_default:
        type: optional<nullable<boolean>>
        docs: '__Deprecated__: Use `on_by_default_override` instead.'
      hidden_online_override: optional<unknown>
      on_by_default_override: optional<unknown>
    source:
      openapi: openapi/openapi.json
  CatalogObject:
    discriminated: false
    docs: >-
      The wrapper object for the catalog entries of a given object type.


      Depending on the `type` attribute value, a `CatalogObject` instance
      assumes a type-specific data to yield the corresponding type of catalog
      object.


      For example, if `type=ITEM`, the `CatalogObject` instance must have the
      ITEM-specific data set on the `item_data` attribute. The resulting
      `CatalogObject` instance is also a `CatalogItem` instance.


      In general, if `type=<OBJECT_TYPE>`, the `CatalogObject` instance must
      have the `<OBJECT_TYPE>`-specific data set on the `<object_type>_data`
      attribute. The resulting `CatalogObject` instance is also a
      `Catalog<ObjectType>` instance.


      For a more detailed discussion of the Catalog data model, please see the

      [Design a
      Catalog](https://developer.squareup.com/docs/catalog-api/design-a-catalog)
      guide.
    union:
      - CatalogObjectItem
      - CatalogObjectImage
      - CatalogObjectCategory
      - CatalogObjectItemVariation
      - CatalogObjectTax
      - CatalogObjectDiscount
      - CatalogObjectModifierList
      - CatalogObjectModifier
      - CatalogObjectPricingRule
      - CatalogObjectProductSet
      - CatalogObjectTimePeriod
      - CatalogObjectMeasurementUnit
      - CatalogObjectSubscriptionPlanVariation
      - CatalogObjectItemOption
      - CatalogObjectItemOptionValue
      - CatalogObjectCustomAttributeDefinition
      - CatalogObjectQuickAmountsSettings
      - CatalogObjectSubscriptionPlan
      - CatalogObjectAvailabilityPeriod
    source:
      openapi: openapi/openapi.json
  CatalogObjectBatch:
    docs: A batch of catalog objects.
    properties:
      objects:
        docs: A list of CatalogObjects belonging to this batch.
        type: list<CatalogObject>
    source:
      openapi: openapi/openapi.json
  CatalogObjectCategory:
    docs: >-
      A category that can be assigned to an item or a parent category that can
      be assigned 

      to another category. For example, a clothing category can be assigned to a
      t-shirt item or 

      be made as the parent category to the pants category.
    properties:
      id:
        type: optional<string>
        docs: The ID of the object's category.
      ordinal:
        type: optional<nullable<long>>
        docs: The order of the object within the context of the category.
      type: literal<"CATEGORY">
      category_data:
        type: optional<CatalogCategory>
        docs: >-
          Structured data for a `CatalogCategory`, set for CatalogObjects of
          type `CATEGORY`.
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectReference:
    docs: >-
      A reference to a Catalog object at a specific version. In general this is

      used as an entry point into a graph of catalog objects, where the objects
      exist

      at a specific version.
    properties:
      object_id:
        type: optional<nullable<string>>
        docs: The ID of the referenced object.
      catalog_version:
        type: optional<nullable<long>>
        docs: The version of the object.
    source:
      openapi: openapi/openapi.json
  CatalogObjectType:
    enum:
      - ITEM
      - IMAGE
      - CATEGORY
      - ITEM_VARIATION
      - TAX
      - DISCOUNT
      - MODIFIER_LIST
      - MODIFIER
      - PRICING_RULE
      - PRODUCT_SET
      - TIME_PERIOD
      - MEASUREMENT_UNIT
      - SUBSCRIPTION_PLAN_VARIATION
      - ITEM_OPTION
      - ITEM_OPTION_VAL
      - CUSTOM_ATTRIBUTE_DEFINITION
      - QUICK_AMOUNTS_SETTINGS
      - SUBSCRIPTION_PLAN
      - AVAILABILITY_PERIOD
    docs: >-
      Possible types of CatalogObjects returned from the catalog, each

      containing type-specific properties in the `*_data` field corresponding to
      the specified object type.
    source:
      openapi: openapi/openapi.json
  CatalogPricingRule:
    docs: >-
      Defines how discounts are automatically applied to a set of items that
      match the pricing rule

      during the active time period.
    properties:
      name:
        type: optional<nullable<string>>
        docs: |-
          User-defined name for the pricing rule. For example, "Buy one get one
          free" or "10% off".
      time_period_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          A list of unique IDs for the catalog time periods when

          this pricing rule is in effect. If left unset, the pricing rule is
          always

          in effect.
      discount_id:
        type: optional<nullable<string>>
        docs: |-
          Unique ID for the `CatalogDiscount` to take off
          the price of all matched items.
      match_products_id:
        type: optional<nullable<string>>
        docs: >-
          Unique ID for the `CatalogProductSet` that will be matched by this
          rule. A match rule

          matches within the entire cart, and can match multiple times. This
          field will always be set.
      apply_products_id:
        type: optional<nullable<string>>
        docs: >-
          __Deprecated__: Please use the `exclude_products_id` field to apply

          an exclude set instead. Exclude sets allow better control over
          quantity

          ranges and offer more flexibility for which matched items receive a
          discount.


          `CatalogProductSet` to apply the pricing to.

          An apply rule matches within the subset of the cart that fits the
          match rules (the match set).

          An apply rule can only match once in the match set.

          If not supplied, the pricing will be applied to all products in the
          match set.

          Other products retain their base price, or a price generated by other
          rules.
      exclude_products_id:
        type: optional<nullable<string>>
        docs: >-
          `CatalogProductSet` to exclude from the pricing rule.

          An exclude rule matches within the subset of the cart that fits the
          match rules (the match set).

          An exclude rule can only match once in the match set.

          If not supplied, the pricing will be applied to all products in the
          match set.

          Other products retain their base price, or a price generated by other
          rules.
      valid_from_date:
        type: optional<nullable<string>>
        docs: >-
          Represents the date the Pricing Rule is valid from. Represented in RFC
          3339 full-date format (YYYY-MM-DD).
      valid_from_local_time:
        type: optional<nullable<string>>
        docs: >-
          Represents the local time the pricing rule should be valid from.
          Represented in RFC 3339 partial-time format

          (HH:MM:SS). Partial seconds will be truncated.
      valid_until_date:
        type: optional<nullable<string>>
        docs: >-
          Represents the date the Pricing Rule is valid until. Represented in
          RFC 3339 full-date format (YYYY-MM-DD).
      valid_until_local_time:
        type: optional<nullable<string>>
        docs: >-
          Represents the local time the pricing rule should be valid until.
          Represented in RFC 3339 partial-time format

          (HH:MM:SS). Partial seconds will be truncated.
      exclude_strategy:
        type: optional<ExcludeStrategy>
        docs: >-
          If an `exclude_products_id` was given, controls which subset of
          matched

          products is excluded from any discounts.


          Default value: `LEAST_EXPENSIVE`

          See [ExcludeStrategy](#type-excludestrategy) for possible values
      minimum_order_subtotal_money:
        type: optional<Money>
        docs: |-
          The minimum order subtotal (before discounts or taxes are applied)
          that must be met before this rule may be applied.
      customer_group_ids_any:
        type: optional<nullable<list<string>>>
        docs: >-
          A list of IDs of customer groups, the members of which are eligible
          for discounts specified in this pricing rule.

          Notice that a group ID is generated by the Customers API.

          If this field is not set, the specified discount applies to matched
          products sold to anyone whether the buyer

          has a customer profile created or not. If this
          `customer_group_ids_any` field is set, the specified discount

          applies only to matched products sold to customers belonging to the
          specified customer groups.
    source:
      openapi: openapi/openapi.json
  CatalogPricingType:
    enum:
      - FIXED_PRICING
      - VARIABLE_PRICING
    docs: >-
      Indicates whether the price of a CatalogItemVariation should be entered
      manually at the time of sale.
    source:
      openapi: openapi/openapi.json
  CatalogProductSet:
    docs: >-
      Represents a collection of catalog objects for the purpose of applying a

      `PricingRule`. Including a catalog object will include all of its
      subtypes.

      For example, including a category in a product set will include all of its

      items and associated item variations in the product set. Including an item
      in

      a product set will also include its item variations.
    properties:
      name:
        type: optional<nullable<string>>
        docs: |-
          User-defined name for the product set. For example, "Clearance Items"
          or "Winter Sale Items".
      product_ids_any:
        type: optional<nullable<list<string>>>
        docs: >2-
           Unique IDs for any `CatalogObject` included in this product set. Any
          number of these catalog objects can be in an order for a pricing rule
          to apply.


          This can be used with `product_ids_all` in a parent
          `CatalogProductSet` to

          match groups of products for a bulk discount, such as a discount for
          an

          entree and side combo.


          Only one of `product_ids_all`, `product_ids_any`, or `all_products`
          can be set.


          Max: 500 catalog object IDs.
      product_ids_all:
        type: optional<nullable<list<string>>>
        docs: >-
          Unique IDs for any `CatalogObject` included in this product set.

          All objects in this set must be included in an order for a pricing
          rule to apply.


          Only one of `product_ids_all`, `product_ids_any`, or `all_products`
          can be set.


          Max: 500 catalog object IDs.
      quantity_exact:
        type: optional<nullable<long>>
        docs: >-
          If set, there must be exactly this many items from `products_any` or
          `products_all`

          in the cart for the discount to apply.


          Cannot be combined with either `quantity_min` or `quantity_max`.
      quantity_min:
        type: optional<nullable<long>>
        docs: >-
          If set, there must be at least this many items from `products_any` or
          `products_all`

          in a cart for the discount to apply. See `quantity_exact`. Defaults to
          0 if

          `quantity_exact`, `quantity_min` and `quantity_max` are all
          unspecified.
      quantity_max:
        type: optional<nullable<long>>
        docs: >-
          If set, the pricing rule will apply to a maximum of this many items
          from

          `products_any` or `products_all`.
      all_products:
        type: optional<nullable<boolean>>
        docs: >-
          If set to `true`, the product set will include every item in the
          catalog.

          Only one of `product_ids_all`, `product_ids_any`, or `all_products`
          can be set.
    source:
      openapi: openapi/openapi.json
  CatalogQuery:
    docs: >-
      A query composed of one or more different types of filters to narrow the
      scope of targeted objects when calling the `SearchCatalogObjects`
      endpoint.


      Although a query can have multiple filters, only certain query types can
      be combined per call to
      [SearchCatalogObjects](api-endpoint:Catalog-SearchCatalogObjects).

      Any combination of the following types may be used together:

      - [exact_query](entity:CatalogQueryExact)

      - [prefix_query](entity:CatalogQueryPrefix)

      - [range_query](entity:CatalogQueryRange)

      - [sorted_attribute_query](entity:CatalogQuerySortedAttribute)

      - [text_query](entity:CatalogQueryText)


      All other query types cannot be combined with any others.


      When a query filter is based on an attribute, the attribute must be
      searchable.

      Searchable attributes are listed as follows, along their parent types that
      can be searched for with applicable query filters.


      Searchable attribute and objects queryable by searchable attributes:

      - `name`:  `CatalogItem`, `CatalogItemVariation`, `CatalogCategory`,
      `CatalogTax`, `CatalogDiscount`, `CatalogModifier`, `CatalogModifierList`,
      `CatalogItemOption`, `CatalogItemOptionValue`

      - `description`: `CatalogItem`, `CatalogItemOptionValue`

      - `abbreviation`: `CatalogItem`

      - `upc`: `CatalogItemVariation`

      - `sku`: `CatalogItemVariation`

      - `caption`: `CatalogImage`

      - `display_name`: `CatalogItemOption`


      For example, to search for [CatalogItem](entity:CatalogItem) objects by
      searchable attributes, you can use

      the `"name"`, `"description"`, or `"abbreviation"` attribute in an
      applicable query filter.
    properties:
      sorted_attribute_query:
        type: optional<CatalogQuerySortedAttribute>
        docs: >-
          A query expression to sort returned query result by the given
          attribute.
      exact_query:
        type: optional<CatalogQueryExact>
        docs: >-
          An exact query expression to return objects with attribute name and
          value

          matching the specified attribute name and value exactly. Value
          matching is case insensitive.
      set_query:
        type: optional<CatalogQuerySet>
        docs: >-
          A set query expression to return objects with attribute name and value

          matching the specified attribute name and any of the specified
          attribute values exactly.

          Value matching is case insensitive.
      prefix_query:
        type: optional<CatalogQueryPrefix>
        docs: >-
          A prefix query expression to return objects with attribute values

          that have a prefix matching the specified string value. Value matching
          is case insensitive.
      range_query:
        type: optional<CatalogQueryRange>
        docs: |-
          A range query expression to return objects with numeric values
          that lie in the specified range.
      text_query:
        type: optional<CatalogQueryText>
        docs: >-
          A text query expression to return objects whose searchable attributes
          contain all of the given

          keywords, irrespective of their order. For example, if a `CatalogItem`
          contains custom attribute values of

          `{"name": "t-shirt"}` and `{"description": "Small, Purple"}`, the
          query filter of `{"keywords": ["shirt", "sma", "purp"]}`

          returns this item.
      items_for_tax_query:
        type: optional<CatalogQueryItemsForTax>
        docs: >-
          A query expression to return items that have any of the specified
          taxes (as identified by the corresponding `CatalogTax` object IDs)
          enabled.
      items_for_modifier_list_query:
        type: optional<CatalogQueryItemsForModifierList>
        docs: >-
          A query expression to return items that have any of the given modifier
          list (as identified by the corresponding `CatalogModifierList`s IDs)
          enabled.
      items_for_item_options_query:
        type: optional<CatalogQueryItemsForItemOptions>
        docs: >-
          A query expression to return items that contains the specified item
          options (as identified the corresponding `CatalogItemOption` IDs).
      item_variations_for_item_option_values_query:
        type: optional<CatalogQueryItemVariationsForItemOptionValues>
        docs: >-
          A query expression to return item variations (of the
          [CatalogItemVariation](entity:CatalogItemVariation) type) that

          contain all of the specified `CatalogItemOption` IDs.
    source:
      openapi: openapi/openapi.json
  CatalogQueryExact:
    docs: >-
      The query filter to return the search result by exact match of the
      specified attribute name and value.
    properties:
      attribute_name:
        type: string
        docs: >-
          The name of the attribute to be searched. Matching of the attribute
          name is exact.
        validation:
          minLength: 1
      attribute_value:
        type: string
        docs: >-
          The desired value of the search attribute. Matching of the attribute
          value is case insensitive and can be partial.

          For example, if a specified value of "sma", objects with the named
          attribute value of "Small", "small" are both matched.
    source:
      openapi: openapi/openapi.json
  CatalogQueryItemVariationsForItemOptionValues:
    docs: >-
      The query filter to return the item variations containing the specified
      item option value IDs.
    properties:
      item_option_value_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          A set of `CatalogItemOptionValue` IDs to be used to find associated

          `CatalogItemVariation`s. All ItemVariations that contain all of the
          given

          Item Option Values (in any order) will be returned.
    source:
      openapi: openapi/openapi.json
  CatalogQueryItemsForItemOptions:
    docs: >-
      The query filter to return the items containing the specified item option
      IDs.
    properties:
      item_option_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          A set of `CatalogItemOption` IDs to be used to find associated

          `CatalogItem`s. All Items that contain all of the given Item Options
          (in any order)

          will be returned.
    source:
      openapi: openapi/openapi.json
  CatalogQueryItemsForModifierList:
    docs: >-
      The query filter to return the items containing the specified modifier
      list IDs.
    properties:
      modifier_list_ids:
        docs: >-
          A set of `CatalogModifierList` IDs to be used to find associated
          `CatalogItem`s.
        type: list<string>
    source:
      openapi: openapi/openapi.json
  CatalogQueryItemsForTax:
    docs: The query filter to return the items containing the specified tax IDs.
    properties:
      tax_ids:
        docs: >-
          A set of `CatalogTax` IDs to be used to find associated
          `CatalogItem`s.
        type: list<string>
    source:
      openapi: openapi/openapi.json
  CatalogQueryPrefix:
    docs: >-
      The query filter to return the search result whose named attribute values
      are prefixed by the specified attribute value.
    properties:
      attribute_name:
        type: string
        docs: The name of the attribute to be searched.
        validation:
          minLength: 1
      attribute_prefix:
        type: string
        docs: The desired prefix of the search attribute value.
        validation:
          minLength: 1
    source:
      openapi: openapi/openapi.json
  CatalogQueryRange:
    docs: >-
      The query filter to return the search result whose named attribute values
      fall between the specified range.
    properties:
      attribute_name:
        type: string
        docs: The name of the attribute to be searched.
        validation:
          minLength: 1
      attribute_min_value:
        type: optional<nullable<long>>
        docs: The desired minimum value for the search attribute (inclusive).
      attribute_max_value:
        type: optional<nullable<long>>
        docs: The desired maximum value for the search attribute (inclusive).
    source:
      openapi: openapi/openapi.json
  CatalogQuerySet:
    docs: >-
      The query filter to return the search result(s) by exact match of the
      specified `attribute_name` and any of

      the `attribute_values`.
    properties:
      attribute_name:
        type: string
        docs: >-
          The name of the attribute to be searched. Matching of the attribute
          name is exact.
        validation:
          minLength: 1
      attribute_values:
        docs: >-
          The desired values of the search attribute. Matching of the attribute
          values is exact and case insensitive.

          A maximum of 250 values may be searched in a request.
        type: list<string>
    source:
      openapi: openapi/openapi.json
  CatalogQuerySortedAttribute:
    docs: The query expression to specify the key to sort search results.
    properties:
      attribute_name:
        type: string
        docs: The attribute whose value is used as the sort key.
        validation:
          minLength: 1
      initial_attribute_value:
        type: optional<nullable<string>>
        docs: >-
          The first attribute value to be returned by the query. Ascending sorts
          will return only

          objects with this value or greater, while descending sorts will return
          only objects with this value

          or less. If unset, start at the beginning (for ascending sorts) or end
          (for descending sorts).
      sort_order:
        type: optional<SortOrder>
        docs: |-
          The desired sort order, `"ASC"` (ascending) or `"DESC"` (descending).
          See [SortOrder](#type-sortorder) for possible values
    source:
      openapi: openapi/openapi.json
  CatalogQueryText:
    docs: >-
      The query filter to return the search result whose searchable attribute
      values contain all of the specified keywords or tokens, independent of the
      token order or case.
    properties:
      keywords:
        docs: >-
          A list of 1, 2, or 3 search keywords. Keywords with fewer than 3
          alphanumeric characters are ignored.
        type: list<string>
    source:
      openapi: openapi/openapi.json
  CatalogQuickAmount:
    docs: Represents a Quick Amount in the Catalog.
    properties:
      type:
        type: CatalogQuickAmountType
        docs: >-
          Represents the type of the Quick Amount.

          See [CatalogQuickAmountType](#type-catalogquickamounttype) for
          possible values
      amount:
        type: Money
        docs: Represents the actual amount of the Quick Amount with Money type.
      score:
        type: optional<nullable<long>>
        docs: >-
          Describes the ranking of the Quick Amount provided by machine learning
          model, in the range [0, 100].

          MANUAL type amount will always have score = 100.
      ordinal:
        type: optional<nullable<long>>
        docs: The order in which this Quick Amount should be displayed.
    source:
      openapi: openapi/openapi.json
  CatalogQuickAmountType:
    enum:
      - QUICK_AMOUNT_TYPE_MANUAL
      - QUICK_AMOUNT_TYPE_AUTO
    docs: Determines the type of a specific Quick Amount.
    source:
      openapi: openapi/openapi.json
  CatalogQuickAmountsSettings:
    docs: >-
      A parent Catalog Object model represents a set of Quick Amounts and the
      settings control the amounts.
    properties:
      option:
        type: CatalogQuickAmountsSettingsOption
        docs: >-
          Represents the option seller currently uses on Quick Amounts.

          See
          [CatalogQuickAmountsSettingsOption](#type-catalogquickamountssettingsoption)
          for possible values
      eligible_for_auto_amounts:
        type: optional<nullable<boolean>>
        docs: >-
          Represents location's eligibility for auto amounts

          The boolean should be consistent with whether there are AUTO amounts
          in the `amounts`.
      amounts:
        type: optional<nullable<list<CatalogQuickAmount>>>
        docs: Represents a set of Quick Amounts at this location.
    source:
      openapi: openapi/openapi.json
  CatalogQuickAmountsSettingsOption:
    enum:
      - DISABLED
      - MANUAL
      - AUTO
    docs: Determines a seller's option on Quick Amounts feature.
    source:
      openapi: openapi/openapi.json
  CatalogStockConversion:
    docs: >-
      Represents the rule of conversion between a stockable
      [CatalogItemVariation](entity:CatalogItemVariation)

      and a non-stockable sell-by or receive-by `CatalogItemVariation` that

      share the same underlying stock.
    properties:
      stockable_item_variation_id:
        type: string
        docs: >-
          References to the stockable
          [CatalogItemVariation](entity:CatalogItemVariation)

          for this stock conversion. Selling, receiving or recounting the
          non-stockable `CatalogItemVariation`

          defined with a stock conversion results in adjustments of this
          stockable `CatalogItemVariation`.

          This immutable field must reference a stockable `CatalogItemVariation`

          that shares the parent [CatalogItem](entity:CatalogItem) of the
          converted `CatalogItemVariation.`
        validation:
          minLength: 1
      stockable_quantity:
        type: string
        docs: >-
          The quantity of the stockable item variation (as identified by
          `stockable_item_variation_id`)

          equivalent to the non-stockable item variation quantity (as specified
          in `nonstockable_quantity`)

          as defined by this stock conversion.  It accepts a decimal number in a
          string format that can take

          up to 10 digits before the decimal point and up to 5 digits after the
          decimal point.
        validation:
          minLength: 1
          maxLength: 16
      nonstockable_quantity:
        type: string
        docs: >-
          The converted equivalent quantity of the non-stockable
          [CatalogItemVariation](entity:CatalogItemVariation)

          in its measurement unit. The `stockable_quantity` value and this
          `nonstockable_quantity` value together

          define the conversion ratio between stockable item variation and the
          non-stockable item variation.

          It accepts a decimal number in a string format that can take up to 10
          digits before the decimal point

          and up to 5 digits after the decimal point.
        validation:
          minLength: 1
          maxLength: 16
    source:
      openapi: openapi/openapi.json
  CatalogSubscriptionPlan:
    docs: >-
      Describes a subscription plan. A subscription plan represents what you
      want to sell in a subscription model, and includes references to each of
      the associated subscription plan variations.

      For more information, see [Subscription Plans and
      Variations](https://developer.squareup.com/docs/subscriptions-api/plans-and-variations).
    properties:
      name:
        type: string
        docs: The name of the plan.
      phases:
        type: optional<nullable<list<SubscriptionPhase>>>
        docs: >-
          A list of SubscriptionPhase containing the
          [SubscriptionPhase](entity:SubscriptionPhase) for this plan.

          This field it required. Not including this field will throw a
          REQUIRED_FIELD_MISSING error
      subscription_plan_variations:
        type: optional<nullable<list<CatalogObject>>>
        docs: The list of subscription plan variations available for this product
      eligible_item_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The list of IDs of `CatalogItems` that are eligible for subscription
          by this SubscriptionPlan's variations.
      eligible_category_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The list of IDs of `CatalogCategory` that are eligible for
          subscription by this SubscriptionPlan's variations.
      all_items:
        type: optional<nullable<boolean>>
        docs: >-
          If true, all items in the merchant's catalog are subscribable by this
          SubscriptionPlan.
    source:
      openapi: openapi/openapi.json
  CatalogSubscriptionPlanVariation:
    docs: >-
      Describes a subscription plan variation. A subscription plan variation
      represents how the subscription for a product or service is sold.

      For more information, see [Subscription Plans and
      Variations](https://developer.squareup.com/docs/subscriptions-api/plans-and-variations).
    properties:
      name:
        type: string
        docs: The name of the plan variation.
      phases:
        docs: >-
          A list containing each [SubscriptionPhase](entity:SubscriptionPhase)
          for this plan variation.
        type: list<SubscriptionPhase>
      subscription_plan_id:
        type: optional<nullable<string>>
        docs: The id of the subscription plan, if there is one.
      monthly_billing_anchor_date:
        type: optional<nullable<long>>
        docs: The day of the month the billing period starts.
      can_prorate:
        type: optional<nullable<boolean>>
        docs: Whether bills for this plan variation can be split for proration.
      successor_plan_variation_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of a "successor" plan variation to this one. If the field is
          set, and this object is disabled at all

          locations, it indicates that this variation is deprecated and the
          object identified by the successor ID be used in

          its stead.
    source:
      openapi: openapi/openapi.json
  CatalogTax:
    docs: A tax applicable to an item.
    properties:
      name:
        type: optional<nullable<string>>
        docs: >-
          The tax's name. This is a searchable attribute for use in applicable
          query filters, and its value length is of Unicode code points.
        validation:
          maxLength: 255
      calculation_phase:
        type: optional<TaxCalculationPhase>
        docs: >-
          Whether the tax is calculated based on a payment's subtotal or total.

          See [TaxCalculationPhase](#type-taxcalculationphase) for possible
          values
      inclusion_type:
        type: optional<TaxInclusionType>
        docs: |-
          Whether the tax is `ADDITIVE` or `INCLUSIVE`.
          See [TaxInclusionType](#type-taxinclusiontype) for possible values
      percentage:
        type: optional<nullable<string>>
        docs: >-
          The percentage of the tax in decimal form, using a `'.'` as the
          decimal separator and without a `'%'` sign.

          A value of `7.5` corresponds to 7.5%. For a location-specific tax
          rate, contact the tax authority of the location or a tax consultant.
      applies_to_custom_amounts:
        type: optional<nullable<boolean>>
        docs: >-
          If `true`, the fee applies to custom amounts entered into the Square
          Point of Sale

          app that are not associated with a particular `CatalogItem`.
      enabled:
        type: optional<nullable<boolean>>
        docs: >-
          A Boolean flag to indicate whether the tax is displayed as enabled
          (`true`) in the Square Point of Sale app or not (`false`).
      applies_to_product_set_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of a `CatalogProductSet` object. If set, the tax is applicable
          to all products in the product set.
    source:
      openapi: openapi/openapi.json
  CatalogTimePeriod:
    docs: Represents a time period - either a single period or a repeating period.
    properties:
      event:
        type: optional<nullable<string>>
        docs: >-
          An iCalendar (RFC 5545)
          [event](https://tools.ietf.org/html/rfc5545#section-3.6.1), which

          specifies the name, timing, duration and recurrence of this time
          period.


          Example:


          ```

          DTSTART:20190707T180000

          DURATION:P2H

          RRULE:FREQ=WEEKLY;BYDAY=MO,WE,FR

          ```


          Only `SUMMARY`, `DTSTART`, `DURATION` and `RRULE` fields are
          supported.

          `DTSTART` must be in local (unzoned) time format. Note that while
          `BEGIN:VEVENT`

          and `END:VEVENT` is not required in the request. The response will
          always

          include them.
    source:
      openapi: openapi/openapi.json
  CatalogV1Id:
    docs: >-
      A Square API V1 identifier of an item, including the object ID and its
      associated location ID.
    properties:
      catalog_v1_id:
        type: optional<nullable<string>>
        docs: >-
          The ID for an object used in the Square API V1, if the object ID
          differs from the Square API V2 object ID.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the `Location` this Connect V1 ID is associated with.
    source:
      openapi: openapi/openapi.json
  CatalogVersionUpdatedEvent:
    docs: Published when the catalog is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CatalogVersionUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  CatalogVersionUpdatedEventCatalogVersion:
    properties:
      updated_at:
        type: optional<string>
        docs: Last modification timestamp in RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  CatalogVersionUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type.
      object:
        type: optional<CatalogVersionUpdatedEventObject>
        docs: >-
          An object containing fields and values relevant to the event. Is
          absent if affected object was deleted.
    source:
      openapi: openapi/openapi.json
  CatalogVersionUpdatedEventObject:
    properties:
      catalog_version:
        type: optional<CatalogVersionUpdatedEventCatalogVersion>
        docs: The version of the object.
    source:
      openapi: openapi/openapi.json
  CategoryPathToRootNode:
    docs: A node in the path from a retrieved category to its root node.
    properties:
      category_id:
        type: optional<nullable<string>>
        docs: The category's ID.
      category_name:
        type: optional<nullable<string>>
        docs: The category's name.
    source:
      openapi: openapi/openapi.json
  ChangeBillingAnchorDateResponse:
    docs: >-
      Defines output parameters in a request to the

      [ChangeBillingAnchorDate](api-endpoint:Subscriptions-ChangeBillingAnchorDate)
      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered during the request.
      subscription:
        type: optional<Subscription>
        docs: The specified subscription for updating billing anchor date.
      actions:
        type: optional<list<SubscriptionAction>>
        docs: A list of a single billing anchor date change for the subscription.
    source:
      openapi: openapi/openapi.json
  ChangeTiming:
    enum:
      - IMMEDIATE
      - END_OF_BILLING_CYCLE
    docs: >-
      Supported timings when a pending change, as an action, takes place to a
      subscription.
    source:
      openapi: openapi/openapi.json
  ChargeRequestAdditionalRecipient:
    docs: >-
      Represents an additional recipient (other than the merchant) entitled to a
      portion of the tender.

      Support is currently limited to USD, CAD and GBP currencies
    properties:
      location_id:
        type: string
        docs: >-
          The location ID for a recipient (other than the merchant) receiving a
          portion of the tender.
        validation:
          minLength: 1
          maxLength: 50
      description:
        type: string
        docs: The description of the additional recipient.
        validation:
          minLength: 1
          maxLength: 100
      amount_money:
        type: Money
        docs: The amount of money distributed to the recipient.
    source:
      openapi: openapi/openapi.json
  Checkout:
    docs: |-
      Square Checkout lets merchants accept online payments for supported
      payment types using a checkout workflow hosted on squareup.com.
    properties:
      id:
        type: optional<string>
        docs: ID generated by Square Checkout when a new checkout is requested.
      checkout_page_url:
        type: optional<nullable<string>>
        docs: |-
          The URL that the buyer's browser should be redirected to after the
          checkout is completed.
      ask_for_shipping_address:
        type: optional<nullable<boolean>>
        docs: >-
          If `true`, Square Checkout will collect shipping information on your

          behalf and store that information with the transaction information in
          your

          Square Dashboard.


          Default: `false`.
      merchant_support_email:
        type: optional<nullable<string>>
        docs: >-
          The email address to display on the Square Checkout confirmation page

          and confirmation email that the buyer can use to contact the merchant.


          If this value is not set, the confirmation page and email will display
          the

          primary email address associated with the merchant's Square account.


          Default: none; only exists if explicitly set.
      pre_populate_buyer_email:
        type: optional<nullable<string>>
        docs: |-
          If provided, the buyer's email is pre-populated on the checkout page
          as an editable text field.

          Default: none; only exists if explicitly set.
      pre_populate_shipping_address:
        type: optional<Address>
        docs: |-
          If provided, the buyer's shipping info is pre-populated on the
          checkout page as editable text fields.

          Default: none; only exists if explicitly set.
      redirect_url:
        type: optional<nullable<string>>
        docs: >-
          The URL to redirect to after checkout is completed with `checkoutId`,

          Square's `orderId`, `transactionId`, and `referenceId` appended as URL

          parameters. For example, if the provided redirect_url is

          `http://www.example.com/order-complete`, a successful transaction
          redirects

          the customer to:


          <pre><code>http://www.example.com/order-complete?checkoutId=xxxxxx&amp;orderId=xxxxxx&amp;referenceId=xxxxxx&amp;transactionId=xxxxxx</code></pre>


          If you do not provide a redirect URL, Square Checkout will display an
          order

          confirmation page on your behalf; however Square strongly recommends
          that

          you provide a redirect URL so you can verify the transaction results
          and

          finalize the order through your existing/normal confirmation workflow.
      order:
        type: optional<Order>
        docs: Order to be checked out.
      created_at:
        type: optional<string>
        docs: The time when the checkout was created, in RFC 3339 format.
        access: read-only
      additional_recipients:
        type: optional<nullable<list<AdditionalRecipient>>>
        docs: >-
          Additional recipients (other than the merchant) receiving a portion of
          this checkout.

          For example, fees assessed on the purchase by a third party
          integration.
    source:
      openapi: openapi/openapi.json
  CheckoutLocationSettings:
    properties:
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the location that these settings apply to.
      customer_notes_enabled:
        type: optional<nullable<boolean>>
        docs: Indicates whether customers are allowed to leave notes at checkout.
      policies:
        type: optional<nullable<list<CheckoutLocationSettingsPolicy>>>
        docs: |-
          Policy information is displayed at the bottom of the checkout pages.
          You can set a maximum of two policies.
      branding:
        type: optional<CheckoutLocationSettingsBranding>
        docs: The branding settings for this location.
      tipping:
        type: optional<CheckoutLocationSettingsTipping>
        docs: The tip settings for this location.
      coupons:
        type: optional<CheckoutLocationSettingsCoupons>
        docs: The coupon settings for this location.
      updated_at:
        type: optional<string>
        docs: |-
          The timestamp when the settings were last updated, in RFC 3339 format.
          Examples for January 25th, 2020 6:25:34pm Pacific Standard Time:
          UTC: 2020-01-26T02:25:34Z
          Pacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00
        access: read-only
    source:
      openapi: openapi/openapi.json
  CheckoutLocationSettingsBranding:
    properties:
      header_type:
        type: optional<CheckoutLocationSettingsBrandingHeaderType>
        docs: |-
          Show the location logo on the checkout page.
          See [HeaderType](#type-headertype) for possible values
      button_color:
        type: optional<nullable<string>>
        docs: >-
          The HTML-supported hex color for the button on the checkout page (for
          example, "#FFFFFF").
        validation:
          minLength: 7
          maxLength: 7
      button_shape:
        type: optional<CheckoutLocationSettingsBrandingButtonShape>
        docs: |-
          The shape of the button on the checkout page.
          See [ButtonShape](#type-buttonshape) for possible values
    source:
      openapi: openapi/openapi.json
  CheckoutLocationSettingsBrandingButtonShape:
    enum:
      - SQUARED
      - ROUNDED
      - PILL
    source:
      openapi: openapi/openapi.json
  CheckoutLocationSettingsBrandingHeaderType:
    enum:
      - BUSINESS_NAME
      - FRAMED_LOGO
      - FULL_WIDTH_LOGO
    source:
      openapi: openapi/openapi.json
  CheckoutLocationSettingsCoupons:
    properties:
      enabled:
        type: optional<nullable<boolean>>
        docs: Indicates whether coupons are enabled for this location.
    source:
      openapi: openapi/openapi.json
  CheckoutLocationSettingsPolicy:
    properties:
      uid:
        type: optional<nullable<string>>
        docs: >-
          A unique ID to identify the policy when making changes. You must set
          the UID for policy updates, but it’s optional when setting new
          policies.
      title:
        type: optional<nullable<string>>
        docs: >-
          The title of the policy. This is required when setting the
          description, though you can update it in a different request.
        validation:
          maxLength: 50
      description:
        type: optional<nullable<string>>
        docs: The description of the policy.
        validation:
          maxLength: 4096
    source:
      openapi: openapi/openapi.json
  CheckoutLocationSettingsTipping:
    properties:
      percentages:
        type: optional<nullable<list<integer>>>
        docs: >-
          Set three custom percentage amounts that buyers can select at
          checkout. If Smart Tip is enabled, this only applies to transactions
          totaling $10 or more.
      smart_tipping_enabled:
        type: optional<nullable<boolean>>
        docs: >-
          Enables Smart Tip Amounts. If Smart Tip Amounts is enabled, tipping
          works as follows:

          If a transaction is less than $10, the available tipping options
          include No Tip, $1, $2, or $3.

          If a transaction is $10 or more, the available tipping options include
          No Tip, 15%, 20%, or 25%. 

          You can set custom percentage amounts with the `percentages` field.
      default_percent:
        type: optional<nullable<integer>>
        docs: >-
          Set the pre-selected percentage amounts that appear at checkout. If
          Smart Tip is enabled, this only applies to transactions totaling $10
          or more.
      smart_tips:
        type: optional<nullable<list<Money>>>
        docs: Show the Smart Tip Amounts for this location.
      default_smart_tip:
        type: optional<Money>
        docs: >-
          Set the pre-selected whole amount that appears at checkout when Smart
          Tip is enabled and the transaction amount is less than $10.
    source:
      openapi: openapi/openapi.json
  CheckoutMerchantSettings:
    properties:
      payment_methods:
        type: optional<CheckoutMerchantSettingsPaymentMethods>
        docs: The set of payment methods accepted for the merchant's account.
      updated_at:
        type: optional<string>
        docs: |-
          The timestamp when the settings were last updated, in RFC 3339 format.
          Examples for January 25th, 2020 6:25:34pm Pacific Standard Time:
          UTC: 2020-01-26T02:25:34Z
          Pacific Standard Time with UTC offset: 2020-01-25T18:25:34-08:00
        access: read-only
    source:
      openapi: openapi/openapi.json
  CheckoutMerchantSettingsPaymentMethods:
    properties:
      apple_pay: optional<CheckoutMerchantSettingsPaymentMethodsPaymentMethod>
      google_pay: optional<CheckoutMerchantSettingsPaymentMethodsPaymentMethod>
      cash_app: optional<CheckoutMerchantSettingsPaymentMethodsPaymentMethod>
      afterpay_clearpay: optional<CheckoutMerchantSettingsPaymentMethodsAfterpayClearpay>
    source:
      openapi: openapi/openapi.json
  CheckoutMerchantSettingsPaymentMethodsAfterpayClearpay:
    docs: The settings allowed for AfterpayClearpay.
    properties:
      order_eligibility_range:
        type: >-
          optional<CheckoutMerchantSettingsPaymentMethodsAfterpayClearpayEligibilityRange>
        docs: >-
          Afterpay is shown as an option for order totals falling within the
          configured range.
      item_eligibility_range:
        type: >-
          optional<CheckoutMerchantSettingsPaymentMethodsAfterpayClearpayEligibilityRange>
        docs: >-
          Afterpay is shown as an option for item totals falling within the
          configured range.
      enabled:
        type: optional<boolean>
        docs: Indicates whether the payment method is enabled for the account.
        access: read-only
    source:
      openapi: openapi/openapi.json
  CheckoutMerchantSettingsPaymentMethodsAfterpayClearpayEligibilityRange:
    docs: A range of purchase price that qualifies.
    properties:
      min: Money
      max: Money
    source:
      openapi: openapi/openapi.json
  CheckoutMerchantSettingsPaymentMethodsPaymentMethod:
    docs: The settings allowed for a payment method.
    properties:
      enabled:
        type: optional<nullable<boolean>>
        docs: Indicates whether the payment method is enabled for the account.
    source:
      openapi: openapi/openapi.json
  CheckoutOptions:
    properties:
      allow_tipping:
        type: optional<nullable<boolean>>
        docs: Indicates whether the payment allows tipping.
      custom_fields:
        type: optional<nullable<list<CustomField>>>
        docs: The custom fields requesting information from the buyer.
      subscription_plan_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the subscription plan for the buyer to pay and subscribe.

          For more information, see [Subscription Plan
          Checkout](https://developer.squareup.com/docs/checkout-api/subscription-plan-checkout).
        validation:
          maxLength: 255
      redirect_url:
        type: optional<nullable<string>>
        docs: >-
          The confirmation page URL to redirect the buyer to after Square
          processes the payment.
        validation:
          maxLength: 2048
      merchant_support_email:
        type: optional<nullable<string>>
        docs: The email address that buyers can use to contact the seller.
        validation:
          maxLength: 256
      ask_for_shipping_address:
        type: optional<nullable<boolean>>
        docs: Indicates whether to include the address fields in the payment form.
      accepted_payment_methods:
        type: optional<AcceptedPaymentMethods>
        docs: The methods allowed for buyers during checkout.
      app_fee_money:
        type: optional<Money>
        docs: >-
          The amount of money that the developer is taking as a fee for
          facilitating the payment on behalf of the seller.


          The amount cannot be more than 90% of the total amount of the payment.


          The amount must be specified in the smallest denomination of the
          applicable currency (for example, US dollar amounts are specified in
          cents). For more information, see [Working with Monetary
          Amounts](https://developer.squareup.com/docs/build-basics/common-data-types/working-with-monetary-amounts).


          The fee currency code must match the currency associated with the
          seller that is accepting the payment. The application must be from a
          developer account in the same country and using the same currency code
          as the seller. For more information about the application fee
          scenario, see [Take Payments and Collect
          Fees](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees).


          To set this field, `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth
          permission is required. For more information, see
          [Permissions](https://developer.squareup.com/docs/payments-api/collect-fees/additional-considerations#permissions).
      shipping_fee:
        type: optional<ShippingFee>
        docs: >-
          The fee associated with shipping to be applied to the `Order` as a
          service charge.
      enable_coupon:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether to include the `Add coupon` section for the buyer to
          provide a Square marketing coupon in the payment form.
      enable_loyalty:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether to include the `REWARDS` section for the buyer to
          opt in to loyalty, redeem rewards in the payment form, or both.
    source:
      openapi: openapi/openapi.json
  CheckoutOptionsPaymentType:
    enum:
      - CARD_PRESENT
      - MANUAL_CARD_ENTRY
      - FELICA_ID
      - FELICA_QUICPAY
      - FELICA_TRANSPORTATION_GROUP
      - FELICA_ALL
      - PAYPAY
      - QR_CODE
    source:
      openapi: openapi/openapi.json
  ClearpayDetails:
    docs: Additional details about Clearpay payments.
    properties:
      email_address:
        type: optional<nullable<string>>
        docs: Email address on the buyer's Clearpay account.
        validation:
          maxLength: 255
    source:
      openapi: openapi/openapi.json
  CloneOrderResponse:
    docs: |-
      Defines the fields that are included in the response body of
      a request to the [CloneOrder](api-endpoint:Orders-CloneOrder) endpoint.
    properties:
      order:
        type: optional<Order>
        docs: The cloned order.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CollectedData:
    properties:
      input_text:
        type: optional<string>
        docs: The buyer's input text.
        access: read-only
    source:
      openapi: openapi/openapi.json
  CompletePaymentResponse:
    docs: >-
      Defines the response returned
      by[CompletePayment](api-endpoint:Payments-CompletePayment).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      payment:
        type: optional<Payment>
        docs: The successfully completed payment.
    source:
      openapi: openapi/openapi.json
  Component:
    docs: The wrapper object for the component entries of a given component type.
    properties:
      type:
        type: ComponentComponentType
        docs: >-
          The type of this component. Each component type has expected
          properties expressed

          in a structured format within its corresponding `*_details` field.

          See [ComponentType](#type-componenttype) for possible values
      application_details:
        type: optional<DeviceComponentDetailsApplicationDetails>
        docs: >-
          Structured data for an `Application`, set for Components of type
          `APPLICATION`.
      card_reader_details:
        type: optional<DeviceComponentDetailsCardReaderDetails>
        docs: >-
          Structured data for a `CardReader`, set for Components of type
          `CARD_READER`.
      battery_details:
        type: optional<DeviceComponentDetailsBatteryDetails>
        docs: Structured data for a `Battery`, set for Components of type `BATTERY`.
      wifi_details:
        type: optional<DeviceComponentDetailsWiFiDetails>
        docs: >-
          Structured data for a `WiFi` interface, set for Components of type
          `WIFI`.
      ethernet_details:
        type: optional<DeviceComponentDetailsEthernetDetails>
        docs: >-
          Structured data for an `Ethernet` interface, set for Components of
          type `ETHERNET`.
    source:
      openapi: openapi/openapi.json
  ComponentComponentType:
    enum:
      - APPLICATION
      - CARD_READER
      - BATTERY
      - WIFI
      - ETHERNET
      - PRINTER
    docs: An enum for ComponentType.
    source:
      openapi: openapi/openapi.json
  ConfirmationDecision:
    properties:
      has_agreed:
        type: optional<boolean>
        docs: The buyer's decision to the displayed terms.
        access: read-only
    source:
      openapi: openapi/openapi.json
  ConfirmationOptions:
    properties:
      title:
        type: string
        docs: >-
          The title text to display in the confirmation screen flow on the
          Terminal.
        validation:
          minLength: 1
          maxLength: 250
      body:
        type: string
        docs: >-
          The agreement details to display in the confirmation flow on the
          Terminal.
        validation:
          minLength: 1
          maxLength: 10000
      agree_button_text:
        type: string
        docs: >-
          The button text to display indicating the customer agrees to the
          displayed terms.
        validation:
          minLength: 1
          maxLength: 250
      disagree_button_text:
        type: optional<nullable<string>>
        docs: >-
          The button text to display indicating the customer does not agree to
          the displayed terms.
        validation:
          minLength: 1
          maxLength: 250
      decision:
        type: optional<ConfirmationDecision>
        docs: >-
          The result of the buyer’s actions when presented with the confirmation
          screen.
    source:
      openapi: openapi/openapi.json
  Coordinates:
    docs: Latitude and longitude coordinates.
    properties:
      latitude:
        type: optional<nullable<double>>
        docs: The latitude of the coordinate expressed in degrees.
      longitude:
        type: optional<nullable<double>>
        docs: The longitude of the coordinate expressed in degrees.
    source:
      openapi: openapi/openapi.json
  Country:
    enum:
      - ZZ
      - AD
      - AE
      - AF
      - AG
      - AI
      - AL
      - AM
      - AO
      - AQ
      - AR
      - AS
      - AT
      - AU
      - AW
      - AX
      - AZ
      - BA
      - BB
      - BD
      - BE
      - BF
      - BG
      - BH
      - BI
      - BJ
      - BL
      - BM
      - BN
      - BO
      - BQ
      - BR
      - BS
      - BT
      - BV
      - BW
      - BY
      - BZ
      - CA
      - CC
      - CD
      - CF
      - CG
      - CH
      - CI
      - CK
      - CL
      - CM
      - CN
      - CO
      - CR
      - CU
      - CV
      - CW
      - CX
      - CY
      - CZ
      - DE
      - DJ
      - DK
      - DM
      - DO
      - DZ
      - EC
      - EE
      - EG
      - EH
      - ER
      - ES
      - ET
      - FI
      - FJ
      - FK
      - FM
      - FO
      - FR
      - GA
      - GB
      - GD
      - GE
      - GF
      - GG
      - GH
      - GI
      - GL
      - GM
      - GN
      - GP
      - GQ
      - GR
      - GS
      - GT
      - GU
      - GW
      - GY
      - HK
      - HM
      - HN
      - HR
      - HT
      - HU
      - ID
      - IE
      - IL
      - IM
      - IN
      - IO
      - IQ
      - IR
      - IS
      - IT
      - JE
      - JM
      - JO
      - JP
      - KE
      - KG
      - KH
      - KI
      - KM
      - KN
      - KP
      - KR
      - KW
      - KY
      - KZ
      - LA
      - LB
      - LC
      - LI
      - LK
      - LR
      - LS
      - LT
      - LU
      - LV
      - LY
      - MA
      - MC
      - MD
      - ME
      - MF
      - MG
      - MH
      - MK
      - ML
      - MM
      - MN
      - MO
      - MP
      - MQ
      - MR
      - MS
      - MT
      - MU
      - MV
      - MW
      - MX
      - MY
      - MZ
      - NA
      - NC
      - NE
      - NF
      - NG
      - NI
      - NL
      - 'NO'
      - NP
      - NR
      - NU
      - NZ
      - OM
      - PA
      - PE
      - PF
      - PG
      - PH
      - PK
      - PL
      - PM
      - PN
      - PR
      - PS
      - PT
      - PW
      - PY
      - QA
      - RE
      - RO
      - RS
      - RU
      - RW
      - SA
      - SB
      - SC
      - SD
      - SE
      - SG
      - SH
      - SI
      - SJ
      - SK
      - SL
      - SM
      - SN
      - SO
      - SR
      - SS
      - ST
      - SV
      - SX
      - SY
      - SZ
      - TC
      - TD
      - TF
      - TG
      - TH
      - TJ
      - TK
      - TL
      - TM
      - TN
      - TO
      - TR
      - TT
      - TV
      - TW
      - TZ
      - UA
      - UG
      - UM
      - US
      - UY
      - UZ
      - VA
      - VC
      - VE
      - VG
      - VI
      - VN
      - VU
      - WF
      - WS
      - YE
      - YT
      - ZA
      - ZM
      - ZW
    docs: >-
      Indicates the country associated with another entity, such as a business.

      Values are in [ISO 3166-1-alpha-2
      format](http://www.iso.org/iso/home/standards/country_codes.htm).
    source:
      openapi: openapi/openapi.json
  CreateBookingCustomAttributeDefinitionResponse:
    docs: >-
      Represents a
      [CreateBookingCustomAttributeDefinition](api-endpoint:BookingCustomAttributes-CreateBookingCustomAttributeDefinition)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The newly created custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateBookingResponse:
    properties:
      booking:
        type: optional<Booking>
        docs: The booking that was created.
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateBreakTypeResponse:
    docs: >-
      The response to the request to create a `BreakType`. The response contains

      the created `BreakType` object and might contain a set of `Error` objects
      if

      the request resulted in errors.
    properties:
      break_type:
        type: optional<BreakType>
        docs: The `BreakType` that was created by the request.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateCardResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the [CreateCard](api-endpoint:Cards-CreateCard) endpoint.


      Note: if there are errors processing the request, the card field will not
      be

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors resulting from the request.
      card:
        type: optional<Card>
        docs: The card created by the request.
    source:
      openapi: openapi/openapi.json
  CreateCatalogImageRequest:
    properties:
      idempotency_key:
        type: string
        docs: >-
          A unique string that identifies this CreateCatalogImage request.

          Keys can be any valid string but must be unique for every
          CreateCatalogImage request.


          See [Idempotency
          keys](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency)
          for more information.
        validation:
          minLength: 1
          maxLength: 128
      object_id:
        type: optional<string>
        docs: >-
          Unique ID of the `CatalogObject` to attach this `CatalogImage` object
          to. Leave this

          field empty to create unattached images, for example if you are
          building an integration

          where an image can be attached to catalog items at a later time.
      image:
        type: CatalogObject
        docs: >-
          The new `CatalogObject` of the `IMAGE` type, namely, a `CatalogImage`
          object, to encapsulate the specified image file.
      is_primary:
        type: optional<boolean>
        docs: >-
          If this is set to `true`, the image created will be the primary, or
          first image of the object referenced by `object_id`.

          If the `CatalogObject` already has a primary `CatalogImage`, setting
          this field to `true` will replace the primary image.

          If this is set to `false` and you use the Square API version
          2021-12-15 or later, the image id will be appended to the list of
          `image_ids` on the object.


          With Square API version 2021-12-15 or later, the default value is
          `false`. Otherwise, the effective default value is `true`.
    source:
      openapi: openapi/openapi.json
  CreateCatalogImageResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      image:
        type: optional<CatalogObject>
        docs: |-
          The newly created `CatalogImage` including a Square-generated
          URL for the encapsulated image file.
    source:
      openapi: openapi/openapi.json
  CreateCheckoutResponse:
    docs: |-
      Defines the fields that are included in the response body of
      a request to the `CreateCheckout` endpoint.
    properties:
      checkout:
        type: optional<Checkout>
        docs: >-
          The newly created `checkout` object associated with the provided
          idempotency key.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateCustomerCardResponse:
    docs: |-
      Defines the fields that are included in the response body of
      a request to the `CreateCustomerCard` endpoint.

      Either `errors` or `card` is present in a given response (never both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      card:
        type: optional<Card>
        docs: The created card on file.
    source:
      openapi: openapi/openapi.json
  CreateCustomerCustomAttributeDefinitionResponse:
    docs: >-
      Represents a
      [CreateCustomerCustomAttributeDefinition](api-endpoint:CustomerCustomAttributes-CreateCustomerCustomAttributeDefinition)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The new custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateCustomerGroupResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [CreateCustomerGroup](api-endpoint:CustomerGroups-CreateCustomerGroup)
      endpoint.


      Either `errors` or `group` is present in a given response (never both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      group:
        type: optional<CustomerGroup>
        docs: The successfully created customer group.
    source:
      openapi: openapi/openapi.json
  CreateCustomerResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the [CreateCustomer](api-endpoint:Customers-CreateCustomer)
      or

      [BulkCreateCustomers](api-endpoint:Customers-BulkCreateCustomers)
      endpoint.


      Either `errors` or `customer` is present in a given response (never both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      customer:
        type: optional<Customer>
        docs: The created customer.
    source:
      openapi: openapi/openapi.json
  CreateDeviceCodeResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      device_code:
        type: optional<DeviceCode>
        docs: The created DeviceCode object containing the device code string.
    source:
      openapi: openapi/openapi.json
  CreateDisputeEvidenceFileRequest:
    docs: Defines the parameters for a `CreateDisputeEvidenceFile` request.
    properties:
      idempotency_key:
        type: string
        docs: >-
          A unique key identifying the request. For more information, see
          [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
        validation:
          minLength: 1
          maxLength: 45
      evidence_type:
        type: optional<DisputeEvidenceType>
        docs: >-
          The type of evidence you are uploading.

          See [DisputeEvidenceType](#type-disputeevidencetype) for possible
          values
      content_type:
        type: optional<string>
        docs: >-
          The MIME type of the uploaded file.

          The type can be image/heic, image/heif, image/jpeg, application/pdf,
          image/png, or image/tiff.
        validation:
          minLength: 1
          maxLength: 40
    source:
      openapi: openapi/openapi.json
  CreateDisputeEvidenceFileResponse:
    docs: Defines the fields in a `CreateDisputeEvidenceFile` response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      evidence:
        type: optional<DisputeEvidence>
        docs: The metadata of the newly uploaded dispute evidence.
    source:
      openapi: openapi/openapi.json
  CreateDisputeEvidenceTextResponse:
    docs: Defines the fields in a `CreateDisputeEvidenceText` response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      evidence:
        type: optional<DisputeEvidence>
        docs: The newly uploaded dispute evidence metadata.
    source:
      openapi: openapi/openapi.json
  CreateGiftCardActivityResponse:
    docs: >-
      A response that contains a `GiftCardActivity` that was created.

      The response might contain a set of `Error` objects if the request
      resulted in errors.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      gift_card_activity:
        type: optional<GiftCardActivity>
        docs: The gift card activity that was created.
    source:
      openapi: openapi/openapi.json
  CreateGiftCardResponse:
    docs: >-
      A response that contains a `GiftCard`. The response might contain a set of
      `Error` objects if the request

      resulted in errors.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      gift_card:
        type: optional<GiftCard>
        docs: The new gift card.
    source:
      openapi: openapi/openapi.json
  CreateInvoiceAttachmentRequestData:
    docs: >-
      Represents a
      [CreateInvoiceAttachment](api-endpoint:Invoices-CreateInvoiceAttachment)
      request.
    properties:
      idempotency_key:
        type: optional<string>
        docs: >-
          A unique string that identifies the `CreateInvoiceAttachment` request.

          For more information, see
          [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).
        validation:
          maxLength: 128
      description:
        type: optional<string>
        docs: The description of the attachment to display on the invoice.
        validation:
          maxLength: 128
    source:
      openapi: openapi/openapi.json
  CreateInvoiceAttachmentResponse:
    docs: >-
      Represents a
      [CreateInvoiceAttachment](api-endpoint:Invoices-CreateInvoiceAttachment)
      response.
    properties:
      attachment:
        type: optional<InvoiceAttachment>
        docs: Metadata about the attachment that was added to the invoice.
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  CreateInvoiceResponse:
    docs: The response returned by the `CreateInvoice` request.
    properties:
      invoice:
        type: optional<Invoice>
        docs: The newly created invoice.
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  CreateJobResponse:
    docs: >-
      Represents a [CreateJob](api-endpoint:Team-CreateJob) response. Either
      `job` or `errors`

      is present in the response.
    properties:
      job:
        type: optional<Job>
        docs: The new job.
      errors:
        type: optional<list<Error>>
        docs: The errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateLocationCustomAttributeDefinitionResponse:
    docs: >-
      Represents a
      [CreateLocationCustomAttributeDefinition](api-endpoint:LocationCustomAttributes-CreateLocationCustomAttributeDefinition)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The new custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateLocationResponse:
    docs: >-
      The response object returned by the
      [CreateLocation](api-endpoint:Locations-CreateLocation) endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: >-
          Information about
          [errors](https://developer.squareup.com/docs/build-basics/handling-errors)
          encountered during the request.
      location:
        type: optional<Location>
        docs: The newly created `Location` object.
    source:
      openapi: openapi/openapi.json
  CreateLoyaltyAccountResponse:
    docs: A response that includes loyalty account created.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      loyalty_account:
        type: optional<LoyaltyAccount>
        docs: The newly created loyalty account.
    source:
      openapi: openapi/openapi.json
  CreateLoyaltyPromotionResponse:
    docs: >-
      Represents a
      [CreateLoyaltyPromotion](api-endpoint:Loyalty-CreateLoyaltyPromotion)
      response.

      Either `loyalty_promotion` or `errors` is present in the response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      loyalty_promotion:
        type: optional<LoyaltyPromotion>
        docs: The new loyalty promotion.
    source:
      openapi: openapi/openapi.json
  CreateLoyaltyRewardResponse:
    docs: A response that includes the loyalty reward created.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      reward:
        type: optional<LoyaltyReward>
        docs: The loyalty reward created.
    source:
      openapi: openapi/openapi.json
  CreateMerchantCustomAttributeDefinitionResponse:
    docs: >-
      Represents a
      [CreateMerchantCustomAttributeDefinition](api-endpoint:MerchantCustomAttributes-CreateMerchantCustomAttributeDefinition)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The new custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateMobileAuthorizationCodeResponse:
    docs: |-
      Defines the fields that are included in the response body of
      a request to the `CreateMobileAuthorizationCode` endpoint.
    properties:
      authorization_code:
        type: optional<string>
        docs: >-
          The generated authorization code that connects a mobile application
          instance

          to a Square account.
        validation:
          maxLength: 191
      expires_at:
        type: optional<string>
        docs: >-
          The timestamp when `authorization_code` expires, in

          [RFC 3339](https://tools.ietf.org/html/rfc3339) format (for example,
          "2016-09-04T23:59:33.123Z").
        validation:
          minLength: 20
          maxLength: 48
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateOrderCustomAttributeDefinitionResponse:
    docs: Represents a response from creating an order custom attribute definition.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The new custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateOrderRequest:
    properties:
      order:
        type: optional<Order>
        docs: >-
          The order to create. If this field is set, the only other top-level
          field that can be

          set is the `idempotency_key`.
      idempotency_key:
        type: optional<string>
        docs: >-
          A value you specify that uniquely identifies this

          order among orders you have created.


          If you are unsure whether a particular order was created successfully,

          you can try it again with the same idempotency key without

          worrying about creating duplicate orders.


          For more information, see
          [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).
        validation:
          maxLength: 192
    source:
      openapi: openapi/openapi.json
  CreateOrderResponse:
    docs: |-
      Defines the fields that are included in the response body of
      a request to the `CreateOrder` endpoint.

      Either `errors` or `order` is present in a given response, but never both.
    properties:
      order:
        type: optional<Order>
        docs: The newly created order.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreatePaymentLinkResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      payment_link:
        type: optional<PaymentLink>
        docs: The created payment link.
      related_resources:
        type: optional<PaymentLinkRelatedResources>
        docs: The list of related objects.
    source:
      openapi: openapi/openapi.json
  CreatePaymentResponse:
    docs: >-
      Defines the response returned by
      [CreatePayment](api-endpoint:Payments-CreatePayment).


      If there are errors processing the request, the `payment` field might not
      be

      present, or it might be present with a status of `FAILED`.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      payment:
        type: optional<Payment>
        docs: The newly created payment.
    source:
      openapi: openapi/openapi.json
  CreateScheduledShiftResponse:
    docs: >-
      Represents a
      [CreateScheduledShift](api-endpoint:Labor-CreateScheduledShift) response.

      Either `scheduled_shift` or `errors` is present in the response.
    properties:
      scheduled_shift:
        type: optional<ScheduledShift>
        docs: >-
          The new scheduled shift. To make the shift public, call 

          [PublishScheduledShift](api-endpoint:Labor-PublishScheduledShift) or

          [BulkPublishScheduledShifts](api-endpoint:Labor-BulkPublishScheduledShifts).
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateShiftResponse:
    docs: |-
      The response to a request to create a `Shift`. The response contains
      the created `Shift` object and might contain a set of `Error` objects if
      the request resulted in errors.
    properties:
      shift:
        type: optional<Shift>
        docs: The `Shift` that was created on the request.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateSubscriptionResponse:
    docs: >-
      Defines output parameters in a response from the

      [CreateSubscription](api-endpoint:Subscriptions-CreateSubscription)
      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered during the request.
      subscription:
        type: optional<Subscription>
        docs: >-
          The newly created subscription.


          For more information, see

          [Subscription
          object](https://developer.squareup.com/docs/subscriptions-api/manage-subscriptions#subscription-object).
    source:
      openapi: openapi/openapi.json
  CreateTeamMemberRequest:
    docs: Represents a create request for a `TeamMember` object.
    properties:
      idempotency_key:
        type: optional<string>
        docs: >-
          A unique string that identifies this `CreateTeamMember` request.

          Keys can be any valid string, but must be unique for every request.

          For more information, see
          [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).


          The minimum length is 1 and the maximum length is 45.
      team_member:
        type: optional<TeamMember>
        docs: >-
          **Required** The data used to create the `TeamMember` object. If you
          include `wage_setting`, you must provide

          `job_id` for each job assignment. To get job IDs, call
          [ListJobs](api-endpoint:Team-ListJobs).
    source:
      openapi: openapi/openapi.json
  CreateTeamMemberResponse:
    docs: >-
      Represents a response from a create request containing the created
      `TeamMember` object or error messages.
    properties:
      team_member:
        type: optional<TeamMember>
        docs: The successfully created `TeamMember` object.
      errors:
        type: optional<list<Error>>
        docs: The errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateTerminalActionResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      action:
        type: optional<TerminalAction>
        docs: The created `TerminalAction`
    source:
      openapi: openapi/openapi.json
  CreateTerminalCheckoutResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      checkout:
        type: optional<TerminalCheckout>
        docs: The created `TerminalCheckout`.
    source:
      openapi: openapi/openapi.json
  CreateTerminalRefundResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      refund:
        type: optional<TerminalRefund>
        docs: The created `TerminalRefund`.
    source:
      openapi: openapi/openapi.json
  CreateTimecardResponse:
    docs: >-
      The response to a request to create a `Timecard`. The response contains

      the created `Timecard` object and might contain a set of `Error` objects
      if

      the request resulted in errors.
    properties:
      timecard:
        type: optional<Timecard>
        docs: The `Timecard` that was created on the request.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  CreateVendorResponse:
    docs: >-
      Represents an output from a call to
      [CreateVendor](api-endpoint:Vendors-CreateVendor).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered when the request fails.
      vendor:
        type: optional<Vendor>
        docs: The successfully created [Vendor](entity:Vendor) object.
    source:
      openapi: openapi/openapi.json
  CreateWebhookSubscriptionResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [CreateWebhookSubscription](api-endpoint:WebhookSubscriptions-CreateWebhookSubscription)
      endpoint.


      Note: if there are errors processing the request, the
      [Subscription](entity:WebhookSubscription) will not be

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      subscription:
        type: optional<WebhookSubscription>
        docs: The new [Subscription](entity:WebhookSubscription).
    source:
      openapi: openapi/openapi.json
  Currency:
    enum:
      - UNKNOWN_CURRENCY
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTN
      - BWP
      - BYR
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LTL
      - LVL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRO
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SLE
      - SOS
      - SRD
      - SSP
      - STD
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - USS
      - UYI
      - UYU
      - UZS
      - VEF
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XTS
      - XXX
      - YER
      - ZAR
      - ZMK
      - ZMW
      - BTC
      - XUS
    docs: >-
      Indicates the associated currency for an amount of money. Values
      correspond

      to [ISO 4217](https://wikipedia.org/wiki/ISO_4217).
    source:
      openapi: openapi/openapi.json
  CustomAttribute:
    docs: |-
      A custom attribute value. Each custom attribute value has a corresponding
      `CustomAttributeDefinition` object.
    properties:
      key:
        type: optional<nullable<string>>
        docs: >-
          The identifier

          of the custom attribute definition and its corresponding custom
          attributes. This value

          can be a simple key, which is the key that is provided when the custom
          attribute definition

          is created, or a qualified key, if the requesting

          application is not the definition owner. The qualified key consists of
          the application ID

          of the custom attribute definition owner

          followed by the simple key that was provided when the definition was
          created. It has the

          format application_id:simple key.


          The value for a simple key can contain up to 60 alphanumeric
          characters, periods (.),

          underscores (_), and hyphens (-).
        validation:
          pattern: ^([a-zA-Z0-9\._-]+:)?[a-zA-Z0-9\._-]{1,60}$
          minLength: 1
      value: optional<unknown>
      version:
        type: optional<integer>
        docs: >-
          Read only. The current version of the custom attribute. This field is
          incremented when the custom attribute is changed.

          When updating an existing custom attribute value, you can provide this
          field

          and specify the current version of the custom attribute to enable

          [optimistic
          concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency).

          This field can also be used to enforce strong consistency for reads.
          For more information about strong consistency for reads,

          see [Custom Attributes
          Overview](https://developer.squareup.com/docs/devtools/customattributes/overview).
      visibility:
        type: optional<CustomAttributeDefinitionVisibility>
        docs: >-
          A copy of the `visibility` field value for the associated custom
          attribute definition.

          See
          [CustomAttributeDefinitionVisibility](#type-customattributedefinitionvisibility)
          for possible values
      definition:
        type: optional<CustomAttributeDefinition>
        docs: >-
          A copy of the associated custom attribute definition object. This
          field is only set when

          the optional field is specified on the request.
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the custom attribute was created or
          was most recently

          updated, in RFC 3339 format.
        access: read-only
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the custom attribute was created, in
          RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  CustomAttributeDefinition:
    docs: >-
      Represents a definition for custom attribute values. A custom attribute
      definition

      specifies the key, visibility, schema, and other properties for a custom
      attribute.
    properties:
      key:
        type: optional<nullable<string>>
        docs: >-
          The identifier

          of the custom attribute definition and its corresponding custom
          attributes. This value

          can be a simple key, which is the key that is provided when the custom
          attribute definition

          is created, or a qualified key, if the requesting

          application is not the definition owner. The qualified key consists of
          the application ID

          of the custom attribute definition owner

          followed by the simple key that was provided when the definition was
          created. It has the

          format application_id:simple key.


          The value for a simple key can contain up to 60 alphanumeric
          characters, periods (.),

          underscores (_), and hyphens (-).


          This field can not be changed

          after the custom attribute definition is created. This field is
          required when creating

          a definition and must be unique per application, seller, and resource
          type.
        validation:
          pattern: ^([a-zA-Z0-9\._-]+:)?[a-zA-Z0-9\._-]{1,60}$
          minLength: 1
      schema:
        type: optional<nullable<map<string, unknown>>>
        docs: >-
          The JSON schema for the custom attribute definition, which determines
          the data type of the corresponding custom attributes. For more
          information,

          see [Custom Attributes
          Overview](https://developer.squareup.com/docs/devtools/customattributes/overview).
          This field is required when creating a definition.
      name:
        type: optional<nullable<string>>
        docs: >-
          The name of the custom attribute definition for API and seller-facing
          UI purposes. The name must

          be unique within the seller and application pair. This field is
          required if the

          `visibility` field is `VISIBILITY_READ_ONLY` or
          `VISIBILITY_READ_WRITE_VALUES`.
        validation:
          maxLength: 255
      description:
        type: optional<nullable<string>>
        docs: >-
          Seller-oriented description of the custom attribute definition,
          including any constraints

          that the seller should observe. May be displayed as a tooltip in
          Square UIs. This field is

          required if the `visibility` field is `VISIBILITY_READ_ONLY` or
          `VISIBILITY_READ_WRITE_VALUES`.
        validation:
          maxLength: 255
      visibility:
        type: optional<CustomAttributeDefinitionVisibility>
        docs: >-
          Specifies how the custom attribute definition and its values should be
          shared with

          the seller and other applications. If no value is specified, the value
          defaults to `VISIBILITY_HIDDEN`.

          See [Visibility](#type-visibility) for possible values
      version:
        type: optional<integer>
        docs: >-
          Read only. The current version of the custom attribute definition.

          The value is incremented each time the custom attribute definition is
          updated.

          When updating a custom attribute definition, you can provide this
          field

          and specify the current version of the custom attribute definition to
          enable

          [optimistic
          concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency).


          On writes, this field must be set to the latest version. Stale writes
          are rejected.


          This field can also be used to enforce strong consistency for reads.
          For more information about strong consistency for reads,

          see [Custom Attributes
          Overview](https://developer.squareup.com/docs/devtools/customattributes/overview).
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the custom attribute definition was
          created or most recently updated,

          in RFC 3339 format.
        access: read-only
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the custom attribute definition was
          created, in RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  CustomAttributeDefinitionEventData:
    docs: |-
      Represents an object in the CustomAttributeDefinition event notification
      payload that contains the affected custom attribute definition.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of the event data object. The value is
          `"custom_attribute_definition"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the event data object.
        validation:
          maxLength: 192
      object:
        type: optional<CustomAttributeDefinitionEventDataObject>
        docs: An object containing the custom attribute definition.
    source:
      openapi: openapi/openapi.json
  CustomAttributeDefinitionEventDataObject:
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The custom attribute definition.
    source:
      openapi: openapi/openapi.json
  CustomAttributeDefinitionVisibility:
    enum:
      - VISIBILITY_HIDDEN
      - VISIBILITY_READ_ONLY
      - VISIBILITY_READ_WRITE_VALUES
    docs: >-
      The level of permission that a seller or other applications requires to

      view this custom attribute definition.

      The `Visibility` field controls who can read and write the custom
      attribute values

      and custom attribute definition.
    source:
      openapi: openapi/openapi.json
  CustomAttributeEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: The type of the event data object. The value is `"custom_attribute"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the event data object.
        validation:
          maxLength: 192
      object:
        type: optional<CustomAttributeEventDataObject>
        docs: An object containing the custom attribute.
    source:
      openapi: openapi/openapi.json
  CustomAttributeEventDataObject:
    properties:
      custom_attribute:
        type: optional<CustomAttribute>
        docs: The custom attribute.
    source:
      openapi: openapi/openapi.json
  CustomAttributeFilter:
    docs: |-
      Supported custom attribute query expressions for calling the
      [SearchCatalogItems](api-endpoint:Catalog-SearchCatalogItems)
      endpoint to search for items or item variations.
    properties:
      custom_attribute_definition_id:
        type: optional<nullable<string>>
        docs: >-
          A query expression to filter items or item variations by matching
          their custom attributes'

          `custom_attribute_definition_id` property value against the the
          specified id.

          Exactly one of `custom_attribute_definition_id` or `key` must be
          specified.
      key:
        type: optional<nullable<string>>
        docs: >-
          A query expression to filter items or item variations by matching
          their custom attributes'

          `key` property value against the specified key.

          Exactly one of `custom_attribute_definition_id` or `key` must be
          specified.
      string_filter:
        type: optional<nullable<string>>
        docs: >-
          A query expression to filter items or item variations by matching
          their custom attributes'

          `string_value`  property value against the specified text.

          Exactly one of `string_filter`, `number_filter`,
          `selection_uids_filter`, or `bool_filter` must be specified.
      number_filter:
        type: optional<Range>
        docs: >-
          A query expression to filter items or item variations with their
          custom attributes

          containing a number value within the specified range.

          Exactly one of `string_filter`, `number_filter`,
          `selection_uids_filter`, or `bool_filter` must be specified.
      selection_uids_filter:
        type: optional<nullable<list<string>>>
        docs: >-
          A query expression to filter items or item variations by matching 
          their custom attributes'

          `selection_uid_values` values against the specified selection uids.

          Exactly one of `string_filter`, `number_filter`,
          `selection_uids_filter`, or `bool_filter` must be specified.
      bool_filter:
        type: optional<nullable<boolean>>
        docs: >-
          A query expression to filter items or item variations by matching
          their custom attributes'

          `boolean_value` property values against the specified Boolean
          expression.

          Exactly one of `string_filter`, `number_filter`,
          `selection_uids_filter`, or `bool_filter` must be specified.
    source:
      openapi: openapi/openapi.json
  CustomField:
    docs: >-
      Describes a custom form field to add to the checkout page to collect more
      information from buyers during checkout.

      For more information,

      see [Specify checkout
      options](https://developer.squareup.com/docs/checkout-api/optional-checkout-configurations#specify-checkout-options-1).
    properties:
      title:
        type: string
        docs: The title of the custom field.
        validation:
          minLength: 1
          maxLength: 50
    source:
      openapi: openapi/openapi.json
  Customer:
    docs: >-
      Represents a Square customer profile in the Customer Directory of a Square
      seller.
    properties:
      id:
        type: optional<string>
        docs: >-
          A unique Square-assigned ID for the customer profile.


          If you need this ID for an API request, use the ID returned when you
          created the customer profile or call the
          [SearchCustomers](api-endpoint:Customers-SearchCustomers) 

          or [ListCustomers](api-endpoint:Customers-ListCustomers) endpoint.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp when the customer profile was created, in RFC 3339
          format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp when the customer profile was last updated, in RFC 3339
          format.
        access: read-only
      given_name:
        type: optional<nullable<string>>
        docs: >-
          The given name (that is, the first name) associated with the customer
          profile.
      family_name:
        type: optional<nullable<string>>
        docs: >-
          The family name (that is, the last name) associated with the customer
          profile.
      nickname:
        type: optional<nullable<string>>
        docs: A nickname for the customer profile.
      company_name:
        type: optional<nullable<string>>
        docs: A business name associated with the customer profile.
      email_address:
        type: optional<nullable<string>>
        docs: The email address associated with the customer profile.
      address:
        type: optional<Address>
        docs: The physical address associated with the customer profile.
      phone_number:
        type: optional<nullable<string>>
        docs: The phone number associated with the customer profile.
      birthday:
        type: optional<nullable<string>>
        docs: >-
          The birthday associated with the customer profile, in `YYYY-MM-DD`
          format. For example, `1998-09-21`

          represents September 21, 1998, and `0000-09-21` represents September
          21 (without a birth year).
      reference_id:
        type: optional<nullable<string>>
        docs: |-
          An optional second ID used to associate the customer profile with an
          entity in another system.
      note:
        type: optional<nullable<string>>
        docs: A custom note associated with the customer profile.
      preferences:
        type: optional<CustomerPreferences>
        docs: Represents general customer preferences.
      creation_source:
        type: optional<CustomerCreationSource>
        docs: >-
          The method used to create the customer profile.

          See [CustomerCreationSource](#type-customercreationsource) for
          possible values
      group_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The IDs of [customer groups](entity:CustomerGroup) the customer
          belongs to.
      segment_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The IDs of [customer segments](entity:CustomerSegment) the customer
          belongs to.
      version:
        type: optional<long>
        docs: >-
          The Square-assigned version number of the customer profile. The
          version number is incremented each time an update is committed to the
          customer profile, except for changes to customer segment membership.
      tax_ids:
        type: optional<CustomerTaxIds>
        docs: >-
          The tax ID associated with the customer profile. This field is present
          only for customers of sellers in EU countries or the United Kingdom. 

          For more information, see [Customer tax
          IDs](https://developer.squareup.com/docs/customers-api/what-it-does#customer-tax-ids).
    source:
      openapi: openapi/openapi.json
  CustomerAddressFilter:
    docs: >-
      The customer address filter. This filter is used in a
      [CustomerCustomAttributeFilterValue](entity:CustomerCustomAttributeFilterValue)
      filter when

      searching by an `Address`-type custom attribute.
    properties:
      postal_code:
        type: optional<CustomerTextFilter>
        docs: The postal code to search for. Only an `exact` match is supported.
      country:
        type: optional<Country>
        docs: |-
          The country code to search for.
          See [Country](#type-country) for possible values
    source:
      openapi: openapi/openapi.json
  CustomerCreatedEvent:
    docs: >-
      Published when a [customer](entity:Customer) is created. Subscribe to this
      event to track customer profiles affected by a merge operation.

      For more information, see [Use Customer
      Webhooks](https://developer.squareup.com/docs/customers-api/use-the-api/customer-webhooks).


      The `customer` object in the event notification does not include the
      `segment_ids` field.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event. For this object, the value is `customer.created`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID of the event, which is used for [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomerCreatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  CustomerCreatedEventData:
    docs: The data associated with the event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `customer`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the new customer.
        validation:
          maxLength: 192
      object:
        type: optional<CustomerCreatedEventObject>
        docs: An object that contains the new customer.
    source:
      openapi: openapi/openapi.json
  CustomerCreatedEventEventContext:
    docs: Information about the change that triggered the event.
    properties:
      merge:
        type: optional<CustomerCreatedEventEventContextMerge>
        docs: Information about the merge operation associated with the event.
    source:
      openapi: openapi/openapi.json
  CustomerCreatedEventEventContextMerge:
    docs: >-
      Information about a merge operation, which creates a new customer using
      aggregated properties from two or more existing customers.
    properties:
      from_customer_ids:
        type: optional<nullable<list<string>>>
        docs: The IDs of the existing customers that were merged and then deleted.
      to_customer_id:
        type: optional<nullable<string>>
        docs: The ID of the new customer created by the merge.
    source:
      openapi: openapi/openapi.json
  CustomerCreatedEventObject:
    docs: An object that contains the customer associated with the event.
    properties:
      customer:
        type: optional<Customer>
        docs: The new customer.
      event_context:
        type: optional<CustomerCreatedEventEventContext>
        docs: >-
          Information about the change that triggered the event. This field is
          returned only if the customer is created by a merge operation.
    source:
      openapi: openapi/openapi.json
  CustomerCreationSource:
    enum:
      - OTHER
      - APPOINTMENTS
      - COUPON
      - DELETION_RECOVERY
      - DIRECTORY
      - EGIFTING
      - EMAIL_COLLECTION
      - FEEDBACK
      - IMPORT
      - INVOICES
      - LOYALTY
      - MARKETING
      - MERGE
      - ONLINE_STORE
      - INSTANT_PROFILE
      - TERMINAL
      - THIRD_PARTY
      - THIRD_PARTY_IMPORT
      - UNMERGE_RECOVERY
    docs: Indicates the method used to create the customer profile.
    source:
      openapi: openapi/openapi.json
  CustomerCreationSourceFilter:
    docs: >-
      The creation source filter.


      If one or more creation sources are set, customer profiles are included
      in,

      or excluded from, the result if they match at least one of the filter
      criteria.
    properties:
      values:
        type: optional<nullable<list<CustomerCreationSource>>>
        docs: >-
          The list of creation sources used as filtering criteria.

          See [CustomerCreationSource](#type-customercreationsource) for
          possible values
      rule:
        type: optional<CustomerInclusionExclusion>
        docs: >-
          Indicates whether a customer profile matching the filter criteria

          should be included in the result or excluded from the result.


          Default: `INCLUDE`.

          See [CustomerInclusionExclusion](#type-customerinclusionexclusion) for
          possible values
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDefinitionCreatedEvent:
    docs: >-
      Published when a customer [custom attribute
      definition](entity:CustomAttributeDefinition) 

      is created by the subscribing application.


      This event is replaced by 

      [customer.custom_attribute_definition.owned.created](webhook:customer.custom_attribute_definition.owned.created).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute_definition.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDefinitionCreatedPublicEvent:
    docs: >-
      Published when a customer [custom attribute
      definition](entity:CustomAttributeDefinition)

      that is visible to all applications is created. A notification is sent
      when any application creates a custom

      attribute definition whose `visibility` is `VISIBILITY_READ_ONLY` or
      `VISIBILITY_READ_WRITE_VALUES`.


      This event is replaced by 

      [customer.custom_attribute_definition.visible.created](webhook:customer.custom_attribute_definition.visible.created),

      which applies to custom attribute definitions that are visible to the
      subscribing application.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute_definition.public.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDefinitionDeletedEvent:
    docs: >-
      Published when a customer [custom attribute
      definition](entity:CustomAttributeDefinition)

      created by the subscribing application is deleted. A custom attribute
      definition can only be deleted by

      the application that created it.


      This event is replaced by 

      [customer.custom_attribute_definition.owned.deleted](webhook:customer.custom_attribute_definition.owned.deleted).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute_definition.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDefinitionDeletedPublicEvent:
    docs: >-
      Published when a customer [custom attribute
      definition](entity:CustomAttributeDefinition)

      that is visible to all applications is deleted. A notification is sent
      when any application deletes a custom

      attribute definition whose `visibility` is `VISIBILITY_READ_ONLY` or
      `VISIBILITY_READ_WRITE_VALUES`.


      This event is replaced by 

      [customer.custom_attribute_definition.visible.deleted](webhook:customer.custom_attribute_definition.visible.deleted),

      which applies to custom attribute definitions that are visible to the
      subscribing application.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute_definition.public.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDefinitionOwnedCreatedEvent:
    docs: >-
      Published when a customer [custom attribute
      definition](entity:CustomAttributeDefinition) 

      is created by the subscribing application.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute_definition.owned.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDefinitionOwnedDeletedEvent:
    docs: >-
      Published when a customer [custom attribute
      definition](entity:CustomAttributeDefinition)

      created by the subscribing application is deleted. A custom attribute
      definition can only be deleted by

      the application that created it.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute_definition.owned.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDefinitionOwnedUpdatedEvent:
    docs: >-
      Published when a customer [custom attribute
      definition](entity:CustomAttributeDefinition)

      created by the subscribing application is updated. A custom attribute
      definition can only be updated by

      the application that created it.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute_definition.owned.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDefinitionUpdatedEvent:
    docs: >-
      Published when a customer [custom attribute
      definition](entity:CustomAttributeDefinition)

      created by the subscribing application is updated. A custom attribute
      definition can only be updated by

      the application that created it.


      This event is replaced by 

      [customer.custom_attribute_definition.owned.updated](webhook:customer.custom_attribute_definition.owned.updated).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute_definition.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDefinitionUpdatedPublicEvent:
    docs: >-
      Published when a customer [custom attribute
      definition](entity:CustomAttributeDefinition)

      that is visible to all applications is updated. A notification is sent
      when any application updates a custom

      attribute definition whose `visibility` is `VISIBILITY_READ_ONLY` or
      `VISIBILITY_READ_WRITE_VALUES`.


      This event is replaced by 

      [customer.custom_attribute_definition.visible.updated](webhook:customer.custom_attribute_definition.visible.updated),

      which applies to custom attribute definitions that are visible to the
      subscribing application.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute_definition.public.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDefinitionVisibleCreatedEvent:
    docs: >-
      Published when a customer [custom attribute
      definition](entity:CustomAttributeDefinition)

      that is visible to the subscribing application is created. A notification
      is sent when your application

      creates a custom attribute definition or another application creates a
      custom attribute definition whose

      `visibility` is `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute_definition.visible.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDefinitionVisibleDeletedEvent:
    docs: >-
      Published when a customer [custom attribute
      definition](entity:CustomAttributeDefinition)

      that is visible to the subscribing application is deleted. A custom
      attribute definition can only be deleted

      by the application that created it. A notification is sent when your
      application deletes a custom attribute

      definition or when another application deletes a custom attribute
      definition whose `visibility` is

      `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute_definition.visible.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDefinitionVisibleUpdatedEvent:
    docs: >-
      Published when a customer [custom attribute
      definition](entity:CustomAttributeDefinition)

      that is visible to the subscribing application is updated. A custom
      attribute definition can only be updated

      by the application that created it. A notification is sent when your
      application updates a custom

      attribute definition or when another application updates a custom
      attribute definition whose `visibility` is

      `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute_definition.visible.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDeletedEvent:
    docs: >-
      Published when a customer [custom attribute](entity:CustomAttribute) owned
      by the

      subscribing application is deleted. Custom attributes are owned by the
      application that created the

      corresponding [custom attribute
      definition](entity:CustomAttributeDefinition). Custom attributes whose

      `visibility` is `VISIBILITY_READ_WRITE_VALUES` can be deleted by any
      application.


      This event is replaced by 

      [customer.custom_attribute.owned.deleted](webhook:customer.custom_attribute.owned.deleted).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeDeletedPublicEvent:
    docs: >-
      Published when a customer [custom attribute](entity:CustomAttribute) that
      is visible

      to all applications is deleted. A notification is sent when any
      application deletes a custom attribute

      whose `visibility` is `VISIBILITY_READ_ONLY` or
      `VISIBILITY_READ_WRITE_VALUES`.


      This event is replaced by 

      [customer.custom_attribute.visible.deleted](webhook:customer.custom_attribute.visible.deleted),

      which applies to custom attributes that are visible to the subscribing
      application.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute.public.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeFilter:
    docs: >-
      The custom attribute filter. Use this filter in a set of [custom attribute
      filters](entity:CustomerCustomAttributeFilters) to search

      based on the value or last updated date of a customer-related [custom
      attribute](entity:CustomAttribute).
    properties:
      key:
        type: string
        docs: >-
          The `key` of the [custom attribute](entity:CustomAttribute) to filter
          by. The key is the identifier of the custom attribute

          (and the corresponding custom attribute definition) and can be
          retrieved using the [Customer Custom Attributes
          API](api:CustomerCustomAttributes).
      filter:
        type: optional<CustomerCustomAttributeFilterValue>
        docs: >-
          A filter that corresponds to the data type of the target custom
          attribute. For example, provide the `phone` filter to

          search based on the value of a `PhoneNumber`-type custom attribute.
          The data type is specified by the schema field of the custom attribute
          definition,

          which can be retrieved using the [Customer Custom Attributes
          API](api:CustomerCustomAttributes).


          You must provide this `filter` field, the `updated_at` field, or both.
      updated_at:
        type: optional<TimeRange>
        docs: >-
          The date range for when the custom attribute was last updated. The
          date range can include `start_at`, `end_at`, or

          both. Range boundaries are inclusive. Dates are specified as RFC 3339
          timestamps.


          You must provide this `updated_at` field, the `filter` field, or both.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeFilterValue:
    docs: >-
      A type-specific filter used in a [custom attribute
      filter](entity:CustomerCustomAttributeFilter) to search based on the
      value 

      of a customer-related [custom attribute](entity:CustomAttribute).
    properties:
      email:
        type: optional<CustomerTextFilter>
        docs: >-
          A filter for a query based on the value of an `Email`-type custom
          attribute. This filter is case-insensitive and can

          include `exact` or `fuzzy`, but not both.


          For an `exact` match, provide the complete email address.


          For a `fuzzy` match, provide a query expression containing one or more
          query tokens to match against the email address. Square removes

          any punctuation (including periods (.), underscores (_), and the @
          symbol) and tokenizes the email addresses on spaces. A match is found

          if a tokenized email address contains all the tokens in the search
          query, irrespective of the token order. For example, `Steven gmail`

          matches steven.jones@gmail.com and mygmail@stevensbakery.com.
      phone:
        type: optional<CustomerTextFilter>
        docs: >-
          A filter for a query based on the value of a `PhoneNumber`-type custom
          attribute. This filter is case-insensitive and

          can include `exact` or `fuzzy`, but not both.


          For an `exact` match, provide the complete phone number. This is
          always an E.164-compliant phone number that starts

          with the + sign followed by the country code and subscriber number.
          For example, the format for a US phone number is +12061112222.


          For a `fuzzy` match, provide a query expression containing one or more
          query tokens to match against the phone number.

          Square removes any punctuation and tokenizes the expression on spaces.
          A match is found if a tokenized phone number contains

          all the tokens in the search query, irrespective of the token order.
          For example, `415 123 45` is tokenized to `415`, `123`, and `45`,

          which matches +14151234567 and +12345674158, but does not match
          +1234156780. Similarly, the expression `415` matches

          +14151234567, +12345674158, and +1234156780.
      text:
        type: optional<CustomerTextFilter>
        docs: >-
          A filter for a query based on the value of a `String`-type custom
          attribute. This filter is case-insensitive and 

          can include `exact` or `fuzzy`, but not both.


          For an `exact` match, provide the complete string.


          For a `fuzzy` match, provide a query expression containing one or more
          query tokens in any order that contain complete words

          to match against the string. Square tokenizes the expression using a
          grammar-based tokenizer. For example, the expressions `quick brown`,

          `brown quick`, and `quick fox` match "The quick brown fox jumps over
          the lazy dog". However, `quick foxes` and `qui` do not match.
      selection:
        type: optional<FilterValue>
        docs: >-
          A filter for a query based on the display name for a `Selection`-type
          custom attribute value. This filter is case-sensitive

          and can contain `any`, `all`, or both. The `none` condition is not
          supported.


          Provide the display name of each item that you want to search for. To
          find the display names for the selection, use the 

          [Customer Custom Attributes API](api:CustomerCustomAttributes) to
          retrieve the corresponding custom attribute definition

          and then check the `schema.items.names` field. For more information,
          see

          [Search based on
          selection](https://developer.squareup.com/docs/customers-api/use-the-api/search-customers#custom-attribute-value-filter-selection).


          Note that when a `Selection`-type custom attribute is assigned to a
          customer profile, the custom attribute value is a list of one

          or more UUIDs (sourced from the `schema.items.enum` field) that map to
          the item names. These UUIDs are unique per seller.
      date:
        type: optional<TimeRange>
        docs: >-
          A filter for a query based on the value of a `Date`-type custom
          attribute.


          Provide a date range for this filter using `start_at`, `end_at`, or
          both. Range boundaries are inclusive. Dates can be specified

          in `YYYY-MM-DD` format or as RFC 3339 timestamps.
      number:
        type: optional<FloatNumberRange>
        docs: >-
          A filter for a query based on the value of a `Number`-type custom
          attribute, which can be an integer or a decimal with up to

          5 digits of precision.


          Provide a numerical range for this filter using `start_at`, `end_at`,
          or both. Range boundaries are inclusive. Numbers are specified

          as decimals or integers. The absolute value of range boundaries must
          not exceed `(2^63-1)/10^5`, or 92233720368547.
      boolean:
        type: optional<nullable<boolean>>
        docs: >-
          A filter for a query based on the value of a `Boolean`-type custom
          attribute.
      address:
        type: optional<CustomerAddressFilter>
        docs: >-
          A filter for a query based on the value of an `Address`-type custom
          attribute. The filter can include `postal_code`, `country`, or both.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeFilters:
    docs: >-
      The custom attribute filters in a set of [customer
      filters](entity:CustomerFilter) used in a search query. Use this filter

      to search based on [custom attributes](entity:CustomAttribute) that are
      assigned to customer profiles. For more information, see

      [Search by custom
      attribute](https://developer.squareup.com/docs/customers-api/use-the-api/search-customers#search-by-custom-attribute).
    properties:
      filters:
        type: optional<nullable<list<CustomerCustomAttributeFilter>>>
        docs: >-
          The custom attribute filters. Each filter must specify `key` and
          include the `filter` field with a type-specific filter,

          the `updated_at` field, or both. The provided keys must be unique
          within the list of custom attribute filters.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeOwnedDeletedEvent:
    docs: >-
      Published when a customer [custom attribute](entity:CustomAttribute) owned
      by the

      subscribing application is deleted. Custom attributes are owned by the
      application that created the

      corresponding [custom attribute
      definition](entity:CustomAttributeDefinition). Custom attributes whose

      `visibility` is `VISIBILITY_READ_WRITE_VALUES` can be deleted by any
      application.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute.owned.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeOwnedUpdatedEvent:
    docs: >-
      Published when a customer [custom attribute](entity:CustomAttribute) owned
      by the

      subscribing application is created or updated. Custom attributes are owned
      by the application that created

      the corresponding [custom attribute
      definition](entity:CustomAttributeDefinition). Custom attributes whose

      `visibility` is `VISIBILITY_READ_WRITE_VALUES` can be created or updated
      by any application.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute.owned.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeUpdatedEvent:
    docs: >-
      Published when a customer [custom attribute](entity:CustomAttribute) owned
      by the

      subscribing application is created or updated. Custom attributes are owned
      by the application that created

      the corresponding [custom attribute
      definition](entity:CustomAttributeDefinition). Custom attributes whose

      `visibility` is `VISIBILITY_READ_WRITE_VALUES` can be created or updated
      by any application.


      This event is replaced by 

      [customer.custom_attribute.owned.updated](webhook:customer.custom_attribute.owned.updated).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeUpdatedPublicEvent:
    docs: >-
      Published when a customer [custom attribute](entity:CustomAttribute) that
      is visible

      to all applications is created or updated. A notification is sent when any
      application creates or updates

      a custom attribute whose `visibility` is `VISIBILITY_READ_ONLY` or
      `VISIBILITY_READ_WRITE_VALUES`.


      This event is replaced by 

      [customer.custom_attribute.visible.updated](webhook:customer.custom_attribute.visible.updated),

      which applies to custom attributes that are visible to the subscribing
      application.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute.public.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeVisibleDeletedEvent:
    docs: >-
      Published when a customer [custom attribute](entity:CustomAttribute) that
      is visible to the

      subscribing application is deleted. A notification is sent when:

      - Your application deletes a custom attribute owned by your application,
      regardless of the `visibility` setting.

      - Any application deletes a custom attribute whose `visibility` is
      `VISIBILITY_READ_ONLY`

      or `VISIBILITY_READ_WRITE_VALUES`.


      Custom attributes set to `VISIBILITY_READ_WRITE_VALUES` can be deleted by
      any application, but those set to

      `VISIBILITY_READ_ONLY` or `VISIBILITY_HIDDEN` can only be deleted by the
      owner. Custom attributes are owned

      by the application that created the corresponding [custom attribute
      definition](entity:CustomAttributeDefinition).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute.visible.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerCustomAttributeVisibleUpdatedEvent:
    docs: >-
      Published when a customer [custom attribute](entity:CustomAttribute) that
      is visible to the

      subscribing application is created or updated. A notification is sent
      when:

      - Your application creates or updates a custom attribute owned by your
      application, regardless of the `visibility` setting.

      - Any application creates or updates a custom attribute whose `visibility`
      is `VISIBILITY_READ_ONLY`

      or `VISIBILITY_READ_WRITE_VALUES`.


      Custom attributes set to `VISIBILITY_READ_WRITE_VALUES` can be created or
      updated by any application, but those set to

      `VISIBILITY_READ_ONLY` or `VISIBILITY_HIDDEN` can only be created or
      updated by the owner. Custom attributes are owned

      by the application that created the corresponding [custom attribute
      definition](entity:CustomAttributeDefinition).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"customer.custom_attribute.visible.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  CustomerDeletedEvent:
    docs: >-
      Published when a [customer](entity:Customer) is deleted.  For more
      information, see [Use Customer
      Webhooks](https://developer.squareup.com/docs/customers-api/use-the-api/customer-webhooks).


      The `customer` object in the event notification does not include the
      following fields: `group_ids` and `segment_ids`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event. For this object, the value is `customer.deleted`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID of the event, which is used for [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomerDeletedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  CustomerDeletedEventData:
    docs: The data associated with the event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `customer`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the deleted customer.
        validation:
          maxLength: 192
      object:
        type: optional<CustomerDeletedEventObject>
        docs: An object that contains the deleted customer.
    source:
      openapi: openapi/openapi.json
  CustomerDeletedEventEventContext:
    docs: Information about the change that triggered the event.
    properties:
      merge:
        type: optional<CustomerDeletedEventEventContextMerge>
        docs: Information about the merge operation associated with the event.
    source:
      openapi: openapi/openapi.json
  CustomerDeletedEventEventContextMerge:
    docs: >-
      Information about a merge operation, which creates a new customer using
      aggregated properties from two or more existing customers.
    properties:
      from_customer_ids:
        type: optional<nullable<list<string>>>
        docs: The IDs of the existing customers that were merged and then deleted.
      to_customer_id:
        type: optional<nullable<string>>
        docs: The ID of the new customer created by the merge.
    source:
      openapi: openapi/openapi.json
  CustomerDeletedEventObject:
    docs: An object that contains the customer associated with the event.
    properties:
      customer:
        type: optional<Customer>
        docs: The deleted customer.
      event_context:
        type: optional<CustomerDeletedEventEventContext>
        docs: >-
          Information about the change that triggered the event. This field is
          returned only if the customer is deleted by a merge operation.
    source:
      openapi: openapi/openapi.json
  CustomerDetails:
    docs: Details about the customer making the payment.
    properties:
      customer_initiated:
        type: optional<nullable<boolean>>
        docs: Indicates whether the customer initiated the payment.
      seller_keyed_in:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates that the seller keyed in payment details on behalf of the
          customer.

          This is used to flag a payment as Mail Order / Telephone Order (MOTO).
    source:
      openapi: openapi/openapi.json
  CustomerFilter:
    docs: >-
      Represents the filtering criteria in a [search
      query](entity:CustomerQuery) that defines how to filter

      customer profiles returned in
      [SearchCustomers](api-endpoint:Customers-SearchCustomers) results.
    properties:
      creation_source:
        type: optional<CustomerCreationSourceFilter>
        docs: A filter to select customers based on their creation source.
      created_at:
        type: optional<TimeRange>
        docs: A filter to select customers based on when they were created.
      updated_at:
        type: optional<TimeRange>
        docs: A filter to select customers based on when they were last updated.
      email_address:
        type: optional<CustomerTextFilter>
        docs: >-
          A filter to [select customers by their email
          address](https://developer.squareup.com/docs/customers-api/use-the-api/search-customers#search-by-email-address) 

          visible to the seller. 

          This filter is case-insensitive.


          For [exact
          matching](https://developer.squareup.com/docs/customers-api/use-the-api/search-customers#exact-search-by-email-address),
          this

          filter causes the search to return customer profiles 

          whose `email_address` field value are identical to the email address
          provided

          in the query.


          For [fuzzy
          matching](https://developer.squareup.com/docs/customers-api/use-the-api/search-customers#fuzzy-search-by-email-address), 

          this filter causes the search to return customer profiles 

          whose `email_address` field value has a token-wise partial match
          against the filtering 

          expression in the query. For example, with `Steven gmail` provided in
          a search

          query, the search returns customers whose email address is
          `steven.johnson@gmail.com` 

          or `mygmail@stevensbakery.com`. Square removes any punctuation
          (including periods (.),

          underscores (_), and the @ symbol) and tokenizes the email addresses
          on spaces. A match is

          found if a tokenized email address contains all the tokens in the
          search query, 

          irrespective of the token order.
      phone_number:
        type: optional<CustomerTextFilter>
        docs: >-
          A filter to [select customers by their phone
          numbers](https://developer.squareup.com/docs/customers-api/use-the-api/search-customers#search-by-phone-number)

          visible to the seller.


          For [exact
          matching](https://developer.squareup.com/docs/customers-api/use-the-api/search-customers#exact-search-by-phone-number),

          this filter returns customers whose phone number matches the specified
          query expression. The number in the query must be of an

          E.164-compliant form. In particular, it must include the leading `+`
          sign followed by a country code and then a subscriber number.

          For example, the standard E.164 form of a US phone number is
          `+12062223333` and an E.164-compliant variation is `+1 (206)
          222-3333`.

          To match the query expression, stored customer phone numbers are
          converted to the standard E.164 form.


          For [fuzzy
          matching](https://developer.squareup.com/docs/customers-api/use-the-api/search-customers#fuzzy-search-by-phone-number),

          this filter returns customers whose phone number matches the token or
          tokens provided in the query expression. For example, with `415`

          provided in a search query, the search returns customers with the
          phone numbers `+1-415-212-1200`, `+1-212-415-1234`, and `+1 (551)
          234-1567`.

          Similarly, a search query of `415 123` returns customers with the
          phone numbers `+1-212-415-1234` and `+1 (551) 234-1567` but not

          `+1-212-415-1200`. A match is found if a tokenized phone number
          contains all the tokens in the search query, irrespective of the token
          order.
      reference_id:
        type: optional<CustomerTextFilter>
        docs: >-
          A filter to [select customers by their reference
          IDs](https://developer.squareup.com/docs/customers-api/use-the-api/search-customers#search-by-reference-id).

          This filter is case-insensitive.


          [Exact
          matching](https://developer.squareup.com/docs/customers-api/use-the-api/search-customers#exact-search-by-reference-id) 

          of a customer's reference ID against a query's reference ID is
          evaluated as an

          exact match between two strings, character by character in the given
          order.


          [Fuzzy
          matching](https://developer.squareup.com/docs/customers-api/use-the-api/search-customers#fuzzy-search-by-reference-id) 

          of stored reference IDs against queried reference IDs works 

          exactly the same as fuzzy matching on email addresses.
          Non-alphanumeric characters 

          are replaced by spaces to tokenize stored and queried reference IDs. A
          match is found

          if a tokenized stored reference ID contains all tokens specified in
          any order in the query. For example,

          a query of `NYC M` matches customer profiles with the `reference_id`
          value of `NYC_M_35_JOHNSON`

          and `NYC_27_MURRAY`.
      group_ids:
        type: optional<FilterValue>
        docs: >-
          A filter to select customers based on the
          [groups](entity:CustomerGroup) they belong to.

          Group membership is controlled by sellers and developers.


          The `group_ids` filter has the following syntax:

          ```

          "group_ids": {

          "any":  ["{group_a_id}", "{group_b_id}", ...],

          "all":  ["{group_1_id}", "{group_2_id}", ...],

          "none": ["{group_i_id}", "{group_ii_id}", ...]

          }

          ```


          You can use any combination of the `any`, `all`, and `none` fields in
          the filter.

          With `any`, the search returns customers in groups `a` or `b` or any
          other group specified in the list.

          With `all`, the search returns customers in groups `1` and `2` and all
          other groups specified in the list.

          With `none`, the search returns customers not in groups `i` or `ii` or
          any other group specified in the list.


          If any of the search conditions are not met, including when an invalid
          or non-existent group ID is provided,

          the result is an empty object (`{}`).
      custom_attribute:
        type: optional<CustomerCustomAttributeFilters>
        docs: >-
          A filter to select customers based on one or more custom attributes.  

          This filter can contain up to 10 custom attribute filters. Each custom
          attribute filter specifies filtering criteria for a target custom

          attribute. If multiple custom attribute filters are provided, they are
          combined as an `AND` operation.


          To be valid for a search, the custom attributes must be visible to the
          requesting application. For more information, including example
          queries,

          see [Search by custom
          attribute](https://developer.squareup.com/docs/customers-api/use-the-api/search-customers#search-by-custom-attribute).


          Square returns matching customer profiles, which do not contain custom
          attributes. To retrieve customer-related custom attributes,

          use the [Customer Custom Attributes
          API](api:CustomerCustomAttributes). For example, you can call

          [RetrieveCustomerCustomAttribute](api-endpoint:CustomerCustomAttributes-RetrieveCustomerCustomAttribute)
          using a customer ID from the result set.
      segment_ids:
        type: optional<FilterValue>
        docs: >2-
           A filter to select customers based on the [segments](entity:CustomerSegment) they belong to.
          Segment membership is dynamic and adjusts automatically based on
          whether customers meet the segment criteria.


          You can provide up to three segment IDs in the filter, using any
          combination of the `all`, `any`, and `none` fields.

          For the following example, the results include customers who belong to
          both segment A and segment B but do not belong to segment C.


          ```

          "segment_ids": {

          "all":  ["{segment_A_id}", "{segment_B_id}"],

          "none":  ["{segment_C_id}"]

          }

          ```


          If an invalid or non-existent segment ID is provided in the filter,
          Square stops processing the request

          and returns a `400 BAD_REQUEST` error that includes the segment ID.
    source:
      openapi: openapi/openapi.json
  CustomerGroup:
    docs: >-
      Represents a group of customer profiles. 


      Customer groups can be created, be modified, and have their membership
      defined using 

      the Customers API or within the Customer Directory in the Square Seller
      Dashboard or Point of Sale.
    properties:
      id:
        type: optional<string>
        docs: A unique Square-generated ID for the customer group.
        validation:
          maxLength: 255
        access: read-only
      name:
        type: string
        docs: The name of the customer group.
      created_at:
        type: optional<string>
        docs: The timestamp when the customer group was created, in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp when the customer group was last updated, in RFC 3339
          format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  CustomerInclusionExclusion:
    enum:
      - INCLUDE
      - EXCLUDE
    docs: |-
      Indicates whether customers should be included in, or excluded from,
      the result set when they match the filtering criteria.
    source:
      openapi: openapi/openapi.json
  CustomerPreferences:
    docs: Represents communication preferences for the customer profile.
    properties:
      email_unsubscribed:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether the customer has unsubscribed from marketing
          campaign emails. A value of `true` means that the customer chose to
          opt out of email marketing from the current Square seller or from all
          Square sellers. This value is read-only from the Customers API.
    source:
      openapi: openapi/openapi.json
  CustomerQuery:
    docs: >-
      Represents filtering and sorting criteria for a
      [SearchCustomers](api-endpoint:Customers-SearchCustomers) request.
    properties:
      filter:
        type: optional<CustomerFilter>
        docs: >-
          The filtering criteria for the search query. A query can contain
          multiple filters in any combination.

          Multiple filters are combined as `AND` statements.


          __Note:__ Combining multiple filters as `OR` statements is not
          supported. Instead, send multiple single-filter

          searches and join the result sets.
      sort:
        type: optional<CustomerSort>
        docs: |-
          Sorting criteria for query results. The default behavior is to sort 
          customers alphabetically by `given_name` and `family_name`.
    source:
      openapi: openapi/openapi.json
  CustomerSegment:
    docs: >-
      Represents a group of customer profiles that match one or more predefined
      filter criteria. 


      Segments (also known as Smart Groups) are defined and created within the
      Customer Directory in the

      Square Seller Dashboard or Point of Sale.
    properties:
      id:
        type: optional<string>
        docs: A unique Square-generated ID for the segment.
        validation:
          maxLength: 255
        access: read-only
      name:
        type: optional<string>
        docs: The name of the segment.
        access: read-only
      created_at:
        type: optional<string>
        docs: The timestamp when the segment was created, in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: The timestamp when the segment was last updated, in RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  CustomerSort:
    docs: >-
      Represents the sorting criteria in a [search query](entity:CustomerQuery)
      that defines how to sort

      customer profiles returned in
      [SearchCustomers](api-endpoint:Customers-SearchCustomers) results.
    properties:
      field:
        type: optional<CustomerSortField>
        docs: >-
          Indicates the fields to use as the sort key, which is either the
          default set of fields or `created_at`.


          The default value is `DEFAULT`.

          See [CustomerSortField](#type-customersortfield) for possible values
      order:
        type: optional<SortOrder>
        docs: >-
          Indicates the order in which results should be sorted based on the

          sort field value. Strings use standard alphabetic comparison

          to determine order. Strings representing numbers are sorted as
          strings.


          The default value is `ASC`.

          See [SortOrder](#type-sortorder) for possible values
    source:
      openapi: openapi/openapi.json
  CustomerSortField:
    enum:
      - DEFAULT
      - CREATED_AT
    docs: >-
      Specifies customer attributes as the sort key to customer profiles
      returned from a search.
    source:
      openapi: openapi/openapi.json
  CustomerTaxIds:
    docs: >-
      Represents the tax ID associated with a [customer
      profile](entity:Customer). The corresponding `tax_ids` field is available
      only for customers of sellers in EU countries or the United Kingdom. 

      For more information, see [Customer tax
      IDs](https://developer.squareup.com/docs/customers-api/what-it-does#customer-tax-ids).
    properties:
      eu_vat:
        type: optional<nullable<string>>
        docs: >-
          The EU VAT identification number for the customer. For example,
          `IE3426675K`. The ID can contain alphanumeric characters only.
        validation:
          maxLength: 20
    source:
      openapi: openapi/openapi.json
  CustomerTextFilter:
    docs: >-
      A filter to select customers based on exact or fuzzy matching of

      customer attributes against a specified query. Depending on the customer
      attributes, 

      the filter can be case-sensitive. This filter can be exact or fuzzy, but
      it cannot be both.
    properties:
      exact:
        type: optional<nullable<string>>
        docs: >-
          Use the exact filter to select customers whose attributes match
          exactly the specified query.
      fuzzy:
        type: optional<nullable<string>>
        docs: >-
          Use the fuzzy filter to select customers whose attributes match the
          specified query 

          in a fuzzy manner. When the fuzzy option is used, search queries are
          tokenized, and then 

          each query token must be matched somewhere in the searched attribute.
          For single token queries, 

          this is effectively the same behavior as a partial match operation.
    source:
      openapi: openapi/openapi.json
  CustomerUpdatedEvent:
    docs: >-
      Published when a [customer](entity:Customer) is updated. For more
      information, see [Use Customer
      Webhooks](https://developer.squareup.com/docs/customers-api/use-the-api/customer-webhooks).


      Updates to the 'segment_ids' customer field does not invoke a
      `customer.updated` event. In addition, the `customer` object in the event
      notification does not include this field.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event. For this object, the value is `customer.updated`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID of the event, which is used for [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomerUpdatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  CustomerUpdatedEventData:
    docs: The data associated with the event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `customer`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the updated customer.
        validation:
          maxLength: 192
      object:
        type: optional<CustomerUpdatedEventObject>
        docs: An object that contains the updated customer.
    source:
      openapi: openapi/openapi.json
  CustomerUpdatedEventObject:
    docs: An object that contains the customer associated with the event.
    properties:
      customer:
        type: optional<Customer>
        docs: The updated customer.
    source:
      openapi: openapi/openapi.json
  DataCollectionOptions:
    properties:
      title:
        type: string
        docs: The title text to display in the data collection flow on the Terminal.
        validation:
          minLength: 1
          maxLength: 250
      body:
        type: string
        docs: >-
          The body text to display under the title in the data collection screen
          flow on the

          Terminal.
        validation:
          minLength: 1
          maxLength: 10000
      input_type:
        type: DataCollectionOptionsInputType
        docs: |-
          Represents the type of the input text.
          See [InputType](#type-inputtype) for possible values
      collected_data:
        type: optional<CollectedData>
        docs: The buyer’s input text from the data collection screen.
    source:
      openapi: openapi/openapi.json
  DataCollectionOptionsInputType:
    enum:
      - EMAIL
      - PHONE_NUMBER
    docs: Describes the input type of the data.
    source:
      openapi: openapi/openapi.json
  DateRange:
    docs: |-
      A range defined by two dates. Used for filtering a query for Connect v2
      objects that have date properties.
    properties:
      start_date:
        type: optional<nullable<string>>
        docs: >-
          A string in `YYYY-MM-DD` format, such as `2017-10-31`, per the ISO
          8601

          extended format for calendar dates.

          The beginning of a date range (inclusive).
      end_date:
        type: optional<nullable<string>>
        docs: >-
          A string in `YYYY-MM-DD` format, such as `2017-10-31`, per the ISO
          8601

          extended format for calendar dates.

          The end of a date range (inclusive).
    source:
      openapi: openapi/openapi.json
  DayOfWeek:
    enum:
      - SUN
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
    docs: Indicates the specific day  of the week.
    source:
      openapi: openapi/openapi.json
  DeleteBookingCustomAttributeDefinitionResponse:
    docs: >-
      Represents a
      [DeleteBookingCustomAttributeDefinition](api-endpoint:BookingCustomAttributes-DeleteBookingCustomAttributeDefinition)
      response

      containing error messages when errors occurred during the request. The
      successful response does not contain any payload.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteBookingCustomAttributeResponse:
    docs: >-
      Represents a
      [DeleteBookingCustomAttribute](api-endpoint:BookingCustomAttributes-DeleteBookingCustomAttribute)
      response.

      Either an empty object `{}` (for a successful deletion) or `errors` is
      present in the response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteBreakTypeResponse:
    docs: >-
      The response to a request to delete a `BreakType`. The response might
      contain a set 

      of `Error` objects if the request resulted in errors.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteCatalogObjectResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      deleted_object_ids:
        type: optional<list<string>>
        docs: >-
          The IDs of all catalog objects deleted by this request.

          Multiple IDs may be returned when associated objects are also deleted,
          for example

          a catalog item variation will be deleted (and its ID included in this
          field)

          when its parent catalog item is deleted.
      deleted_at:
        type: optional<string>
        docs: >-
          The database
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          of this deletion in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`.
    source:
      openapi: openapi/openapi.json
  DeleteCustomerCardResponse:
    docs: |-
      Defines the fields that are included in the response body of
      a request to the `DeleteCustomerCard` endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteCustomerCustomAttributeDefinitionResponse:
    docs: >-
      Represents a response from a delete request containing error messages if
      there are any.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteCustomerCustomAttributeResponse:
    docs: >-
      Represents a
      [DeleteCustomerCustomAttribute](api-endpoint:CustomerCustomAttributes-DeleteCustomerCustomAttribute)
      response.

      Either an empty object `{}` (for a successful deletion) or `errors` is
      present in the response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteCustomerGroupResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [DeleteCustomerGroup](api-endpoint:CustomerGroups-DeleteCustomerGroup)
      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteCustomerResponse:
    docs: |-
      Defines the fields that are included in the response body of
      a request to the `DeleteCustomer` endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteDisputeEvidenceResponse:
    docs: Defines the fields in a `DeleteDisputeEvidence` response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  DeleteInvoiceAttachmentResponse:
    docs: >-
      Represents a
      [DeleteInvoiceAttachment](api-endpoint:Invoices-DeleteInvoiceAttachment)
      response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  DeleteInvoiceResponse:
    docs: Describes a `DeleteInvoice` response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  DeleteLocationCustomAttributeDefinitionResponse:
    docs: >-
      Represents a response from a delete request containing error messages if
      there are any.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteLocationCustomAttributeResponse:
    docs: >-
      Represents a
      [DeleteLocationCustomAttribute](api-endpoint:LocationCustomAttributes-DeleteLocationCustomAttribute)
      response.

      Either an empty object `{}` (for a successful deletion) or `errors` is
      present in the response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteLoyaltyRewardResponse:
    docs: A response returned by the API call.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteMerchantCustomAttributeDefinitionResponse:
    docs: >-
      Represents a response from a delete request containing error messages if
      there are any.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteMerchantCustomAttributeResponse:
    docs: >-
      Represents a
      [DeleteMerchantCustomAttribute](api-endpoint:MerchantCustomAttributes-DeleteMerchantCustomAttribute)
      response.

      Either an empty object `{}` (for a successful deletion) or `errors` is
      present in the response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteOrderCustomAttributeDefinitionResponse:
    docs: Represents a response from deleting an order custom attribute definition.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteOrderCustomAttributeResponse:
    docs: Represents a response from deleting an order custom attribute.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeletePaymentLinkResponse:
    properties:
      errors: optional<list<Error>>
      id:
        type: optional<string>
        docs: The ID of the link that is deleted.
      cancelled_order_id:
        type: optional<string>
        docs: >-
          The ID of the order that is canceled. When a payment link is deleted,
          Square updates the

          the `state` (of the order that the checkout link created) to CANCELED.
    source:
      openapi: openapi/openapi.json
  DeleteShiftResponse:
    docs: >-
      The response to a request to delete a `Shift`. The response might contain
      a set of 

      `Error` objects if the request resulted in errors.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteSnippetResponse:
    docs: Represents a `DeleteSnippet` response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteSubscriptionActionResponse:
    docs: >-
      Defines output parameters in a response of the
      [DeleteSubscriptionAction](api-endpoint:Subscriptions-DeleteSubscriptionAction)

      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered during the request.
      subscription:
        type: optional<Subscription>
        docs: The subscription that has the specified action deleted.
    source:
      openapi: openapi/openapi.json
  DeleteTimecardResponse:
    docs: >-
      The response to a request to delete a `Timecard`. The response might
      contain a set of 

      `Error` objects if the request resulted in errors.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  DeleteWebhookSubscriptionResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [DeleteWebhookSubscription](api-endpoint:WebhookSubscriptions-DeleteWebhookSubscription)
      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  Destination:
    docs: Information about the destination against which the payout was made.
    properties:
      type:
        type: optional<DestinationType>
        docs: |-
          Type of the destination such as a bank account or debit card.
          See [DestinationType](#type-destinationtype) for possible values
      id:
        type: optional<string>
        docs: >-
          Square issued unique ID (also known as the instrument ID) associated
          with this destination.
    source:
      openapi: openapi/openapi.json
  DestinationDetails:
    docs: Details about a refund's destination.
    properties:
      card_details:
        type: optional<DestinationDetailsCardRefundDetails>
        docs: >-
          Details about a card refund. Only populated if the destination_type is
          `CARD`.
      cash_details:
        type: optional<DestinationDetailsCashRefundDetails>
        docs: >-
          Details about a cash refund. Only populated if the destination_type is
          `CASH`.
      external_details:
        type: optional<DestinationDetailsExternalRefundDetails>
        docs: >-
          Details about an external refund. Only populated if the
          destination_type is `EXTERNAL`.
    source:
      openapi: openapi/openapi.json
  DestinationDetailsCardRefundDetails:
    properties:
      card:
        type: optional<Card>
        docs: The card's non-confidential details.
      entry_method:
        type: optional<nullable<string>>
        docs: >-
          The method used to enter the card's details for the refund. The method
          can be

          `KEYED`, `SWIPED`, `EMV`, `ON_FILE`, or `CONTACTLESS`.
        validation:
          maxLength: 50
      auth_result_code:
        type: optional<nullable<string>>
        docs: >-
          The authorization code provided by the issuer when a refund is
          approved.
        validation:
          maxLength: 10
    source:
      openapi: openapi/openapi.json
  DestinationDetailsCashRefundDetails:
    docs: >-
      Stores details about a cash refund. Contains only non-confidential
      information.
    properties:
      seller_supplied_money:
        type: Money
        docs: The amount and currency of the money supplied by the seller.
      change_back_money:
        type: optional<Money>
        docs: |-
          The amount of change due back to the seller.
          This read-only field is calculated
          from the `amount_money` and `seller_supplied_money` fields.
    source:
      openapi: openapi/openapi.json
  DestinationDetailsExternalRefundDetails:
    docs: >-
      Stores details about an external refund. Contains only non-confidential
      information.
    properties:
      type:
        type: string
        docs: >-
          The type of external refund the seller paid to the buyer. It can be
          one of the

          following:

          - CHECK - Refunded using a physical check.

          - BANK_TRANSFER - Refunded using external bank transfer.

          - OTHER\_GIFT\_CARD - Refunded using a non-Square gift card.

          - CRYPTO - Refunded using a crypto currency.

          - SQUARE_CASH - Refunded using Square Cash App.

          - SOCIAL - Refunded using peer-to-peer payment applications.

          - EXTERNAL - A third-party application gathered this refund outside of
          Square.

          - EMONEY - Refunded using an E-money provider.

          - CARD - A credit or debit card that Square does not support.

          - STORED_BALANCE - Use for house accounts, store credit, and so forth.

          - FOOD_VOUCHER - Restaurant voucher provided by employers to employees
          to pay for meals

          - OTHER - A type not listed here.
        validation:
          maxLength: 50
      source:
        type: string
        docs: |-
          A description of the external refund source. For example,
          "Food Delivery Service".
        validation:
          maxLength: 255
      source_id:
        type: optional<nullable<string>>
        docs: An ID to associate the refund to its originating source.
        validation:
          maxLength: 255
    source:
      openapi: openapi/openapi.json
  DestinationType:
    enum:
      - BANK_ACCOUNT
      - CARD
      - SQUARE_BALANCE
      - SQUARE_STORED_BALANCE
    docs: List of possible destinations against which a payout can be made.
    source:
      openapi: openapi/openapi.json
  Device:
    properties:
      id:
        type: optional<string>
        docs: >-
          A synthetic identifier for the device. The identifier includes a
          standardized prefix and

          is otherwise an opaque id generated from key device fields.
        access: read-only
      attributes:
        type: DeviceAttributes
        docs: A collection of DeviceAttributes representing the device.
      components:
        type: optional<nullable<list<Component>>>
        docs: A list of components applicable to the device.
      status:
        type: optional<DeviceStatus>
        docs: The current status of the device.
    source:
      openapi: openapi/openapi.json
  DeviceAttributes:
    properties:
      type:
        type: DeviceAttributesDeviceType
        docs: |-
          The device type.
          See [DeviceType](#type-devicetype) for possible values
      manufacturer:
        type: string
        docs: The maker of the device.
      model:
        type: optional<nullable<string>>
        docs: The specific model of the device.
      name:
        type: optional<nullable<string>>
        docs: A seller-specified name for the device.
      manufacturers_id:
        type: optional<nullable<string>>
        docs: >-
          The manufacturer-supplied identifier for the device (where available).
          In many cases,

          this identifier will be a serial number.
      updated_at:
        type: optional<string>
        docs: >-
          The RFC 3339-formatted value of the most recent update to the device
          information.

          (Could represent any field update on the device.)
      version:
        type: optional<string>
        docs: The current version of software installed on the device.
      merchant_token:
        type: optional<nullable<string>>
        docs: The merchant_token identifying the merchant controlling the device.
    source:
      openapi: openapi/openapi.json
  DeviceAttributesDeviceType:
    type: literal<"TERMINAL">
    docs: An enum identifier of the device type.
  DeviceCheckoutOptions:
    properties:
      device_id:
        type: string
        docs: >-
          The unique ID of the device intended for this `TerminalCheckout`.

          A list of `DeviceCode` objects can be retrieved from the
          /v2/devices/codes endpoint.

          Match a `DeviceCode.device_id` value with `device_id` to get the
          associated device code.
      skip_receipt_screen:
        type: optional<nullable<boolean>>
        docs: Instructs the device to skip the receipt screen. Defaults to false.
      collect_signature:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates that signature collection is desired during checkout.
          Defaults to false.
      tip_settings:
        type: optional<TipSettings>
        docs: Tip-specific settings.
      show_itemized_cart:
        type: optional<nullable<boolean>>
        docs: >-
          Show the itemization screen prior to taking a payment. This field is
          only meaningful when the

          checkout includes an order ID. Defaults to true.
    source:
      openapi: openapi/openapi.json
  DeviceCode:
    properties:
      id:
        type: optional<string>
        docs: The unique id for this device code.
        access: read-only
      name:
        type: optional<nullable<string>>
        docs: An optional user-defined name for the device code.
        validation:
          maxLength: 128
      code:
        type: optional<string>
        docs: The unique code that can be used to login.
        access: read-only
      device_id:
        type: optional<string>
        docs: >-
          The unique id of the device that used this code. Populated when the
          device is paired up.
        access: read-only
      product_type:
        type: ProductType
        docs: The targeting product type of the device code.
      location_id:
        type: optional<nullable<string>>
        docs: The location assigned to this code.
        validation:
          maxLength: 50
      status:
        type: optional<DeviceCodeStatus>
        docs: |-
          The pairing status of the device code.
          See [DeviceCodeStatus](#type-devicecodestatus) for possible values
      pair_by:
        type: optional<string>
        docs: >-
          When this DeviceCode will expire and no longer login. Timestamp in RFC
          3339 format.
        access: read-only
      created_at:
        type: optional<string>
        docs: When this DeviceCode was created. Timestamp in RFC 3339 format.
        access: read-only
      status_changed_at:
        type: optional<string>
        docs: >-
          When this DeviceCode's status was last changed. Timestamp in RFC 3339
          format.
        access: read-only
      paired_at:
        type: optional<string>
        docs: When this DeviceCode was paired. Timestamp in RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  DeviceCodePairedEvent:
    docs: |-
      Published when a Square Terminal has been paired with a
      Terminal API client and the device_id of the paired Square Terminal is
      available.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"device.code.paired"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: RFC 3339 timestamp of when the event was created.
        access: read-only
      data:
        type: optional<DeviceCodePairedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  DeviceCodePairedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the paired object’s type, `"device_code"`.
      id:
        type: optional<string>
        docs: ID of the paired device code.
      object:
        type: optional<DeviceCodePairedEventObject>
        docs: An object containing the paired device code.
    source:
      openapi: openapi/openapi.json
  DeviceCodePairedEventObject:
    properties:
      device_code:
        type: optional<DeviceCode>
        docs: The created terminal checkout
    source:
      openapi: openapi/openapi.json
  DeviceCodeStatus:
    enum:
      - UNKNOWN
      - UNPAIRED
      - PAIRED
      - EXPIRED
    docs: DeviceCode.Status enum.
    source:
      openapi: openapi/openapi.json
  DeviceComponentDetailsApplicationDetails:
    properties:
      application_type:
        type: optional<ApplicationType>
        docs: |-
          The type of application.
          See [ApplicationType](#type-applicationtype) for possible values
      version:
        type: optional<string>
        docs: The version of the application.
      session_location:
        type: optional<nullable<string>>
        docs: The location_id of the session for the application.
      device_code_id:
        type: optional<nullable<string>>
        docs: The id of the device code that was used to log in to the device.
    source:
      openapi: openapi/openapi.json
  DeviceComponentDetailsBatteryDetails:
    properties:
      visible_percent:
        type: optional<nullable<integer>>
        docs: The battery charge percentage as displayed on the device.
      external_power:
        type: optional<DeviceComponentDetailsExternalPower>
        docs: |-
          The status of external_power.
          See [ExternalPower](#type-externalpower) for possible values
    source:
      openapi: openapi/openapi.json
  DeviceComponentDetailsCardReaderDetails:
    properties:
      version:
        type: optional<string>
        docs: The version of the card reader.
    source:
      openapi: openapi/openapi.json
  DeviceComponentDetailsEthernetDetails:
    properties:
      active:
        type: optional<nullable<boolean>>
        docs: >-
          A boolean to represent whether the Ethernet interface is currently
          active.
      ip_address_v4:
        type: optional<nullable<string>>
        docs: The string representation of the device’s IPv4 address.
    source:
      openapi: openapi/openapi.json
  DeviceComponentDetailsExternalPower:
    enum:
      - AVAILABLE_CHARGING
      - AVAILABLE_NOT_IN_USE
      - UNAVAILABLE
      - AVAILABLE_INSUFFICIENT
    docs: An enum for ExternalPower.
    source:
      openapi: openapi/openapi.json
  DeviceComponentDetailsMeasurement:
    docs: A value qualified by unit of measure.
    properties:
      value: optional<nullable<integer>>
    source:
      openapi: openapi/openapi.json
  DeviceComponentDetailsWiFiDetails:
    properties:
      active:
        type: optional<nullable<boolean>>
        docs: A boolean to represent whether the WiFI interface is currently active.
      ssid:
        type: optional<nullable<string>>
        docs: The name of the connected WIFI network.
      ip_address_v4:
        type: optional<nullable<string>>
        docs: The string representation of the device’s IPv4 address.
      secure_connection:
        type: optional<nullable<string>>
        docs: >-
          The security protocol for a secure connection (e.g. WPA2). None
          provided if the connection

          is unsecured.
      signal_strength:
        type: optional<DeviceComponentDetailsMeasurement>
        docs: A representation of signal strength of the WIFI network connection.
    source:
      openapi: openapi/openapi.json
  DeviceCreatedEvent:
    docs: Published when a Device is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The merchant the newly created device belongs to.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents. The value is `"device.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A UUID that uniquely identifies this device creation event.
      created_at:
        type: optional<string>
        docs: >-
          The time when the device creation event was first created, in RFC 3339
          format.
        access: read-only
      data:
        type: optional<DeviceCreatedEventData>
        docs: The metadata associated with the device creation event.
    source:
      openapi: openapi/openapi.json
  DeviceCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: The type of the event data object. The value is `"device"`.
      id:
        type: optional<string>
        docs: The ID of the device.
      object:
        type: optional<DeviceCreatedEventObject>
        docs: An object containing the created device.
    source:
      openapi: openapi/openapi.json
  DeviceCreatedEventObject:
    properties:
      device:
        type: optional<Device>
        docs: The created device.
    source:
      openapi: openapi/openapi.json
  DeviceDetails:
    docs: Details about the device that took the payment.
    properties:
      device_id:
        type: optional<nullable<string>>
        docs: The Square-issued ID of the device.
        validation:
          maxLength: 255
      device_installation_id:
        type: optional<nullable<string>>
        docs: The Square-issued installation ID for the device.
        validation:
          maxLength: 255
      device_name:
        type: optional<nullable<string>>
        docs: The name of the device set by the seller.
        validation:
          maxLength: 255
    source:
      openapi: openapi/openapi.json
  DeviceMetadata:
    properties:
      battery_percentage:
        type: optional<nullable<string>>
        docs: The Terminal’s remaining battery percentage, between 1-100.
      charging_state:
        type: optional<nullable<string>>
        docs: |-
          The current charging state of the Terminal.
          Options: `CHARGING`, `NOT_CHARGING`
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the Square seller business location associated with the
          Terminal.
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the Square merchant account that is currently signed-in to
          the Terminal.
      network_connection_type:
        type: optional<nullable<string>>
        docs: |-
          The Terminal’s current network connection type.
          Options: `WIFI`, `ETHERNET`
      payment_region:
        type: optional<nullable<string>>
        docs: The country in which the Terminal is authorized to take payments.
      serial_number:
        type: optional<nullable<string>>
        docs: >-
          The unique identifier assigned to the Terminal, which can be found on
          the lower back

          of the device.
      os_version:
        type: optional<nullable<string>>
        docs: The current version of the Terminal’s operating system.
      app_version:
        type: optional<nullable<string>>
        docs: The current version of the application running on the Terminal.
      wifi_network_name:
        type: optional<nullable<string>>
        docs: The name of the Wi-Fi network to which the Terminal is connected.
      wifi_network_strength:
        type: optional<nullable<string>>
        docs: |-
          The signal strength of the Wi-FI network connection.
          Options: `POOR`, `FAIR`, `GOOD`, `EXCELLENT`
      ip_address:
        type: optional<nullable<string>>
        docs: The IP address of the Terminal.
    source:
      openapi: openapi/openapi.json
  DeviceStatus:
    properties:
      category:
        type: optional<DeviceStatusCategory>
        docs: |-

          See [Category](#type-category) for possible values
    source:
      openapi: openapi/openapi.json
  DeviceStatusCategory:
    enum:
      - AVAILABLE
      - NEEDS_ATTENTION
      - OFFLINE
    source:
      openapi: openapi/openapi.json
  DigitalWalletDetails:
    docs: >-
      Additional details about `WALLET` type payments. Contains only
      non-confidential information.
    properties:
      status:
        type: optional<nullable<string>>
        docs: >-
          The status of the `WALLET` payment. The status can be `AUTHORIZED`,
          `CAPTURED`, `VOIDED`, or

          `FAILED`.
        validation:
          maxLength: 50
      brand:
        type: optional<nullable<string>>
        docs: >-
          The brand used for the `WALLET` payment. The brand can be `CASH_APP`,
          `PAYPAY`, `ALIPAY`,

          `RAKUTEN_PAY`, `AU_PAY`, `D_BARAI`, `MERPAY`, `WECHAT_PAY` or
          `UNKNOWN`.
        validation:
          maxLength: 50
      cash_app_details:
        type: optional<CashAppDetails>
        docs: Brand-specific details for payments with the `brand` of `CASH_APP`.
    source:
      openapi: openapi/openapi.json
  DisableCardResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the [DisableCard](api-endpoint:Cards-DisableCard) endpoint.


      Note: if there are errors processing the request, the card field will not
      be

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      card:
        type: optional<Card>
        docs: The retrieved card.
    source:
      openapi: openapi/openapi.json
  DisableEventsResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the [DisableEvents](api-endpoint:Events-DisableEvents)
      endpoint.


      Note: if there are errors processing the request, the events field will
      not be

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  DismissTerminalActionResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      action:
        type: optional<TerminalAction>
        docs: Current state of the action to be dismissed.
    source:
      openapi: openapi/openapi.json
  DismissTerminalCheckoutResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      checkout:
        type: optional<TerminalCheckout>
        docs: Current state of the checkout to be dismissed.
    source:
      openapi: openapi/openapi.json
  DismissTerminalRefundResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      refund:
        type: optional<TerminalRefund>
        docs: Current state of the refund to be dismissed.
    source:
      openapi: openapi/openapi.json
  Dispute:
    docs: >-
      Represents a
      [dispute](https://developer.squareup.com/docs/disputes-api/overview) a
      cardholder initiated with their bank.
    properties:
      dispute_id:
        type: optional<nullable<string>>
        docs: The unique ID for this `Dispute`, generated by Square.
        validation:
          minLength: 1
          maxLength: 40
      id:
        type: optional<string>
        docs: The unique ID for this `Dispute`, generated by Square.
        validation:
          minLength: 1
          maxLength: 40
      amount_money:
        type: optional<Money>
        docs: >-
          The disputed amount, which can be less than the total transaction
          amount.

          For instance, if multiple items were purchased but the cardholder only
          initiates a dispute over some of the items.
      reason:
        type: optional<DisputeReason>
        docs: |-
          The reason why the cardholder initiated the dispute.
          See [DisputeReason](#type-disputereason) for possible values
      state:
        type: optional<DisputeState>
        docs: |-
          The current state of this dispute.
          See [DisputeState](#type-disputestate) for possible values
      due_at:
        type: optional<nullable<string>>
        docs: >-
          The deadline by which the seller must respond to the dispute, in [RFC
          3339
          format](https://developer.squareup.com/docs/build-basics/common-data-types/working-with-dates).
        validation:
          minLength: 1
          maxLength: 40
      disputed_payment:
        type: optional<DisputedPayment>
        docs: The payment challenged in this dispute.
      evidence_ids:
        type: optional<nullable<list<string>>>
        docs: The IDs of the evidence associated with the dispute.
      card_brand:
        type: optional<CardBrand>
        docs: |-
          The card brand used in the disputed payment.
          See [CardBrand](#type-cardbrand) for possible values
      created_at:
        type: optional<string>
        docs: The timestamp when the dispute was created, in RFC 3339 format.
        validation:
          minLength: 1
          maxLength: 40
        access: read-only
      updated_at:
        type: optional<string>
        docs: The timestamp when the dispute was last updated, in RFC 3339 format.
        validation:
          minLength: 1
          maxLength: 40
        access: read-only
      brand_dispute_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the dispute in the card brand system, generated by the card
          brand.
        validation:
          minLength: 1
          maxLength: 40
      reported_date:
        type: optional<nullable<string>>
        docs: The timestamp when the dispute was reported, in RFC 3339 format.
        validation:
          minLength: 1
          maxLength: 40
      reported_at:
        type: optional<nullable<string>>
        docs: The timestamp when the dispute was reported, in RFC 3339 format.
        validation:
          minLength: 1
          maxLength: 40
      version:
        type: optional<integer>
        docs: The current version of the `Dispute`.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the location where the dispute originated.
        validation:
          minLength: 1
          maxLength: 40
    source:
      openapi: openapi/openapi.json
  DisputeCreatedEvent:
    docs: Published when a [Dispute](entity:Dispute) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<DisputeCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  DisputeCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected dispute's type.
      id:
        type: optional<string>
        docs: ID of the affected dispute.
      object:
        type: optional<DisputeCreatedEventObject>
        docs: An object containing fields and values relevant to the event.
    source:
      openapi: openapi/openapi.json
  DisputeCreatedEventObject:
    properties:
      object:
        type: optional<Dispute>
        docs: The dispute object.
    source:
      openapi: openapi/openapi.json
  DisputeEvidence:
    properties:
      evidence_id:
        type: optional<nullable<string>>
        docs: The Square-generated ID of the evidence.
        validation:
          minLength: 1
          maxLength: 40
      id:
        type: optional<string>
        docs: The Square-generated ID of the evidence.
        validation:
          minLength: 1
          maxLength: 40
      dispute_id:
        type: optional<nullable<string>>
        docs: The ID of the dispute the evidence is associated with.
        validation:
          minLength: 1
          maxLength: 40
      evidence_file:
        type: optional<DisputeEvidenceFile>
        docs: Image, PDF, TXT
      evidence_text:
        type: optional<nullable<string>>
        docs: Raw text
        validation:
          minLength: 1
          maxLength: 500
      uploaded_at:
        type: optional<nullable<string>>
        docs: The time when the evidence was uploaded, in RFC 3339 format.
        validation:
          minLength: 1
          maxLength: 40
      evidence_type:
        type: optional<DisputeEvidenceType>
        docs: >-
          The type of the evidence.

          See [DisputeEvidenceType](#type-disputeevidencetype) for possible
          values
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceAddedEvent:
    docs: >-
      Published when evidence is added to a [Dispute](entity:Dispute)

      from the Disputes Dashboard in the Seller Dashboard, the Square Point of
      Sale app,

      or by calling either
      [CreateDisputeEvidenceFile](api-endpoint:Disputes-CreateDisputeEvidenceFile)
      or
      [CreateDisputeEvidenceText](api-endpoint:Disputes-CreateDisputeEvidenceText).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<DisputeEvidenceAddedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceAddedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected dispute's type.
      id:
        type: optional<string>
        docs: ID of the affected dispute.
      object:
        type: optional<DisputeEvidenceAddedEventObject>
        docs: An object containing fields and values relevant to the event.
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceAddedEventObject:
    properties:
      object:
        type: optional<Dispute>
        docs: The dispute object.
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceCreatedEvent:
    docs: >-
      Published when evidence is added to a [Dispute](entity:Dispute)

      from the Disputes Dashboard in the Seller Dashboard, the Square Point of
      Sale app,

      or by calling either
      [CreateDisputeEvidenceFile](api-endpoint:Disputes-CreateDisputeEvidenceFile)
      or
      [CreateDisputeEvidenceText](api-endpoint:Disputes-CreateDisputeEvidenceText).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<DisputeEvidenceCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected dispute's type.
      id:
        type: optional<string>
        docs: ID of the affected dispute.
      object:
        type: optional<DisputeEvidenceCreatedEventObject>
        docs: An object containing fields and values relevant to the event.
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceCreatedEventObject:
    properties:
      object:
        type: optional<Dispute>
        docs: The dispute object.
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceDeletedEvent:
    docs: >-
      Published when evidence is removed from a [Dispute](entity:Dispute)

      from the Disputes Dashboard in the Seller Dashboard, the Square Point of
      Sale app,

      or by calling
      [DeleteDisputeEvidence](api-endpoint:Disputes-DeleteDisputeEvidence).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<DisputeEvidenceDeletedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceDeletedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected dispute's type.
      id:
        type: optional<string>
        docs: ID of the affected dispute.
      object:
        type: optional<DisputeEvidenceDeletedEventObject>
        docs: An object containing fields and values relevant to the event.
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceDeletedEventObject:
    properties:
      object:
        type: optional<Dispute>
        docs: The dispute object.
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceFile:
    docs: A file to be uploaded as dispute evidence.
    properties:
      filename:
        type: optional<nullable<string>>
        docs: >-
          The file name including the file extension. For example:
          "receipt.tiff".
        validation:
          minLength: 1
          maxLength: 40
      filetype:
        type: optional<nullable<string>>
        docs: >-
          Dispute evidence files must be application/pdf, image/heic,
          image/heif, image/jpeg, image/png, or image/tiff formats.
        validation:
          minLength: 1
          maxLength: 40
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceRemovedEvent:
    docs: >-
      Published when evidence is removed from a [Dispute](entity:Dispute)

      from the Disputes Dashboard in the Seller Dashboard, the Square Point of
      Sale app,

      or by calling
      [DeleteDisputeEvidence](api-endpoint:Disputes-DeleteDisputeEvidence).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<DisputeEvidenceRemovedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceRemovedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected dispute's type.
      id:
        type: optional<string>
        docs: ID of the affected dispute.
      object:
        type: optional<DisputeEvidenceRemovedEventObject>
        docs: An object containing fields and values relevant to the event.
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceRemovedEventObject:
    properties:
      object:
        type: optional<Dispute>
        docs: The dispute object.
    source:
      openapi: openapi/openapi.json
  DisputeEvidenceType:
    enum:
      - GENERIC_EVIDENCE
      - ONLINE_OR_APP_ACCESS_LOG
      - AUTHORIZATION_DOCUMENTATION
      - CANCELLATION_OR_REFUND_DOCUMENTATION
      - CARDHOLDER_COMMUNICATION
      - CARDHOLDER_INFORMATION
      - PURCHASE_ACKNOWLEDGEMENT
      - DUPLICATE_CHARGE_DOCUMENTATION
      - PRODUCT_OR_SERVICE_DESCRIPTION
      - RECEIPT
      - SERVICE_RECEIVED_DOCUMENTATION
      - PROOF_OF_DELIVERY_DOCUMENTATION
      - RELATED_TRANSACTION_DOCUMENTATION
      - REBUTTAL_EXPLANATION
      - TRACKING_NUMBER
    docs: The type of the dispute evidence.
    source:
      openapi: openapi/openapi.json
  DisputeReason:
    enum:
      - AMOUNT_DIFFERS
      - CANCELLED
      - DUPLICATE
      - NO_KNOWLEDGE
      - NOT_AS_DESCRIBED
      - NOT_RECEIVED
      - PAID_BY_OTHER_MEANS
      - CUSTOMER_REQUESTS_CREDIT
      - EMV_LIABILITY_SHIFT
    docs: |-
      The list of possible reasons why a cardholder might initiate a
      dispute with their bank.
    source:
      openapi: openapi/openapi.json
  DisputeState:
    enum:
      - INQUIRY_EVIDENCE_REQUIRED
      - INQUIRY_PROCESSING
      - INQUIRY_CLOSED
      - EVIDENCE_REQUIRED
      - PROCESSING
      - WON
      - LOST
      - ACCEPTED
    docs: The list of possible dispute states.
    source:
      openapi: openapi/openapi.json
  DisputeStateChangedEvent:
    docs: >-
      Published when the state of a [Dispute](entity:Dispute) changes.

      This includes the dispute resolution (WON, LOST) reported by the bank. The
      event

      data includes details of what changed.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<DisputeStateChangedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  DisputeStateChangedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected dispute's type.
      id:
        type: optional<string>
        docs: ID of the affected dispute.
      object:
        type: optional<DisputeStateChangedEventObject>
        docs: An object containing fields and values relevant to the event.
    source:
      openapi: openapi/openapi.json
  DisputeStateChangedEventObject:
    properties:
      object:
        type: optional<Dispute>
        docs: The dispute object.
    source:
      openapi: openapi/openapi.json
  DisputeStateUpdatedEvent:
    docs: >-
      Published when the state of a [Dispute](entity:Dispute) changes.

      This includes the dispute resolution (WON, LOST) reported by the bank. The
      event

      data includes details of what changed.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<DisputeStateUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  DisputeStateUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected dispute's type.
      id:
        type: optional<string>
        docs: ID of the affected dispute.
      object:
        type: optional<DisputeStateUpdatedEventObject>
        docs: An object containing fields and values relevant to the event.
    source:
      openapi: openapi/openapi.json
  DisputeStateUpdatedEventObject:
    properties:
      object:
        type: optional<Dispute>
        docs: The dispute object.
    source:
      openapi: openapi/openapi.json
  DisputedPayment:
    docs: The payment the cardholder disputed.
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: Square-generated unique ID of the payment being disputed.
        validation:
          minLength: 1
          maxLength: 192
    source:
      openapi: openapi/openapi.json
  EcomVisibility:
    enum:
      - UNINDEXED
      - UNAVAILABLE
      - HIDDEN
      - VISIBLE
    docs: Determines item visibility in Ecom (Online Store) and Online Checkout.
    source:
      openapi: openapi/openapi.json
  Employee:
    docs: >-
      An employee object that is used by the external API.


      DEPRECATED at version 2020-08-26. Replaced by
      [TeamMember](entity:TeamMember).
    properties:
      id:
        type: optional<string>
        docs: UUID for this object.
      first_name:
        type: optional<nullable<string>>
        docs: The employee's first name.
      last_name:
        type: optional<nullable<string>>
        docs: The employee's last name.
      email:
        type: optional<nullable<string>>
        docs: The employee's email address
      phone_number:
        type: optional<nullable<string>>
        docs: The employee's phone number in E.164 format, i.e. "+12125554250"
      location_ids:
        type: optional<nullable<list<string>>>
        docs: A list of location IDs where this employee has access to.
      status:
        type: optional<EmployeeStatus>
        docs: |-
          Specifies the status of the employees being fetched.
          See [EmployeeStatus](#type-employeestatus) for possible values
      is_owner:
        type: optional<nullable<boolean>>
        docs: |-
          Whether this employee is the owner of the merchant. Each merchant
          has one owner employee, and that employee has full authority over
          the account.
      created_at:
        type: optional<string>
        docs: A read-only timestamp in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: A read-only timestamp in RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  EmployeeStatus:
    enum:
      - ACTIVE
      - INACTIVE
    docs: >-
      The status of the Employee being retrieved.


      DEPRECATED at version 2020-08-26. Replaced by
      [TeamMemberStatus](entity:TeamMemberStatus).
    source:
      openapi: openapi/openapi.json
  EmployeeWage:
    docs: >-
      The hourly wage rate that an employee earns on a `Shift` for doing the job
      specified by the `title` property of this object. Deprecated at version
      2020-08-26. Use [TeamMemberWage](entity:TeamMemberWage).
    properties:
      id:
        type: optional<string>
        docs: The UUID for this object.
      employee_id:
        type: optional<nullable<string>>
        docs: The `Employee` that this wage is assigned to.
      title:
        type: optional<nullable<string>>
        docs: The job title that this wage relates to.
      hourly_rate:
        type: optional<Money>
        docs: |-
          Can be a custom-set hourly wage or the calculated effective hourly
          wage based on the annual wage and hours worked per week.
    source:
      openapi: openapi/openapi.json
  EnableEventsResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the [EnableEvents](api-endpoint:Events-EnableEvents)
      endpoint.


      Note: if there are errors processing the request, the events field will
      not be

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  Error:
    docs: >-
      Represents an error encountered during a request to the Connect API.


      See [Handling
      errors](https://developer.squareup.com/docs/build-basics/handling-errors)
      for more information.
    properties:
      category:
        type: ErrorCategory
        docs: |-
          The high-level category for the error.
          See [ErrorCategory](#type-errorcategory) for possible values
      code:
        type: ErrorCode
        docs: |-
          The specific code of the error.
          See [ErrorCode](#type-errorcode) for possible values
      detail:
        type: optional<string>
        docs: A human-readable description of the error for debugging purposes.
      field:
        type: optional<string>
        docs: |-
          The name of the field provided in the original request (if any) that
          the error pertains to.
    source:
      openapi: openapi/openapi.json
  ErrorCategory:
    enum:
      - API_ERROR
      - AUTHENTICATION_ERROR
      - INVALID_REQUEST_ERROR
      - RATE_LIMIT_ERROR
      - PAYMENT_METHOD_ERROR
      - REFUND_ERROR
      - MERCHANT_SUBSCRIPTION_ERROR
      - EXTERNAL_VENDOR_ERROR
    docs: |-
      Indicates which high-level category of error has occurred during a
      request to the Connect API.
    source:
      openapi: openapi/openapi.json
  ErrorCode:
    enum:
      - INTERNAL_SERVER_ERROR
      - UNAUTHORIZED
      - ACCESS_TOKEN_EXPIRED
      - ACCESS_TOKEN_REVOKED
      - CLIENT_DISABLED
      - FORBIDDEN
      - INSUFFICIENT_SCOPES
      - APPLICATION_DISABLED
      - V1_APPLICATION
      - V1_ACCESS_TOKEN
      - CARD_PROCESSING_NOT_ENABLED
      - MERCHANT_SUBSCRIPTION_NOT_FOUND
      - BAD_REQUEST
      - MISSING_REQUIRED_PARAMETER
      - INCORRECT_TYPE
      - INVALID_TIME
      - INVALID_TIME_RANGE
      - INVALID_VALUE
      - INVALID_CURSOR
      - UNKNOWN_QUERY_PARAMETER
      - CONFLICTING_PARAMETERS
      - EXPECTED_JSON_BODY
      - INVALID_SORT_ORDER
      - VALUE_REGEX_MISMATCH
      - VALUE_TOO_SHORT
      - VALUE_TOO_LONG
      - VALUE_TOO_LOW
      - VALUE_TOO_HIGH
      - VALUE_EMPTY
      - ARRAY_LENGTH_TOO_LONG
      - ARRAY_LENGTH_TOO_SHORT
      - ARRAY_EMPTY
      - EXPECTED_BOOLEAN
      - EXPECTED_INTEGER
      - EXPECTED_FLOAT
      - EXPECTED_STRING
      - EXPECTED_OBJECT
      - EXPECTED_ARRAY
      - EXPECTED_MAP
      - EXPECTED_BASE64_ENCODED_BYTE_ARRAY
      - INVALID_ARRAY_VALUE
      - INVALID_ENUM_VALUE
      - INVALID_CONTENT_TYPE
      - INVALID_FORM_VALUE
      - CUSTOMER_NOT_FOUND
      - ONE_INSTRUMENT_EXPECTED
      - NO_FIELDS_SET
      - TOO_MANY_MAP_ENTRIES
      - MAP_KEY_LENGTH_TOO_SHORT
      - MAP_KEY_LENGTH_TOO_LONG
      - CUSTOMER_MISSING_NAME
      - CUSTOMER_MISSING_EMAIL
      - INVALID_PAUSE_LENGTH
      - INVALID_DATE
      - UNSUPPORTED_COUNTRY
      - UNSUPPORTED_CURRENCY
      - APPLE_TTP_PIN_TOKEN
      - CARD_EXPIRED
      - INVALID_EXPIRATION
      - INVALID_EXPIRATION_YEAR
      - INVALID_EXPIRATION_DATE
      - UNSUPPORTED_CARD_BRAND
      - UNSUPPORTED_ENTRY_METHOD
      - INVALID_ENCRYPTED_CARD
      - INVALID_CARD
      - PAYMENT_AMOUNT_MISMATCH
      - GENERIC_DECLINE
      - CVV_FAILURE
      - ADDRESS_VERIFICATION_FAILURE
      - INVALID_ACCOUNT
      - CURRENCY_MISMATCH
      - INSUFFICIENT_FUNDS
      - INSUFFICIENT_PERMISSIONS
      - CARDHOLDER_INSUFFICIENT_PERMISSIONS
      - INVALID_LOCATION
      - TRANSACTION_LIMIT
      - VOICE_FAILURE
      - PAN_FAILURE
      - EXPIRATION_FAILURE
      - CARD_NOT_SUPPORTED
      - READER_DECLINED
      - INVALID_PIN
      - MISSING_PIN
      - MISSING_ACCOUNT_TYPE
      - INVALID_POSTAL_CODE
      - INVALID_FEES
      - MANUALLY_ENTERED_PAYMENT_NOT_SUPPORTED
      - PAYMENT_LIMIT_EXCEEDED
      - GIFT_CARD_AVAILABLE_AMOUNT
      - ACCOUNT_UNUSABLE
      - BUYER_REFUSED_PAYMENT
      - DELAYED_TRANSACTION_EXPIRED
      - DELAYED_TRANSACTION_CANCELED
      - DELAYED_TRANSACTION_CAPTURED
      - DELAYED_TRANSACTION_FAILED
      - CARD_TOKEN_EXPIRED
      - CARD_TOKEN_USED
      - AMOUNT_TOO_HIGH
      - UNSUPPORTED_INSTRUMENT_TYPE
      - REFUND_AMOUNT_INVALID
      - REFUND_ALREADY_PENDING
      - PAYMENT_NOT_REFUNDABLE
      - PAYMENT_NOT_REFUNDABLE_DUE_TO_DISPUTE
      - REFUND_ERROR_PAYMENT_NEEDS_COMPLETION
      - REFUND_DECLINED
      - INSUFFICIENT_PERMISSIONS_FOR_REFUND
      - INVALID_CARD_DATA
      - SOURCE_USED
      - SOURCE_EXPIRED
      - UNSUPPORTED_LOYALTY_REWARD_TIER
      - LOCATION_MISMATCH
      - ORDER_UNPAID_NOT_RETURNABLE
      - IDEMPOTENCY_KEY_REUSED
      - UNEXPECTED_VALUE
      - SANDBOX_NOT_SUPPORTED
      - INVALID_EMAIL_ADDRESS
      - INVALID_PHONE_NUMBER
      - CHECKOUT_EXPIRED
      - BAD_CERTIFICATE
      - INVALID_SQUARE_VERSION_FORMAT
      - API_VERSION_INCOMPATIBLE
      - CARD_PRESENCE_REQUIRED
      - UNSUPPORTED_SOURCE_TYPE
      - CARD_MISMATCH
      - PLAID_ERROR
      - PLAID_ERROR_ITEM_LOGIN_REQUIRED
      - PLAID_ERROR_RATE_LIMIT
      - CARD_DECLINED
      - VERIFY_CVV_FAILURE
      - VERIFY_AVS_FAILURE
      - CARD_DECLINED_CALL_ISSUER
      - CARD_DECLINED_VERIFICATION_REQUIRED
      - BAD_EXPIRATION
      - CHIP_INSERTION_REQUIRED
      - ALLOWABLE_PIN_TRIES_EXCEEDED
      - RESERVATION_DECLINED
      - UNKNOWN_BODY_PARAMETER
      - NOT_FOUND
      - APPLE_PAYMENT_PROCESSING_CERTIFICATE_HASH_NOT_FOUND
      - METHOD_NOT_ALLOWED
      - NOT_ACCEPTABLE
      - REQUEST_TIMEOUT
      - CONFLICT
      - GONE
      - REQUEST_ENTITY_TOO_LARGE
      - UNSUPPORTED_MEDIA_TYPE
      - UNPROCESSABLE_ENTITY
      - RATE_LIMITED
      - NOT_IMPLEMENTED
      - BAD_GATEWAY
      - SERVICE_UNAVAILABLE
      - TEMPORARY_ERROR
      - GATEWAY_TIMEOUT
    docs: |-
      Indicates the specific error that occurred during a request to a
      Square API.
    source:
      openapi: openapi/openapi.json
  Event:
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<EventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  EventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: The name of the affected object’s type.
      id:
        type: optional<string>
        docs: The ID of the affected object.
      deleted:
        type: optional<nullable<boolean>>
        docs: >-
          This is true if the affected object has been deleted; otherwise, it's
          absent.
      object:
        type: optional<nullable<map<string, unknown>>>
        docs: >-
          An object containing fields and values relevant to the event. It is
          absent if the affected object has been deleted.
    source:
      openapi: openapi/openapi.json
  EventMetadata:
    docs: Contains metadata about a particular [Event](entity:Event).
    properties:
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      api_version:
        type: optional<nullable<string>>
        docs: >-
          The API version of the event. This corresponds to the default API
          version of the developer application at the time when the event was
          created.
    source:
      openapi: openapi/openapi.json
  EventTypeMetadata:
    docs: Contains the metadata of a webhook event type.
    properties:
      event_type:
        type: optional<string>
        docs: The event type.
        access: read-only
      api_version_introduced:
        type: optional<string>
        docs: The API version at which the event type was introduced.
        access: read-only
      release_status:
        type: optional<string>
        docs: The release status of the event type.
        access: read-only
    source:
      openapi: openapi/openapi.json
  ExcludeStrategy:
    enum:
      - LEAST_EXPENSIVE
      - MOST_EXPENSIVE
    docs: |-
      Indicates which products matched by a CatalogPricingRule
      will be excluded if the pricing rule uses an exclude set.
    source:
      openapi: openapi/openapi.json
  ExternalPaymentDetails:
    docs: >-
      Stores details about an external payment. Contains only non-confidential
      information.

      For more information, see 

      [Take External
      Payments](https://developer.squareup.com/docs/payments-api/take-payments/external-payments).
    properties:
      type:
        type: string
        docs: >-
          The type of external payment the seller received. It can be one of the
          following:

          - CHECK - Paid using a physical check.

          - BANK_TRANSFER - Paid using external bank transfer.

          - OTHER\_GIFT\_CARD - Paid using a non-Square gift card.

          - CRYPTO - Paid using a crypto currency.

          - SQUARE_CASH - Paid using Square Cash App.

          - SOCIAL - Paid using peer-to-peer payment applications.

          - EXTERNAL - A third-party application gathered this payment outside
          of Square.

          - EMONEY - Paid using an E-money provider.

          - CARD - A credit or debit card that Square does not support.

          - STORED_BALANCE - Use for house accounts, store credit, and so forth.

          - FOOD_VOUCHER - Restaurant voucher provided by employers to employees
          to pay for meals

          - OTHER - A type not listed here.
        validation:
          maxLength: 50
      source:
        type: string
        docs: |-
          A description of the external payment source. For example, 
          "Food Delivery Service".
        validation:
          maxLength: 255
      source_id:
        type: optional<nullable<string>>
        docs: An ID to associate the payment to its originating source.
        validation:
          maxLength: 255
      source_fee_money:
        type: optional<Money>
        docs: |-
          The fees paid to the source. The `amount_money` minus this field is 
          the net amount seller receives.
    source:
      openapi: openapi/openapi.json
  FilterValue:
    docs: >-
      A filter to select resources based on an exact field value. For any given

      value, the value can only be in one property. Depending on the field,
      either

      all properties can be set or only a subset will be available.


      Refer to the documentation of the field.
    properties:
      all:
        type: optional<nullable<list<string>>>
        docs: A list of terms that must be present on the field of the resource.
      any:
        type: optional<nullable<list<string>>>
        docs: |-
          A list of terms where at least one of them must be present on the
          field of the resource.
      none:
        type: optional<nullable<list<string>>>
        docs: A list of terms that must not be present on the field the resource
    source:
      openapi: openapi/openapi.json
  FloatNumberRange:
    docs: Specifies a decimal number range.
    properties:
      start_at:
        type: optional<nullable<string>>
        docs: A decimal value indicating where the range starts.
      end_at:
        type: optional<nullable<string>>
        docs: A decimal value indicating where the range ends.
    source:
      openapi: openapi/openapi.json
  Fulfillment:
    docs: >-
      Contains details about how to fulfill this order.

      Orders can only be created with at most one fulfillment using the API.

      However, orders returned by the Orders API might contain multiple
      fulfillments because sellers can create multiple fulfillments using Square
      products such as Square Online.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID that identifies the fulfillment only within this order.
        validation:
          maxLength: 60
      type:
        type: optional<FulfillmentType>
        docs: |-
          The type of the fulfillment.
          See [FulfillmentType](#type-fulfillmenttype) for possible values
      state:
        type: optional<FulfillmentState>
        docs: |-
          The state of the fulfillment.
          See [FulfillmentState](#type-fulfillmentstate) for possible values
      line_item_application:
        type: optional<FulfillmentFulfillmentLineItemApplication>
        docs: >-
          Describes what order line items this fulfillment applies to.

          It can be `ALL` or `ENTRY_LIST` with a supplied list of fulfillment
          entries.

          See
          [FulfillmentFulfillmentLineItemApplication](#type-fulfillmentfulfillmentlineitemapplication)
          for possible values
      entries:
        type: optional<list<FulfillmentFulfillmentEntry>>
        docs: >-
          A list of entries pertaining to the fulfillment of an order. Each
          entry must reference

          a valid `uid` for an order line item in the `line_item_uid` field, as
          well as a `quantity` to

          fulfill.


          Multiple entries can reference the same line item `uid`, as long as
          the total quantity among

          all fulfillment entries referencing a single line item does not exceed
          the quantity of the

          order's line item itself.


          An order cannot be marked as `COMPLETED` before all fulfillments are
          `COMPLETED`,

          `CANCELED`, or `FAILED`. Fulfillments can be created and completed
          independently

          before order completion.
        access: read-only
      metadata:
        type: optional<nullable<map<string, optional<nullable<string>>>>>
        docs: >-
          Application-defined data attached to this fulfillment. Metadata fields
          are intended

          to store descriptive references or associations with an entity in
          another system or store brief

          information about the object. Square does not process this field; it
          only stores and returns it

          in relevant API calls. Do not use metadata to store any sensitive
          information (such as personally

          identifiable information or card details).


          Keys written by applications must be 60 characters or less and must be
          in the character set

          `[a-zA-Z0-9_-]`. Entries can also include metadata generated by
          Square. These keys are prefixed

          with a namespace, separated from the key with a ':' character.


          Values have a maximum length of 255 characters.


          An application can have up to 10 entries per metadata field.


          Entries written by applications are private and can only be read or
          modified by the same

          application.


          For more information, see
          [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
      pickup_details:
        type: optional<FulfillmentPickupDetails>
        docs: >-
          Contains details for a pickup fulfillment. These details are required
          when the fulfillment

          type is `PICKUP`.
      shipment_details:
        type: optional<FulfillmentShipmentDetails>
        docs: >-
          Contains details for a shipment fulfillment. These details are
          required when the fulfillment type

          is `SHIPMENT`.


          A shipment fulfillment's relationship to fulfillment `state`:

          `PROPOSED`: A shipment is requested.

          `RESERVED`: Fulfillment in progress. Shipment processing.

          `PREPARED`: Shipment packaged. Shipping label created.

          `COMPLETED`: Package has been shipped.

          `CANCELED`: Shipment has been canceled.

          `FAILED`: Shipment has failed.
      delivery_details:
        type: optional<FulfillmentDeliveryDetails>
        docs: Describes delivery details of an order fulfillment.
    source:
      openapi: openapi/openapi.json
  FulfillmentDeliveryDetails:
    docs: Describes delivery details of an order fulfillment.
    properties:
      recipient:
        type: optional<FulfillmentRecipient>
        docs: The contact information for the person to receive the fulfillment.
      schedule_type:
        type: >-
          optional<FulfillmentDeliveryDetailsOrderFulfillmentDeliveryDetailsScheduleType>
        docs: >-
          Indicates the fulfillment delivery schedule type. If `SCHEDULED`, then

          `deliver_at` is required. If `ASAP`, then `prep_time_duration` is
          required. The default is `SCHEDULED`.

          See
          [OrderFulfillmentDeliveryDetailsScheduleType](#type-orderfulfillmentdeliverydetailsscheduletype)
          for possible values
      placed_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the fulfillment was placed.

          The timestamp must be in RFC 3339 format (for example,
          "2016-09-04T23:59:33.123Z").


          Must be in RFC 3339 timestamp format, e.g.,
          "2016-09-04T23:59:33.123Z".
        access: read-only
      deliver_at:
        type: optional<nullable<string>>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          that represents the start of the delivery period.

          When the fulfillment `schedule_type` is `ASAP`, the field is
          automatically

          set to the current time plus the `prep_time_duration`.

          Otherwise, the application can set this field while the fulfillment
          `state` is

          `PROPOSED`, `RESERVED`, or `PREPARED` (any time before the

          terminal state such as `COMPLETED`, `CANCELED`, and `FAILED`).


          The timestamp must be in RFC 3339 format

          (for example, "2016-09-04T23:59:33.123Z").
      prep_time_duration:
        type: optional<nullable<string>>
        docs: |-
          The duration of time it takes to prepare and deliver this fulfillment.
          The duration must be in RFC 3339 format (for example, "P1W3D").
      delivery_window_duration:
        type: optional<nullable<string>>
        docs: >-
          The time period after `deliver_at` in which to deliver the order.

          Applications can set this field when the fulfillment `state` is

          `PROPOSED`, `RESERVED`, or `PREPARED` (any time before the terminal
          state

          such as `COMPLETED`, `CANCELED`, and `FAILED`).


          The duration must be in RFC 3339 format (for example, "P1W3D").
      note:
        type: optional<nullable<string>>
        docs: >-
          Provides additional instructions about the delivery fulfillment.

          It is displayed in the Square Point of Sale application and set by the
          API.
        validation:
          maxLength: 550
      completed_at:
        type: optional<nullable<string>>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicates when the seller completed the fulfillment.

          This field is automatically set when  fulfillment `state` changes to
          `COMPLETED`.

          The timestamp must be in RFC 3339 format (for example,
          "2016-09-04T23:59:33.123Z").
      in_progress_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicates when the seller started processing the fulfillment.

          This field is automatically set when the fulfillment `state` changes
          to `RESERVED`.

          The timestamp must be in RFC 3339 format (for example,
          "2016-09-04T23:59:33.123Z").
        access: read-only
      rejected_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the fulfillment was rejected. This field is

          automatically set when the fulfillment `state` changes to `FAILED`.

          The timestamp must be in RFC 3339 format (for example,
          "2016-09-04T23:59:33.123Z").
        access: read-only
      ready_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the seller marked the fulfillment as ready for

          courier pickup. This field is automatically set when the fulfillment
          `state` changes

          to PREPARED.

          The timestamp must be in RFC 3339 format (for example,
          "2016-09-04T23:59:33.123Z").
        access: read-only
      delivered_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the fulfillment was delivered to the recipient.

          The timestamp must be in RFC 3339 format (for example,
          "2016-09-04T23:59:33.123Z").
        access: read-only
      canceled_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the fulfillment was canceled. This field is
          automatically

          set when the fulfillment `state` changes to `CANCELED`.


          The timestamp must be in RFC 3339 format (for example,
          "2016-09-04T23:59:33.123Z").
        access: read-only
      cancel_reason:
        type: optional<nullable<string>>
        docs: 'The delivery cancellation reason. Max length: 100 characters.'
        validation:
          maxLength: 100
      courier_pickup_at:
        type: optional<nullable<string>>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when an order can be picked up by the courier for delivery.

          The timestamp must be in RFC 3339 format (for example,
          "2016-09-04T23:59:33.123Z").
      courier_pickup_window_duration:
        type: optional<nullable<string>>
        docs: >-
          The time period after `courier_pickup_at` in which the courier should
          pick up the order.

          The duration must be in RFC 3339 format (for example, "P1W3D").
      is_no_contact_delivery:
        type: optional<nullable<boolean>>
        docs: Whether the delivery is preferred to be no contact.
      dropoff_notes:
        type: optional<nullable<string>>
        docs: >-
          A note to provide additional instructions about how to deliver the
          order.
        validation:
          maxLength: 550
      courier_provider_name:
        type: optional<nullable<string>>
        docs: The name of the courier provider.
        validation:
          maxLength: 255
      courier_support_phone_number:
        type: optional<nullable<string>>
        docs: The support phone number of the courier.
        validation:
          maxLength: 17
      square_delivery_id:
        type: optional<nullable<string>>
        docs: The identifier for the delivery created by Square.
        validation:
          maxLength: 50
      external_delivery_id:
        type: optional<nullable<string>>
        docs: >-
          The identifier for the delivery created by the third-party courier
          service.
        validation:
          maxLength: 50
      managed_delivery:
        type: optional<nullable<boolean>>
        docs: >-
          The flag to indicate the delivery is managed by a third party (ie
          DoorDash), which means

          we may not receive all recipient information for PII purposes.
    source:
      openapi: openapi/openapi.json
  FulfillmentDeliveryDetailsOrderFulfillmentDeliveryDetailsScheduleType:
    enum:
      - SCHEDULED
      - ASAP
    docs: The schedule type of the delivery fulfillment.
    source:
      openapi: openapi/openapi.json
  FulfillmentFulfillmentEntry:
    docs: >-
      Links an order line item to a fulfillment. Each entry must reference

      a valid `uid` for an order line item in the `line_item_uid` field, as well
      as a `quantity` to

      fulfill.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: >-
          A unique ID that identifies the fulfillment entry only within this
          order.
        validation:
          maxLength: 60
      line_item_uid:
        type: string
        docs: The `uid` from the order line item.
        validation:
          minLength: 1
      quantity:
        type: string
        docs: >-
          The quantity of the line item being fulfilled, formatted as a decimal
          number.

          For example, `"3"`.


          Fulfillments for line items with a `quantity_unit` can have
          non-integer quantities.

          For example, `"1.70000"`.
        validation:
          minLength: 1
          maxLength: 12
      metadata:
        type: optional<nullable<map<string, optional<nullable<string>>>>>
        docs: >-
          Application-defined data attached to this fulfillment entry. Metadata
          fields are intended

          to store descriptive references or associations with an entity in
          another system or store brief

          information about the object. Square does not process this field; it
          only stores and returns it

          in relevant API calls. Do not use metadata to store any sensitive
          information (such as personally

          identifiable information or card details).


          Keys written by applications must be 60 characters or less and must be
          in the character set

          `[a-zA-Z0-9_-]`. Entries can also include metadata generated by
          Square. These keys are prefixed

          with a namespace, separated from the key with a ':' character.


          Values have a maximum length of 255 characters.


          An application can have up to 10 entries per metadata field.


          Entries written by applications are private and can only be read or
          modified by the same

          application.


          For more information, see
          [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
    source:
      openapi: openapi/openapi.json
  FulfillmentFulfillmentLineItemApplication:
    enum:
      - ALL
      - ENTRY_LIST
    docs: >-
      The `line_item_application` describes what order line items this
      fulfillment applies

      to. It can be `ALL` or `ENTRY_LIST` with a supplied list of fulfillment
      entries.
    source:
      openapi: openapi/openapi.json
  FulfillmentPickupDetails:
    docs: Contains details necessary to fulfill a pickup order.
    properties:
      recipient:
        type: optional<FulfillmentRecipient>
        docs: >-
          Information about the person to pick up this fulfillment from a
          physical

          location.
      expires_at:
        type: optional<nullable<string>>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when this fulfillment expires if it is not marked in
          progress. The timestamp must be

          in RFC 3339 format (for example, "2016-09-04T23:59:33.123Z"). The
          expiration time can only be set

          up to 7 days in the future. If `expires_at` is not set, any new
          payments attached to the order

          are automatically completed.
      auto_complete_duration:
        type: optional<nullable<string>>
        docs: >-
          The duration of time after which an in progress pickup fulfillment is
          automatically moved

          to the `COMPLETED` state. The duration must be in RFC 3339 format (for
          example, "P1W3D").


          If not set, this pickup fulfillment remains in progress until it is
          canceled or completed.
      schedule_type:
        type: optional<FulfillmentPickupDetailsScheduleType>
        docs: >-
          The schedule type of the pickup fulfillment. Defaults to `SCHEDULED`.

          See
          [FulfillmentPickupDetailsScheduleType](#type-fulfillmentpickupdetailsscheduletype)
          for possible values
      pickup_at:
        type: optional<nullable<string>>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          that represents the start of the pickup window. Must be in RFC 3339
          timestamp format, e.g.,

          "2016-09-04T23:59:33.123Z".


          For fulfillments with the schedule type `ASAP`, this is automatically
          set

          to the current time plus the expected duration to prepare the
          fulfillment.
      pickup_window_duration:
        type: optional<nullable<string>>
        docs: >-
          The window of time in which the order should be picked up after the
          `pickup_at` timestamp.

          Must be in RFC 3339 duration format, e.g., "P1W3D". Can be used as an

          informational guideline for merchants.
      prep_time_duration:
        type: optional<nullable<string>>
        docs: |-
          The duration of time it takes to prepare this fulfillment.
          The duration must be in RFC 3339 format (for example, "P1W3D").
      note:
        type: optional<nullable<string>>
        docs: >-
          A note to provide additional instructions about the pickup

          fulfillment displayed in the Square Point of Sale application and set
          by the API.
        validation:
          maxLength: 500
      placed_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the fulfillment was placed. The timestamp must be in
          RFC 3339 format

          (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      accepted_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the fulfillment was marked in progress. The timestamp
          must be in RFC 3339 format

          (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      rejected_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the fulfillment was rejected. The timestamp must be in
          RFC 3339 format

          (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      ready_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the fulfillment is marked as ready for pickup. The
          timestamp must be in RFC 3339 format

          (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      expired_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the fulfillment expired. The timestamp must be in RFC
          3339 format

          (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      picked_up_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the fulfillment was picked up by the recipient. The
          timestamp must be in RFC 3339 format

          (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      canceled_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the fulfillment was canceled. The timestamp must be in
          RFC 3339 format

          (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      cancel_reason:
        type: optional<nullable<string>>
        docs: >-
          A description of why the pickup was canceled. The maximum length: 100
          characters.
        validation:
          maxLength: 100
      is_curbside_pickup:
        type: optional<nullable<boolean>>
        docs: >-
          If set to `true`, indicates that this pickup order is for curbside
          pickup, not in-store pickup.
      curbside_pickup_details:
        type: optional<FulfillmentPickupDetailsCurbsidePickupDetails>
        docs: >-
          Specific details for curbside pickup. These details can only be
          populated if `is_curbside_pickup` is set to `true`.
    source:
      openapi: openapi/openapi.json
  FulfillmentPickupDetailsCurbsidePickupDetails:
    docs: Specific details for curbside pickup.
    properties:
      curbside_details:
        type: optional<nullable<string>>
        docs: >-
          Specific details for curbside pickup, such as parking number and
          vehicle model.
        validation:
          maxLength: 250
      buyer_arrived_at:
        type: optional<nullable<string>>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the buyer arrived and is waiting for pickup. The
          timestamp must be in RFC 3339 format

          (for example, "2016-09-04T23:59:33.123Z").
    source:
      openapi: openapi/openapi.json
  FulfillmentPickupDetailsScheduleType:
    enum:
      - SCHEDULED
      - ASAP
    docs: The schedule type of the pickup fulfillment.
    source:
      openapi: openapi/openapi.json
  FulfillmentRecipient:
    docs: Information about the fulfillment recipient.
    properties:
      customer_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the customer associated with the fulfillment.


          If `customer_id` is provided, the fulfillment recipient's
          `display_name`,

          `email_address`, and `phone_number` are automatically populated from
          the

          targeted customer profile. If these fields are set in the request, the
          request

          values override the information from the customer profile. If the

          targeted customer profile does not contain the necessary information
          and

          these fields are left unset, the request results in an error.
        validation:
          maxLength: 191
      display_name:
        type: optional<nullable<string>>
        docs: >-
          The display name of the fulfillment recipient. This field is required.


          If provided, the display name overrides the corresponding customer
          profile value

          indicated by `customer_id`.
        validation:
          maxLength: 255
      email_address:
        type: optional<nullable<string>>
        docs: >-
          The email address of the fulfillment recipient.


          If provided, the email address overrides the corresponding customer
          profile value

          indicated by `customer_id`.
        validation:
          maxLength: 255
      phone_number:
        type: optional<nullable<string>>
        docs: >-
          The phone number of the fulfillment recipient. This field is required.


          If provided, the phone number overrides the corresponding customer
          profile value

          indicated by `customer_id`.
        validation:
          maxLength: 17
      address:
        type: optional<Address>
        docs: >-
          The address of the fulfillment recipient. This field is required.


          If provided, the address overrides the corresponding customer profile
          value

          indicated by `customer_id`.
    source:
      openapi: openapi/openapi.json
  FulfillmentShipmentDetails:
    docs: Contains the details necessary to fulfill a shipment order.
    properties:
      recipient:
        type: optional<FulfillmentRecipient>
        docs: Information about the person to receive this shipment fulfillment.
      carrier:
        type: optional<nullable<string>>
        docs: >-
          The shipping carrier being used to ship this fulfillment (such as UPS,
          FedEx, or USPS).
        validation:
          maxLength: 50
      shipping_note:
        type: optional<nullable<string>>
        docs: A note with additional information for the shipping carrier.
        validation:
          maxLength: 500
      shipping_type:
        type: optional<nullable<string>>
        docs: >-
          A description of the type of shipping product purchased from the
          carrier

          (such as First Class, Priority, or Express).
        validation:
          maxLength: 50
      tracking_number:
        type: optional<nullable<string>>
        docs: >-
          The reference number provided by the carrier to track the shipment's
          progress.
        validation:
          maxLength: 100
      tracking_url:
        type: optional<nullable<string>>
        docs: A link to the tracking webpage on the carrier's website.
        validation:
          maxLength: 2000
      placed_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the shipment was requested. The timestamp must be in
          RFC 3339 format

          (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      in_progress_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when this fulfillment was moved to the `RESERVED` state,
          which  indicates that preparation

          of this shipment has begun. The timestamp must be in RFC 3339 format
          (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      packaged_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when this fulfillment was moved to the `PREPARED` state,
          which indicates that the

          fulfillment is packaged. The timestamp must be in RFC 3339 format (for
          example, "2016-09-04T23:59:33.123Z").
        access: read-only
      expected_shipped_at:
        type: optional<nullable<string>>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the shipment is expected to be delivered to the
          shipping carrier.

          The timestamp must be in RFC 3339 format (for example,
          "2016-09-04T23:59:33.123Z").
      shipped_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when this fulfillment was moved to the `COMPLETED` state,
          which indicates that

          the fulfillment has been given to the shipping carrier. The timestamp
          must be in RFC 3339 format

          (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      canceled_at:
        type: optional<nullable<string>>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating the shipment was canceled.

          The timestamp must be in RFC 3339 format (for example,
          "2016-09-04T23:59:33.123Z").
      cancel_reason:
        type: optional<nullable<string>>
        docs: A description of why the shipment was canceled.
        validation:
          maxLength: 100
      failed_at:
        type: optional<string>
        docs: >-
          The
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)

          indicating when the shipment failed to be completed. The timestamp
          must be in RFC 3339 format

          (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      failure_reason:
        type: optional<nullable<string>>
        docs: A description of why the shipment failed to be completed.
        validation:
          maxLength: 100
    source:
      openapi: openapi/openapi.json
  FulfillmentState:
    enum:
      - PROPOSED
      - RESERVED
      - PREPARED
      - COMPLETED
      - CANCELED
      - FAILED
    docs: The current state of this fulfillment.
    source:
      openapi: openapi/openapi.json
  FulfillmentType:
    enum:
      - PICKUP
      - SHIPMENT
      - DELIVERY
    docs: The type of fulfillment.
    source:
      openapi: openapi/openapi.json
  GetBankAccountByV1IdResponse:
    docs: Response object returned by GetBankAccountByV1Id.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      bank_account:
        type: optional<BankAccount>
        docs: The requested `BankAccount` object.
    source:
      openapi: openapi/openapi.json
  GetBankAccountResponse:
    docs: Response object returned by `GetBankAccount`.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      bank_account:
        type: optional<BankAccount>
        docs: The requested `BankAccount` object.
    source:
      openapi: openapi/openapi.json
  GetBreakTypeResponse:
    docs: >-
      The response to a request to get a `BreakType`. The response contains

      the requested `BreakType` objects and might contain a set of `Error`
      objects if

      the request resulted in errors.
    properties:
      break_type:
        type: optional<BreakType>
        docs: The response object.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetDeviceCodeResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      device_code:
        type: optional<DeviceCode>
        docs: The queried DeviceCode.
    source:
      openapi: openapi/openapi.json
  GetDeviceResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      device:
        type: optional<Device>
        docs: The requested `Device`.
    source:
      openapi: openapi/openapi.json
  GetEmployeeWageResponse:
    docs: >-
      A response to a request to get an `EmployeeWage`. The response contains

      the requested `EmployeeWage` objects and might contain a set of `Error`
      objects if

      the request resulted in errors.
    properties:
      employee_wage:
        type: optional<EmployeeWage>
        docs: The requested `EmployeeWage` object.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetInvoiceResponse:
    docs: Describes a `GetInvoice` response.
    properties:
      invoice:
        type: optional<Invoice>
        docs: The invoice requested.
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  GetPaymentRefundResponse:
    docs: >-
      Defines the response returned by
      [GetRefund](api-endpoint:Refunds-GetPaymentRefund).


      Note: If there are errors processing the request, the refund field might
      not be

      present or it might be present in a FAILED state.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      refund:
        type: optional<PaymentRefund>
        docs: The requested `PaymentRefund`.
    source:
      openapi: openapi/openapi.json
  GetPaymentResponse:
    docs: >-
      Defines the response returned by
      [GetPayment](api-endpoint:Payments-GetPayment).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      payment:
        type: optional<Payment>
        docs: The requested `Payment`.
    source:
      openapi: openapi/openapi.json
  GetPayoutResponse:
    properties:
      payout:
        type: optional<Payout>
        docs: The requested payout.
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  GetShiftResponse:
    docs: |-
      A response to a request to get a `Shift`. The response contains
      the requested `Shift` object and might contain a set of `Error` objects if
      the request resulted in errors.
    properties:
      shift:
        type: optional<Shift>
        docs: The requested `Shift`.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetTeamMemberWageResponse:
    docs: >-
      A response to a request to get a `TeamMemberWage`. The response contains

      the requested `TeamMemberWage` objects and might contain a set of `Error`
      objects if

      the request resulted in errors.
    properties:
      team_member_wage:
        type: optional<TeamMemberWage>
        docs: The requested `TeamMemberWage` object.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetTerminalActionResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      action:
        type: optional<TerminalAction>
        docs: The requested `TerminalAction`
    source:
      openapi: openapi/openapi.json
  GetTerminalCheckoutResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      checkout:
        type: optional<TerminalCheckout>
        docs: The requested `TerminalCheckout`.
    source:
      openapi: openapi/openapi.json
  GetTerminalRefundResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      refund:
        type: optional<TerminalRefund>
        docs: The requested `Refund`.
    source:
      openapi: openapi/openapi.json
  GiftCard:
    docs: Represents a Square gift card.
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the gift card.
        access: read-only
      type:
        type: GiftCardType
        docs: |-
          The gift card type.
          See [Type](#type-type) for possible values
      gan_source:
        type: optional<GiftCardGanSource>
        docs: >-
          The source that generated the gift card account number (GAN). The
          default value is `SQUARE`.

          See [GANSource](#type-gansource) for possible values
      state:
        type: optional<GiftCardStatus>
        docs: |-
          The current gift card state.
          See [Status](#type-status) for possible values
      balance_money:
        type: optional<Money>
        docs: >-
          The current gift card balance. This balance is always greater than or
          equal to zero.
      gan:
        type: optional<nullable<string>>
        docs: >-
          The gift card account number (GAN). Buyers can use the GAN to make
          purchases or check 

          the gift card balance.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp when the gift card was created, in RFC 3339 format. 

          In the case of a digital gift card, it is the time when you create a
          card 

          (using the Square Point of Sale application, Seller Dashboard, or Gift
          Cards API).  

          In the case of a plastic gift card, it is the time when Square
          associates the card with the 

          seller at the time of activation.
        access: read-only
      customer_ids:
        type: optional<list<string>>
        docs: >-
          The IDs of the [customer profiles](entity:Customer) to whom this gift
          card is linked.
        access: read-only
    source:
      openapi: openapi/openapi.json
  GiftCardActivity:
    docs: >-
      Represents an action performed on a [gift card](entity:GiftCard) that
      affects its state or balance. 

      A gift card activity contains information about a specific activity type.
      For example, a `REDEEM` activity

      includes a `redeem_activity_details` field that contains information about
      the redemption.
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the gift card activity.
        access: read-only
      type:
        type: GiftCardActivityType
        docs: |-
          The type of gift card activity.
          See [Type](#type-type) for possible values
      location_id:
        type: string
        docs: >-
          The ID of the [business location](entity:Location) where the activity
          occurred.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp when the gift card activity was created, in RFC 3339
          format.
        access: read-only
      gift_card_id:
        type: optional<nullable<string>>
        docs: >-
          The gift card ID. When creating a gift card activity, `gift_card_id`
          is not required if 

          `gift_card_gan` is specified.
      gift_card_gan:
        type: optional<nullable<string>>
        docs: >-
          The gift card account number (GAN). When creating a gift card
          activity, `gift_card_gan` 

          is not required if `gift_card_id` is specified.
      gift_card_balance_money:
        type: optional<Money>
        docs: The final balance on the gift card after the action is completed.
      load_activity_details:
        type: optional<GiftCardActivityLoad>
        docs: >-
          Additional details about a `LOAD` activity, which is used to reload
          money onto a gift card.
      activate_activity_details:
        type: optional<GiftCardActivityActivate>
        docs: >-
          Additional details about an `ACTIVATE` activity, which is used to
          activate a gift card with 

          an initial balance.
      redeem_activity_details:
        type: optional<GiftCardActivityRedeem>
        docs: >-
          Additional details about a `REDEEM` activity, which is used to redeem
          a gift card for a purchase.


          For applications that process payments using the Square Payments API,
          Square creates a `REDEEM` activity that 

          updates the gift card balance after the corresponding
          [CreatePayment](api-endpoint:Payments-CreatePayment) 

          request is completed. Applications that use a custom payment
          processing system must call 

          [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity)
          to create the `REDEEM` activity.
      clear_balance_activity_details:
        type: optional<GiftCardActivityClearBalance>
        docs: >-
          Additional details about a `CLEAR_BALANCE` activity, which is used to
          set the balance of a gift card to zero.
      deactivate_activity_details:
        type: optional<GiftCardActivityDeactivate>
        docs: >-
          Additional details about a `DEACTIVATE` activity, which is used to
          deactivate a gift card.
      adjust_increment_activity_details:
        type: optional<GiftCardActivityAdjustIncrement>
        docs: >-
          Additional details about an `ADJUST_INCREMENT` activity, which is used
          to add money to a gift card 

          outside of a typical `ACTIVATE`, `LOAD`, or `REFUND` activity flow.
      adjust_decrement_activity_details:
        type: optional<GiftCardActivityAdjustDecrement>
        docs: >-
          Additional details about an `ADJUST_DECREMENT` activity, which is used
          to deduct money from a gift 

          card outside of a typical `REDEEM` activity flow.
      refund_activity_details:
        type: optional<GiftCardActivityRefund>
        docs: >-
          Additional details about a `REFUND` activity, which is used to add
          money to a gift card when 

          refunding a payment.


          For applications that refund payments to a gift card using the Square
          Refunds API, Square automatically

          creates a `REFUND` activity that updates the gift card balance after a
          [RefundPayment](api-endpoint:Refunds-RefundPayment)

          request is completed. Applications that use a custom processing system
          must call

          [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity)
          to create the `REFUND` activity.
      unlinked_activity_refund_activity_details:
        type: optional<GiftCardActivityUnlinkedActivityRefund>
        docs: >-
          Additional details about an `UNLINKED_ACTIVITY_REFUND` activity. This
          activity is used to add money 

          to a gift card when refunding a payment that was processed using a
          custom payment processing system

          and not linked to the gift card.
      import_activity_details:
        type: optional<GiftCardActivityImport>
        docs: >-
          Additional details about an `IMPORT` activity, which Square uses to
          import a third-party 

          gift card with a balance.
      block_activity_details:
        type: optional<GiftCardActivityBlock>
        docs: >-
          Additional details about a `BLOCK` activity, which Square uses to
          temporarily block a gift card.
      unblock_activity_details:
        type: optional<GiftCardActivityUnblock>
        docs: >-
          Additional details about an `UNBLOCK` activity, which Square uses to
          unblock a gift card.
      import_reversal_activity_details:
        type: optional<GiftCardActivityImportReversal>
        docs: >-
          Additional details about an `IMPORT_REVERSAL` activity, which Square
          uses to reverse the 

          import of a third-party gift card.
      transfer_balance_to_activity_details:
        type: optional<GiftCardActivityTransferBalanceTo>
        docs: >-
          Additional details about a `TRANSFER_BALANCE_TO` activity, which
          Square uses to add money to

          a gift card as the result of a transfer from another gift card.
      transfer_balance_from_activity_details:
        type: optional<GiftCardActivityTransferBalanceFrom>
        docs: >-
          Additional details about a `TRANSFER_BALANCE_FROM` activity, which
          Square uses to deduct money from

          a gift as the result of a transfer to another gift card.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityActivate:
    docs: >-
      Represents details about an `ACTIVATE` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      amount_money:
        type: optional<Money>
        docs: >-
          The amount added to the gift card. This value is a positive integer.


          Applications that use a custom order processing system must specify
          this amount in the 

          [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity)
          request.
      order_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the [order](entity:Order) that contains the `GIFT_CARD` line
          item.


          Applications that use the Square Orders API to process orders must
          specify the order ID

          [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity)
          request.
      line_item_uid:
        type: optional<nullable<string>>
        docs: >-
          The UID of the `GIFT_CARD` line item in the order that represents the
          gift card purchase.


          Applications that use the Square Orders API to process orders must
          specify the line item UID

          in the
          [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity)
          request.
      reference_id:
        type: optional<nullable<string>>
        docs: >-
          A client-specified ID that associates the gift card activity with an
          entity in another system. 


          Applications that use a custom order processing system can use this
          field to track information 

          related to an order or payment.
      buyer_payment_instrument_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The payment instrument IDs used to process the gift card purchase,
          such as a credit card ID 

          or bank account ID. 


          Applications that use a custom order processing system must specify
          payment instrument IDs in 

          the
          [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity)
          request.

          Square uses this information to perform compliance checks. 


          For applications that use the Square Orders API to process payments,
          Square has the necessary 

          instrument IDs to perform compliance checks.


          Each buyer payment instrument ID can contain a maximum of 255
          characters.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityAdjustDecrement:
    docs: >-
      Represents details about an `ADJUST_DECREMENT` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      amount_money:
        type: Money
        docs: >-
          The amount deducted from the gift card balance. This value is a
          positive integer.
      reason:
        type: GiftCardActivityAdjustDecrementReason
        docs: |-
          The reason the gift card balance was adjusted.
          See [Reason](#type-reason) for possible values
    source:
      openapi: openapi/openapi.json
  GiftCardActivityAdjustDecrementReason:
    enum:
      - SUSPICIOUS_ACTIVITY
      - BALANCE_ACCIDENTALLY_INCREASED
      - SUPPORT_ISSUE
      - PURCHASE_WAS_REFUNDED
    docs: >-
      Indicates the reason for deducting money from a [gift
      card](entity:GiftCard).
    source:
      openapi: openapi/openapi.json
  GiftCardActivityAdjustIncrement:
    docs: >-
      Represents details about an `ADJUST_INCREMENT` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      amount_money:
        type: Money
        docs: >-
          The amount added to the gift card balance. This value is a positive
          integer.
      reason:
        type: GiftCardActivityAdjustIncrementReason
        docs: |-
          The reason the gift card balance was adjusted.
          See [Reason](#type-reason) for possible values
    source:
      openapi: openapi/openapi.json
  GiftCardActivityAdjustIncrementReason:
    enum:
      - COMPLIMENTARY
      - SUPPORT_ISSUE
      - TRANSACTION_VOIDED
    docs: Indicates the reason for adding money to a [gift card](entity:GiftCard).
    source:
      openapi: openapi/openapi.json
  GiftCardActivityBlock:
    docs: >-
      Represents details about a `BLOCK` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      reason:
        type: GiftCardActivityBlockReason
        docs: |-
          The reason the gift card was blocked.
          See [Reason](#type-reason) for possible values
    source:
      openapi: openapi/openapi.json
  GiftCardActivityBlockReason:
    type: literal<"CHARGEBACK_BLOCK">
    docs: Indicates the reason for blocking a [gift card](entity:GiftCard).
  GiftCardActivityClearBalance:
    docs: >-
      Represents details about a `CLEAR_BALANCE` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      reason:
        type: GiftCardActivityClearBalanceReason
        docs: |-
          The reason the gift card balance was cleared.
          See [Reason](#type-reason) for possible values
    source:
      openapi: openapi/openapi.json
  GiftCardActivityClearBalanceReason:
    enum:
      - SUSPICIOUS_ACTIVITY
      - REUSE_GIFTCARD
      - UNKNOWN_REASON
    docs: >-
      Indicates the reason for clearing the balance of a [gift
      card](entity:GiftCard).
    source:
      openapi: openapi/openapi.json
  GiftCardActivityCreatedEvent:
    docs: Published when a [gift card activity](entity:GiftCardActivity) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `gift_card.activity.created`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID of the event, which is used for 

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<GiftCardActivityCreatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityCreatedEventData:
    docs: Represents the data associated with a `gift_card.activity.created` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `gift_card_activity`.
      id:
        type: optional<string>
        docs: The ID of the new gift card activity.
      object:
        type: optional<GiftCardActivityCreatedEventObject>
        docs: An object that contains the new gift card activity.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityCreatedEventObject:
    docs: |-
      An object that contains the gift card activity associated with a 
      `gift_card.activity.created` event.
    properties:
      gift_card_activity:
        type: optional<GiftCardActivity>
        docs: The new gift card activity.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityDeactivate:
    docs: >-
      Represents details about a `DEACTIVATE` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      reason:
        type: GiftCardActivityDeactivateReason
        docs: |-
          The reason the gift card was deactivated.
          See [Reason](#type-reason) for possible values
    source:
      openapi: openapi/openapi.json
  GiftCardActivityDeactivateReason:
    enum:
      - SUSPICIOUS_ACTIVITY
      - UNKNOWN_REASON
      - CHARGEBACK_DEACTIVATE
    docs: Indicates the reason for deactivating a [gift card](entity:GiftCard).
    source:
      openapi: openapi/openapi.json
  GiftCardActivityImport:
    docs: >-
      Represents details about an `IMPORT` [gift card activity
      type](entity:GiftCardActivityType).

      This activity type is used when Square imports a third-party gift card, in
      which case the 

      `gan_source` of the gift card is set to `OTHER`.
    properties:
      amount_money:
        type: Money
        docs: The balance amount on the imported gift card.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityImportReversal:
    docs: >-
      Represents details about an `IMPORT_REVERSAL` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      amount_money:
        type: Money
        docs: |-
          The amount of money cleared from the third-party gift card when 
          the import was reversed.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityLoad:
    docs: >-
      Represents details about a `LOAD` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      amount_money:
        type: optional<Money>
        docs: >-
          The amount added to the gift card. This value is a positive integer.


          Applications that use a custom order processing system must specify
          this amount in the 

          [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity)
          request.
      order_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the [order](entity:Order) that contains the `GIFT_CARD` line
          item.


          Applications that use the Square Orders API to process orders must
          specify the order ID in the 

          [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity)
          request.
      line_item_uid:
        type: optional<nullable<string>>
        docs: >-
          The UID of the `GIFT_CARD` line item in the order that represents the
          additional funds for the gift card.


          Applications that use the Square Orders API to process orders must
          specify the line item UID

          in the
          [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity)
          request.
      reference_id:
        type: optional<nullable<string>>
        docs: >-
          A client-specified ID that associates the gift card activity with an
          entity in another system. 


          Applications that use a custom order processing system can use this
          field to track information related to 

          an order or payment.
      buyer_payment_instrument_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The payment instrument IDs used to process the order for the
          additional funds, such as a credit card ID 

          or bank account ID. 


          Applications that use a custom order processing system must specify
          payment instrument IDs in 

          the
          [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity)
          request.

          Square uses this information to perform compliance checks. 


          For applications that use the Square Orders API to process payments,
          Square has the necessary 

          instrument IDs to perform compliance checks.


          Each buyer payment instrument ID can contain a maximum of 255
          characters.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityRedeem:
    docs: >-
      Represents details about a `REDEEM` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      amount_money:
        type: Money
        docs: >-
          The amount deducted from the gift card for the redemption. This value
          is a positive integer.


          Applications that use a custom payment processing system must specify
          this amount in the 

          [CreateGiftCardActivity](api-endpoint:GiftCardActivities-CreateGiftCardActivity)
          request.
      payment_id:
        type: optional<string>
        docs: >-
          The ID of the payment that represents the gift card redemption. Square
          populates this field 

          if the payment was processed by Square.
        access: read-only
      reference_id:
        type: optional<nullable<string>>
        docs: >-
          A client-specified ID that associates the gift card activity with an
          entity in another system. 


          Applications that use a custom payment processing system can use this
          field to track information

          related to an order or payment.
      status:
        type: optional<GiftCardActivityRedeemStatus>
        docs: >-
          The status of the gift card redemption. Gift cards redeemed from
          Square Point of Sale or the 

          Square Seller Dashboard use a two-state process: `PENDING` 

          to `COMPLETED` or `PENDING` to  `CANCELED`. Gift cards redeemed using
          the Gift Card Activities API 

          always have a `COMPLETED` status.

          See [Status](#type-status) for possible values
    source:
      openapi: openapi/openapi.json
  GiftCardActivityRedeemStatus:
    enum:
      - PENDING
      - COMPLETED
      - CANCELED
    docs: >-
      Indicates the status of a [gift card](entity:GiftCard) redemption. This
      status is relevant only for

      redemptions made from Square products (such as Square Point of Sale)
      because Square products use a 

      two-state process. Gift cards redeemed using the Gift Card Activities API
      always have a `COMPLETED` status.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityRefund:
    docs: >-
      Represents details about a `REFUND` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      redeem_activity_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the refunded `REDEEM` gift card activity. Square populates
          this field if the 

          `payment_id` in the corresponding
          [RefundPayment](api-endpoint:Refunds-RefundPayment) request 

          represents a gift card redemption.


          For applications that use a custom payment processing system, this
          field is required when creating

          a `REFUND` activity. The provided `REDEEM` activity ID must be linked
          to the same gift card.
      amount_money:
        type: optional<Money>
        docs: >-
          The amount added to the gift card for the refund. This value is a
          positive integer.


          This field is required when creating a `REFUND` activity. The amount
          can represent a full or partial refund.
      reference_id:
        type: optional<nullable<string>>
        docs: >-
          A client-specified ID that associates the gift card activity with an
          entity in another system.
      payment_id:
        type: optional<string>
        docs: >-
          The ID of the refunded payment. Square populates this field if the
          refund is for a 

          payment processed by Square. This field matches the `payment_id` in
          the corresponding

          [RefundPayment](api-endpoint:Refunds-RefundPayment) request.
        access: read-only
    source:
      openapi: openapi/openapi.json
  GiftCardActivityTransferBalanceFrom:
    docs: >-
      Represents details about a `TRANSFER_BALANCE_FROM` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      transfer_to_gift_card_id:
        type: string
        docs: The ID of the gift card to which the specified amount was transferred.
      amount_money:
        type: Money
        docs: >-
          The amount deducted from the gift card for the transfer. This value is
          a positive integer.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityTransferBalanceTo:
    docs: >-
      Represents details about a `TRANSFER_BALANCE_TO` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      transfer_from_gift_card_id:
        type: string
        docs: >-
          The ID of the gift card from which the specified amount was
          transferred.
      amount_money:
        type: Money
        docs: >-
          The amount added to the gift card balance for the transfer. This value
          is a positive integer.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityType:
    enum:
      - ACTIVATE
      - LOAD
      - REDEEM
      - CLEAR_BALANCE
      - DEACTIVATE
      - ADJUST_INCREMENT
      - ADJUST_DECREMENT
      - REFUND
      - UNLINKED_ACTIVITY_REFUND
      - IMPORT
      - BLOCK
      - UNBLOCK
      - IMPORT_REVERSAL
      - TRANSFER_BALANCE_FROM
      - TRANSFER_BALANCE_TO
    docs: Indicates the type of [gift card activity](entity:GiftCardActivity).
    source:
      openapi: openapi/openapi.json
  GiftCardActivityUnblock:
    docs: >-
      Represents details about an `UNBLOCK` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      reason:
        type: GiftCardActivityUnblockReason
        docs: |-
          The reason the gift card was unblocked.
          See [Reason](#type-reason) for possible values
    source:
      openapi: openapi/openapi.json
  GiftCardActivityUnblockReason:
    type: literal<"CHARGEBACK_UNBLOCK">
    docs: Indicates the reason for unblocking a [gift card](entity:GiftCard).
  GiftCardActivityUnlinkedActivityRefund:
    docs: >-
      Represents details about an `UNLINKED_ACTIVITY_REFUND` [gift card activity
      type](entity:GiftCardActivityType).
    properties:
      amount_money:
        type: Money
        docs: >-
          The amount added to the gift card for the refund. This value is a
          positive integer.
      reference_id:
        type: optional<nullable<string>>
        docs: >-
          A client-specified ID that associates the gift card activity with an
          entity in another system.
      payment_id:
        type: optional<string>
        docs: >-
          The ID of the refunded payment. This field is not used starting in
          Square version 2022-06-16.
        access: read-only
    source:
      openapi: openapi/openapi.json
  GiftCardActivityUpdatedEvent:
    docs: >-
      Published when a [gift card activity](entity:GiftCardActivity) is
      updated. 

      Subscribe to this event to be notified about the following changes:

      - An update to the `REDEEM` activity for a gift card redemption made from
      a Square product (such as Square Point of Sale). 

      These redemptions are initially assigned a `PENDING` state, but then
      change to a `COMPLETED` or `CANCELED` state.

      - An update to the `IMPORT` activity for an imported gift card when the
      balance is later adjusted by Square.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `gift_card.activity.updated`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID of the event, which is used for 

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<GiftCardActivityUpdatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityUpdatedEventData:
    docs: The data associated with a `gift_card.activity.updated` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `gift_card_activity`.
      id:
        type: optional<string>
        docs: The ID of the updated gift card activity.
      object:
        type: optional<GiftCardActivityUpdatedEventObject>
        docs: An object that contains the updated gift card activity.
    source:
      openapi: openapi/openapi.json
  GiftCardActivityUpdatedEventObject:
    docs: |-
      An object that contains the gift card activity associated with a 
      `gift_card.activity.updated` event.
    properties:
      gift_card_activity:
        type: optional<GiftCardActivity>
        docs: The updated gift card activity.
    source:
      openapi: openapi/openapi.json
  GiftCardCreatedEvent:
    docs: Published when a [gift card](entity:GiftCard) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event. For this event, the value is `gift_card.created`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID of the event, which is used for 

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<GiftCardCreatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  GiftCardCreatedEventData:
    docs: The data associated with a `gift_card.created` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `gift_card`.
      id:
        type: optional<string>
        docs: The ID of the new gift card.
      object:
        type: optional<GiftCardCreatedEventObject>
        docs: An object that contains the new gift card.
    source:
      openapi: openapi/openapi.json
  GiftCardCreatedEventObject:
    docs: >-
      An object that contains the gift card associated with a
      `gift_card.created` event.
    properties:
      gift_card:
        type: optional<GiftCard>
        docs: The new gift card.
    source:
      openapi: openapi/openapi.json
  GiftCardCustomerLinkedEvent:
    docs: >-
      Published when a [customer](entity:Customer) is linked to a [gift
      card](entity:GiftCard).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `gift_card.customer_linked`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID of the event, which is used for 

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<GiftCardCustomerLinkedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  GiftCardCustomerLinkedEventData:
    docs: The data associated with a `gift_card.customer_linked` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `gift_card`.
      id:
        type: optional<string>
        docs: The ID of the updated gift card.
      object:
        type: optional<GiftCardCustomerLinkedEventObject>
        docs: >-
          An object that contains the updated gift card and the ID of the linked
          customer.
    source:
      openapi: openapi/openapi.json
  GiftCardCustomerLinkedEventObject:
    docs: |-
      An object that contains the gift card and customer ID associated with a 
      `gift_card.customer_linked` event.
    properties:
      gift_card:
        type: optional<GiftCard>
        docs: The gift card with the updated `customer_ids` field.
      linked_customer_id:
        type: optional<nullable<string>>
        docs: The ID of the linked [customer](entity:Customer).
    source:
      openapi: openapi/openapi.json
  GiftCardCustomerUnlinkedEvent:
    docs: >-
      Published when a [customer](entity:Customer) is unlinked from a [gift
      card](entity:GiftCard).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `gift_card.customer_unlinked`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID of the event, which is used for 

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<GiftCardCustomerUnlinkedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  GiftCardCustomerUnlinkedEventData:
    docs: The data associated with a `gift_card.customer_unlinked` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `gift_card`.
      id:
        type: optional<string>
        docs: The ID of the updated gift card.
      object:
        type: optional<GiftCardCustomerUnlinkedEventObject>
        docs: >-
          An object that contains the updated gift card and the ID of the
          unlinked customer.
    source:
      openapi: openapi/openapi.json
  GiftCardCustomerUnlinkedEventObject:
    docs: >-
      An object that contains the gift card and the customer ID associated with
      a 

      `gift_card.customer_linked` event.
    properties:
      gift_card:
        type: optional<GiftCard>
        docs: |-
          The gift card with the updated `customer_ids` field. 
          The field is removed if the gift card is not linked to any customers.
      unlinked_customer_id:
        type: optional<nullable<string>>
        docs: The ID of the unlinked [customer](entity:Customer).
    source:
      openapi: openapi/openapi.json
  GiftCardGanSource:
    enum:
      - SQUARE
      - OTHER
    docs: |-
      Indicates the source that generated the gift card 
      account number (GAN).
    source:
      openapi: openapi/openapi.json
  GiftCardStatus:
    enum:
      - ACTIVE
      - DEACTIVATED
      - BLOCKED
      - PENDING
    docs: Indicates the gift card state.
    source:
      openapi: openapi/openapi.json
  GiftCardType:
    enum:
      - PHYSICAL
      - DIGITAL
    docs: Indicates the gift card type.
    source:
      openapi: openapi/openapi.json
  GiftCardUpdatedEvent:
    docs: |-
      Published when a [gift card](entity:GiftCard) is updated. This includes
      changes to the state, balance, and customer association.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. For this event, the value is
          `gift_card.updated`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID of the event, which is used for 

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<GiftCardUpdatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  GiftCardUpdatedEventData:
    docs: The data associated with a `gift_card.updated` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `gift_card`.
      id:
        type: optional<string>
        docs: The ID of the updated gift card.
      object:
        type: optional<GiftCardUpdatedEventObject>
        docs: An object that contains the updated gift card.
    source:
      openapi: openapi/openapi.json
  GiftCardUpdatedEventObject:
    docs: >-
      An object that contains the gift card associated with a
      `gift_card.updated` event.
    properties:
      gift_card:
        type: optional<GiftCard>
        docs: >-
          The gift card with the updated `balance_money`, `state`, or
          `customer_ids` field. 

          Some events can affect both `balance_money` and `state`.
    source:
      openapi: openapi/openapi.json
  InventoryAdjustment:
    docs: |-
      Represents a change in state or quantity of product inventory at a
      particular time and location.
    properties:
      id:
        type: optional<string>
        docs: |-
          A unique ID generated by Square for the
          `InventoryAdjustment`.
        validation:
          maxLength: 100
      reference_id:
        type: optional<nullable<string>>
        docs: |-
          An optional ID provided by the application to tie the
          `InventoryAdjustment` to an external
          system.
        validation:
          maxLength: 255
      from_state:
        type: optional<InventoryState>
        docs: |-
          The [inventory state](entity:InventoryState) of the related quantity
          of items before the adjustment.
          See [InventoryState](#type-inventorystate) for possible values
      to_state:
        type: optional<InventoryState>
        docs: |-
          The [inventory state](entity:InventoryState) of the related quantity
          of items after the adjustment.
          See [InventoryState](#type-inventorystate) for possible values
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-generated ID of the [Location](entity:Location) where the
          related

          quantity of items is being tracked.
        validation:
          maxLength: 100
      catalog_object_id:
        type: optional<nullable<string>>
        docs: |-
          The Square-generated ID of the
          [CatalogObject](entity:CatalogObject) being tracked.
        validation:
          maxLength: 100
      catalog_object_type:
        type: optional<nullable<string>>
        docs: >-
          The [type](entity:CatalogObjectType) of the
          [CatalogObject](entity:CatalogObject) being tracked. 


          The Inventory API supports setting and reading the
          `"catalog_object_type": "ITEM_VARIATION"` field value. 

          In addition, it can also read the `"catalog_object_type": "ITEM"`
          field value that is set by the Square Restaurants app.
        validation:
          maxLength: 14
      quantity:
        type: optional<nullable<string>>
        docs: |-
          The number of items affected by the adjustment as a decimal string.
          Can support up to 5 digits after the decimal point.
        validation:
          maxLength: 26
      total_price_money:
        type: optional<Money>
        docs: |-
          The total price paid for goods associated with the
          adjustment. Present if and only if `to_state` is `SOLD`. Always
          non-negative.
      occurred_at:
        type: optional<nullable<string>>
        docs: >-
          A client-generated RFC 3339-formatted timestamp that indicates when

          the inventory adjustment took place. For inventory adjustment updates,
          the `occurred_at`

          timestamp cannot be older than 24 hours or in the future relative to
          the

          time of the request.
        validation:
          maxLength: 34
      created_at:
        type: optional<string>
        docs: >-
          An RFC 3339-formatted timestamp that indicates when the inventory
          adjustment is received.
        validation:
          maxLength: 34
        access: read-only
      source:
        type: optional<SourceApplication>
        docs: |-
          Information about the application that caused the
          inventory adjustment.
      employee_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-generated ID of the [Employee](entity:Employee) responsible
          for the

          inventory adjustment.
        validation:
          maxLength: 100
      team_member_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-generated ID of the [Team Member](entity:TeamMember)
          responsible for the

          inventory adjustment.
        validation:
          maxLength: 100
      transaction_id:
        type: optional<string>
        docs: |-
          The Square-generated ID of the [Transaction](entity:Transaction) that
          caused the adjustment. Only relevant for payment-related state
          transitions.
        validation:
          maxLength: 255
        access: read-only
      refund_id:
        type: optional<string>
        docs: |-
          The Square-generated ID of the [Refund](entity:Refund) that
          caused the adjustment. Only relevant for refund-related state
          transitions.
        validation:
          maxLength: 255
        access: read-only
      purchase_order_id:
        type: optional<string>
        docs: >-
          The Square-generated ID of the purchase order that caused the

          adjustment. Only relevant for state transitions from the Square for
          Retail

          app.
        validation:
          maxLength: 100
        access: read-only
      goods_receipt_id:
        type: optional<string>
        docs: >-
          The Square-generated ID of the goods receipt that caused the

          adjustment. Only relevant for state transitions from the Square for
          Retail

          app.
        validation:
          maxLength: 100
        access: read-only
      adjustment_group:
        type: optional<InventoryAdjustmentGroup>
        docs: >-
          An adjustment group bundling the related adjustments of item
          variations through stock conversions in a single inventory event.
    source:
      openapi: openapi/openapi.json
  InventoryAdjustmentGroup:
    properties:
      id:
        type: optional<string>
        docs: |-
          A unique ID generated by Square for the
          `InventoryAdjustmentGroup`.
        validation:
          maxLength: 100
        access: read-only
      root_adjustment_id:
        type: optional<string>
        docs: The inventory adjustment of the composed variation.
        validation:
          maxLength: 100
        access: read-only
      from_state:
        type: optional<InventoryState>
        docs: >-
          Representative `from_state` for adjustments within the group. For
          example, for a group adjustment from `IN_STOCK` to `SOLD`,

          there can be two component adjustments in the group: one from
          `IN_STOCK`to `COMPOSED` and the other one from `COMPOSED` to `SOLD`.

          Here, the representative `from_state` for the
          `InventoryAdjustmentGroup` is `IN_STOCK`.

          See [InventoryState](#type-inventorystate) for possible values
      to_state:
        type: optional<InventoryState>
        docs: >-
          Representative `to_state` for adjustments within group. For example,
          for a group adjustment from `IN_STOCK` to `SOLD`,

          the two component adjustments in the group can be from `IN_STOCK` to
          `COMPOSED` and from `COMPOSED` to `SOLD`.

          Here, the representative `to_state` of the `InventoryAdjustmentGroup`
          is `SOLD`.

          See [InventoryState](#type-inventorystate) for possible values
    source:
      openapi: openapi/openapi.json
  InventoryAlertType:
    enum:
      - NONE
      - LOW_QUANTITY
    docs: >-
      Indicates whether Square should alert the merchant when the inventory
      quantity of a CatalogItemVariation is low.
    source:
      openapi: openapi/openapi.json
  InventoryChange:
    docs: |-
      Represents a single physical count, inventory, adjustment, or transfer
      that is part of the history of inventory changes for a particular
      [CatalogObject](entity:CatalogObject) instance.
    properties:
      type:
        type: optional<InventoryChangeType>
        docs: >-
          Indicates how the inventory change is applied. See

          [InventoryChangeType](entity:InventoryChangeType) for all possible
          values.

          See [InventoryChangeType](#type-inventorychangetype) for possible
          values
      physical_count:
        type: optional<InventoryPhysicalCount>
        docs: |-
          Contains details about the physical count when `type` is
          `PHYSICAL_COUNT`, and is unset for all other change types.
      adjustment:
        type: optional<InventoryAdjustment>
        docs: |-
          Contains details about the inventory adjustment when `type` is
          `ADJUSTMENT`, and is unset for all other change types.
      transfer:
        type: optional<InventoryTransfer>
        docs: >-
          Contains details about the inventory transfer when `type` is

          `TRANSFER`, and is unset for all other change types.


          _Note:_ An [InventoryTransfer](entity:InventoryTransfer) object can
          only be set in the input to the

          [BatchChangeInventory](api-endpoint:Inventory-BatchChangeInventory)
          endpoint when the seller has an active Retail Plus subscription.
      measurement_unit:
        type: optional<CatalogMeasurementUnit>
        docs: >-
          The [CatalogMeasurementUnit](entity:CatalogMeasurementUnit) object
          representing the catalog measurement unit associated with the
          inventory change.
      measurement_unit_id:
        type: optional<string>
        docs: >-
          The ID of the [CatalogMeasurementUnit](entity:CatalogMeasurementUnit)
          object representing the catalog measurement unit associated with the
          inventory change.
        access: read-only
    source:
      openapi: openapi/openapi.json
  InventoryChangeType:
    enum:
      - PHYSICAL_COUNT
      - ADJUSTMENT
      - TRANSFER
    docs: >-
      Indicates how the inventory change was applied to a tracked product
      quantity.
    source:
      openapi: openapi/openapi.json
  InventoryCount:
    docs: >-
      Represents Square-estimated quantity of items in a particular state at a

      particular seller location based on the known history of physical counts
      and

      inventory adjustments.
    properties:
      catalog_object_id:
        type: optional<nullable<string>>
        docs: |-
          The Square-generated ID of the
          [CatalogObject](entity:CatalogObject) being tracked.
        validation:
          maxLength: 100
      catalog_object_type:
        type: optional<nullable<string>>
        docs: >-
          The [type](entity:CatalogObjectType) of the
          [CatalogObject](entity:CatalogObject) being tracked. 


          The Inventory API supports setting and reading the
          `"catalog_object_type": "ITEM_VARIATION"` field value. 

          In addition, it can also read the `"catalog_object_type": "ITEM"`
          field value that is set by the Square Restaurants app.
        validation:
          maxLength: 14
      state:
        type: optional<InventoryState>
        docs: |-
          The current [inventory state](entity:InventoryState) for the related
          quantity of items.
          See [InventoryState](#type-inventorystate) for possible values
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-generated ID of the [Location](entity:Location) where the
          related

          quantity of items is being tracked.
        validation:
          maxLength: 100
      quantity:
        type: optional<nullable<string>>
        docs: >-
          The number of items affected by the estimated count as a decimal
          string.

          Can support up to 5 digits after the decimal point.
        validation:
          maxLength: 26
      calculated_at:
        type: optional<string>
        docs: >-
          An RFC 3339-formatted timestamp that indicates when the most recent
          physical count or adjustment affecting

          the estimated count is received.
        validation:
          maxLength: 34
        access: read-only
      is_estimated:
        type: optional<boolean>
        docs: >-
          Whether the inventory count is for composed variation (TRUE) or not
          (FALSE). If true, the inventory count will not be present in the
          response of

          any of these endpoints:
          [BatchChangeInventory](api-endpoint:Inventory-BatchChangeInventory),

          [BatchRetrieveInventoryChanges](api-endpoint:Inventory-BatchRetrieveInventoryChanges),

          [BatchRetrieveInventoryCounts](api-endpoint:Inventory-BatchRetrieveInventoryCounts),
          and

          [RetrieveInventoryChanges](api-endpoint:Inventory-RetrieveInventoryChanges).
        access: read-only
    source:
      openapi: openapi/openapi.json
  InventoryCountUpdatedEvent:
    docs: |-
      Published when the quantity is updated for a
      [CatalogItemVariation](entity:CatalogItemVariation).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<InventoryCountUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  InventoryCountUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          Name of the affected object’s type. For this event, the value is
          `inventory_counts`.
      id:
        type: optional<string>
        docs: ID of the affected object.
      object:
        type: optional<InventoryCountUpdatedEventObject>
        docs: >-
          An object containing fields and values relevant to the event. Is
          absent if affected object was deleted.
    source:
      openapi: openapi/openapi.json
  InventoryCountUpdatedEventObject:
    properties:
      inventory_counts:
        type: optional<nullable<list<InventoryCount>>>
        docs: The inventory counts.
    source:
      openapi: openapi/openapi.json
  InventoryPhysicalCount:
    docs: >-
      Represents the quantity of an item variation that is physically present

      at a specific location, verified by a seller or a seller's employee. For
      example,

      a physical count might come from an employee counting the item variations
      on

      hand or from syncing with an external system.
    properties:
      id:
        type: optional<string>
        docs: |-
          A unique Square-generated ID for the
          [InventoryPhysicalCount](entity:InventoryPhysicalCount).
        validation:
          maxLength: 100
      reference_id:
        type: optional<nullable<string>>
        docs: |-
          An optional ID provided by the application to tie the
          [InventoryPhysicalCount](entity:InventoryPhysicalCount) to an external
          system.
        validation:
          maxLength: 255
      catalog_object_id:
        type: optional<nullable<string>>
        docs: |-
          The Square-generated ID of the
          [CatalogObject](entity:CatalogObject) being tracked.
        validation:
          maxLength: 100
      catalog_object_type:
        type: optional<nullable<string>>
        docs: >-
          The [type](entity:CatalogObjectType) of the
          [CatalogObject](entity:CatalogObject) being tracked. 


          The Inventory API supports setting and reading the
          `"catalog_object_type": "ITEM_VARIATION"` field value. 

          In addition, it can also read the `"catalog_object_type": "ITEM"`
          field value that is set by the Square Restaurants app.
        validation:
          maxLength: 14
      state:
        type: optional<InventoryState>
        docs: |-
          The current [inventory state](entity:InventoryState) for the related
          quantity of items.
          See [InventoryState](#type-inventorystate) for possible values
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-generated ID of the [Location](entity:Location) where the
          related

          quantity of items is being tracked.
        validation:
          maxLength: 100
      quantity:
        type: optional<nullable<string>>
        docs: >-
          The number of items affected by the physical count as a decimal
          string.

          The number can support up to 5 digits after the decimal point.
        validation:
          maxLength: 26
      source:
        type: optional<SourceApplication>
        docs: |-
          Information about the application with which the
          physical count is submitted.
      employee_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-generated ID of the [Employee](entity:Employee) responsible
          for the

          physical count.
        validation:
          maxLength: 100
      team_member_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-generated ID of the [Team Member](entity:TeamMember)
          responsible for the

          physical count.
        validation:
          maxLength: 100
      occurred_at:
        type: optional<nullable<string>>
        docs: >-
          A client-generated RFC 3339-formatted timestamp that indicates when

          the physical count was examined. For physical count updates, the
          `occurred_at`

          timestamp cannot be older than 24 hours or in the future relative to
          the

          time of the request.
        validation:
          maxLength: 34
      created_at:
        type: optional<string>
        docs: >-
          An RFC 3339-formatted timestamp that indicates when the physical count
          is received.
        validation:
          maxLength: 34
        access: read-only
    source:
      openapi: openapi/openapi.json
  InventoryState:
    enum:
      - CUSTOM
      - IN_STOCK
      - SOLD
      - RETURNED_BY_CUSTOMER
      - RESERVED_FOR_SALE
      - SOLD_ONLINE
      - ORDERED_FROM_VENDOR
      - RECEIVED_FROM_VENDOR
      - IN_TRANSIT_TO
      - NONE
      - WASTE
      - UNLINKED_RETURN
      - COMPOSED
      - DECOMPOSED
      - SUPPORTED_BY_NEWER_VERSION
      - IN_TRANSIT
    docs: Indicates the state of a tracked item quantity in the lifecycle of goods.
    source:
      openapi: openapi/openapi.json
  InventoryTransfer:
    docs: |-
      Represents the transfer of a quantity of product inventory at a
      particular time from one location to another.
    properties:
      id:
        type: optional<string>
        docs: |-
          A unique ID generated by Square for the
          `InventoryTransfer`.
        validation:
          maxLength: 100
      reference_id:
        type: optional<nullable<string>>
        docs: |-
          An optional ID provided by the application to tie the
          `InventoryTransfer` to an external system.
        validation:
          maxLength: 255
      state:
        type: optional<InventoryState>
        docs: |-
          The [inventory state](entity:InventoryState) for the quantity of
          items being transferred.
          See [InventoryState](#type-inventorystate) for possible values
      from_location_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-generated ID of the [Location](entity:Location) where the
          related

          quantity of items was tracked before the transfer.
        validation:
          maxLength: 100
      to_location_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-generated ID of the [Location](entity:Location) where the
          related

          quantity of items was tracked after the transfer.
        validation:
          maxLength: 100
      catalog_object_id:
        type: optional<nullable<string>>
        docs: |-
          The Square-generated ID of the
          [CatalogObject](entity:CatalogObject) being tracked.
        validation:
          maxLength: 100
      catalog_object_type:
        type: optional<nullable<string>>
        docs: >-
          The [type](entity:CatalogObjectType) of the
          [CatalogObject](entity:CatalogObject) being tracked. 


          The Inventory API supports setting and reading the
          `"catalog_object_type": "ITEM_VARIATION"` field value. 

          In addition, it can also read the `"catalog_object_type": "ITEM"`
          field value that is set by the Square Restaurants app.
        validation:
          maxLength: 14
      quantity:
        type: optional<nullable<string>>
        docs: |-
          The number of items affected by the transfer as a decimal string.
          Can support up to 5 digits after the decimal point.
        validation:
          maxLength: 26
      occurred_at:
        type: optional<nullable<string>>
        docs: >-
          A client-generated RFC 3339-formatted timestamp that indicates when

          the transfer took place. For write actions, the `occurred_at`
          timestamp

          cannot be older than 24 hours or in the future relative to the time of
          the

          request.
        validation:
          maxLength: 34
      created_at:
        type: optional<string>
        docs: |-
          An RFC 3339-formatted timestamp that indicates when Square
          received the transfer request.
        validation:
          maxLength: 34
        access: read-only
      source:
        type: optional<SourceApplication>
        docs: |-
          Information about the application that initiated the
          inventory transfer.
      employee_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-generated ID of the [Employee](entity:Employee) responsible
          for the

          inventory transfer.
        validation:
          maxLength: 100
      team_member_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-generated ID of the [Team Member](entity:TeamMember)
          responsible for the

          inventory transfer.
        validation:
          maxLength: 100
    source:
      openapi: openapi/openapi.json
  Invoice:
    docs: >-
      Stores information about an invoice. You use the Invoices API to create
      and manage

      invoices. For more information, see [Invoices API
      Overview](https://developer.squareup.com/docs/invoices-api/overview).
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the invoice.
        access: read-only
      version:
        type: optional<integer>
        docs: >-
          The Square-assigned version number, which is incremented each time an
          update is committed to the invoice.
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the location that this invoice is associated with. 


          If specified in a `CreateInvoice` request, the value must match the
          `location_id` of the associated order.
        validation:
          minLength: 1
          maxLength: 255
      order_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the [order](entity:Order) for which the invoice is created. 

          This field is required when creating an invoice, and the order must be
          in the `OPEN` state.


          To view the line items and other information for the associated order,
          call the 

          [RetrieveOrder](api-endpoint:Orders-RetrieveOrder) endpoint using the
          order ID.
        validation:
          minLength: 1
          maxLength: 255
      primary_recipient:
        type: optional<InvoiceRecipient>
        docs: >-
          The customer who receives the invoice. This customer data is displayed
          on the invoice and used by Square to deliver the invoice. 


          This field is required to publish an invoice, and it must specify the
          `customer_id`.
      payment_requests:
        type: optional<nullable<list<InvoicePaymentRequest>>>
        docs: >-
          The payment schedule for the invoice, represented by one or more
          payment requests that

          define payment settings, such as amount due and due date. An invoice
          supports the following payment request combinations:

          - One balance

          - One deposit with one balance

          - 2–12 installments 

          - One deposit with 2–12 installments


          This field is required when creating an invoice. It must contain at
          least one payment request. 

          All payment requests for the invoice must equal the total order
          amount. For more information, see 

          [Configuring payment
          requests](https://developer.squareup.com/docs/invoices-api/create-publish-invoices#payment-requests).


          Adding `INSTALLMENT` payment requests to an invoice requires an 

          [Invoices Plus
          subscription](https://developer.squareup.com/docs/invoices-api/overview#invoices-plus-subscription).
      delivery_method:
        type: optional<InvoiceDeliveryMethod>
        docs: >-
          The delivery method that Square uses to send the invoice, reminders,
          and receipts to

          the customer. After the invoice is published, Square processes the
          invoice based on the delivery

          method and payment request settings, either immediately or on the
          `scheduled_at` date, if specified.

          For example, Square might send the invoice or receipt for an automatic
          payment. For invoices with

          automatic payments, this field must be set to `EMAIL`.


          One of the following is required when creating an invoice:

          - (Recommended) This `delivery_method` field. To configure an
          automatic payment, the

          `automatic_payment_source` field of the payment request is also
          required.

          - The deprecated `request_method` field of the payment request. Note
          that `invoice`

          objects returned in responses do not include `request_method`.

          See [InvoiceDeliveryMethod](#type-invoicedeliverymethod) for possible
          values
      invoice_number:
        type: optional<nullable<string>>
        docs: >-
          A user-friendly invoice number that is displayed on the invoice. The
          value is unique within a location.

          If not provided when creating an invoice, Square assigns a value.

          It increments from 1 and is padded with zeros making it 7 characters
          long

          (for example, 0000001 and 0000002).
        validation:
          minLength: 1
          maxLength: 191
      title:
        type: optional<nullable<string>>
        docs: The title of the invoice, which is displayed on the invoice.
        validation:
          minLength: 1
          maxLength: 255
      description:
        type: optional<nullable<string>>
        docs: The description of the invoice, which is displayed on the invoice.
        validation:
          minLength: 1
          maxLength: 65536
      scheduled_at:
        type: optional<nullable<string>>
        docs: >-
          The timestamp when the invoice is scheduled for processing, in RFC
          3339 format.

          After the invoice is published, Square processes the invoice on the
          specified date,

          according to the delivery method and payment request settings.


          If the field is not set, Square processes the invoice immediately
          after it is published.
      public_url:
        type: optional<string>
        docs: >-
          A temporary link to the Square-hosted payment page where the customer
          can pay the

          invoice. If the link expires, customers can provide the email address
          or phone number

          associated with the invoice and request a new link directly from the
          expired payment page. 


          This field is added after the invoice is published and reaches the
          scheduled date

          (if one is defined).
        access: read-only
      next_payment_amount_money:
        type: optional<Money>
        docs: >-
          The current amount due for the invoice. In addition to the

          amount due on the next payment request, this includes any overdue
          payment amounts.
      status:
        type: optional<InvoiceStatus>
        docs: |-
          The status of the invoice.
          See [InvoiceStatus](#type-invoicestatus) for possible values
      timezone:
        type: optional<string>
        docs: >-
          The time zone used to interpret calendar dates on the invoice, such as
          `due_date`.

          When an invoice is created, this field is set to the `timezone`
          specified for the seller

          location. The value cannot be changed.


          For example, a payment `due_date` of 2021-03-09 with a `timezone` of
          America/Los\_Angeles

          becomes overdue at midnight on March 9 in America/Los\_Angeles (which
          equals a UTC timestamp

          of 2021-03-10T08:00:00Z).
        access: read-only
      created_at:
        type: optional<string>
        docs: The timestamp when the invoice was created, in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: The timestamp when the invoice was last updated, in RFC 3339 format.
        access: read-only
      accepted_payment_methods:
        type: optional<InvoiceAcceptedPaymentMethods>
        docs: >-
          The payment methods that customers can use to pay the invoice on the
          Square-hosted

          invoice page. This setting is independent of any automatic payment
          requests for the invoice.


          This field is required when creating an invoice and must set at least
          one payment method to `true`.
      custom_fields:
        type: optional<nullable<list<InvoiceCustomField>>>
        docs: >-
          Additional seller-defined fields that are displayed on the invoice.
          For more information, see

          [Custom
          fields](https://developer.squareup.com/docs/invoices-api/overview#custom-fields).


          Adding custom fields to an invoice requires an 

          [Invoices Plus
          subscription](https://developer.squareup.com/docs/invoices-api/overview#invoices-plus-subscription).


          Max: 2 custom fields
      subscription_id:
        type: optional<string>
        docs: >-
          The ID of the [subscription](entity:Subscription) associated with the
          invoice.

          This field is present only on subscription billing invoices.
        access: read-only
      sale_or_service_date:
        type: optional<nullable<string>>
        docs: >-
          The date of the sale or the date that the service is rendered, in
          `YYYY-MM-DD` format.

          This field can be used to specify a past or future date which is
          displayed on the invoice.
      payment_conditions:
        type: optional<nullable<string>>
        docs: >-
          **France only.** The payment terms and conditions that are displayed
          on the invoice. For more information, 

          see [Payment
          conditions](https://developer.squareup.com/docs/invoices-api/overview#payment-conditions).


          For countries other than France, Square returns an
          `INVALID_REQUEST_ERROR` with a `BAD_REQUEST` code and 

          "Payment conditions are not supported for this location's country"
          detail if this field is included in `CreateInvoice` or `UpdateInvoice`
          requests.
        validation:
          minLength: 1
          maxLength: 2000
      store_payment_method_enabled:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether to allow a customer to save a credit or debit card
          as a card on file or a bank transfer as a

          bank account on file. If `true`, Square displays a __Save my card on
          file__ or __Save my bank on file__ checkbox on the

          invoice payment page. Stored payment information can be used for
          future automatic payments. The default value is `false`.
      attachments:
        type: optional<list<InvoiceAttachment>>
        docs: >-
          Metadata about the attachments on the invoice. Invoice attachments are
          managed using the

          [CreateInvoiceAttachment](api-endpoint:Invoices-CreateInvoiceAttachment)
          and
          [DeleteInvoiceAttachment](api-endpoint:Invoices-DeleteInvoiceAttachment)
          endpoints.
        access: read-only
      creator_team_member_id:
        type: optional<string>
        docs: >-
          The ID of the [team member](entity:TeamMember) who created the
          invoice.

          This field is present only on invoices created in the Square Dashboard
          or Square Invoices app by a logged-in team member.
        access: read-only
    source:
      openapi: openapi/openapi.json
  InvoiceAcceptedPaymentMethods:
    docs: >-
      The payment methods that customers can use to pay an
      [invoice](entity:Invoice) on the Square-hosted invoice payment page.
    properties:
      card:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether credit card or debit card payments are accepted. The
          default value is `false`.
      square_gift_card:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether Square gift card payments are accepted. The default
          value is `false`.
      bank_account:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether ACH bank transfer payments are accepted. The default
          value is `false`.
      buy_now_pay_later:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether Afterpay (also known as Clearpay) payments are
          accepted. The default value is `false`.


          This option is allowed only for invoices that have a single payment
          request of the `BALANCE` type. This payment method is

          supported if the seller account accepts Afterpay payments and the
          seller location is in a country where Afterpay

          invoice payments are supported. As a best practice, consider enabling
          an additional payment method when allowing

          `buy_now_pay_later` payments. For more information, including detailed
          requirements and processing limits, see

          [Buy Now Pay Later payments with
          Afterpay](https://developer.squareup.com/docs/invoices-api/overview#buy-now-pay-later).
      cash_app_pay:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether Cash App payments are accepted. The default value is
          `false`.


          This payment method is supported only for seller
          [locations](entity:Location) in the United States.
    source:
      openapi: openapi/openapi.json
  InvoiceAttachment:
    docs: Represents a file attached to an [invoice](entity:Invoice).
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the attachment.
        access: read-only
      filename:
        type: optional<string>
        docs: The file name of the attachment, which is displayed on the invoice.
        access: read-only
      description:
        type: optional<string>
        docs: |-
          The description of the attachment, which is displayed on the invoice.
          This field maps to the seller-defined **Message** field.
        access: read-only
      filesize:
        type: optional<integer>
        docs: The file size of the attachment in bytes.
        access: read-only
      hash:
        type: optional<string>
        docs: The MD5 hash that was generated from the file contents.
        access: read-only
      mime_type:
        type: optional<string>
        docs: >-
          The mime type of the attachment.

          The following mime types are supported: 

          image/gif, image/jpeg, image/png, image/tiff, image/bmp,
          application/pdf.
        access: read-only
      uploaded_at:
        type: optional<string>
        docs: The timestamp when the attachment was uploaded, in RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  InvoiceAutomaticPaymentSource:
    enum:
      - NONE
      - CARD_ON_FILE
      - BANK_ON_FILE
    docs: >-
      Indicates the automatic payment method for an [invoice payment
      request](entity:InvoicePaymentRequest).
    source:
      openapi: openapi/openapi.json
  InvoiceCanceledEvent:
    docs: Published when an [Invoice](entity:Invoice) is canceled.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"invoice.canceled"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<InvoiceCanceledEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  InvoiceCanceledEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"invoice"`.
      id:
        type: optional<string>
        docs: ID of the affected invoice.
      object:
        type: optional<InvoiceCanceledEventObject>
        docs: An object containing the canceled invoice.
    source:
      openapi: openapi/openapi.json
  InvoiceCanceledEventObject:
    properties:
      invoice:
        type: optional<Invoice>
        docs: The related invoice.
    source:
      openapi: openapi/openapi.json
  InvoiceCreatedEvent:
    docs: Published when an [Invoice](entity:Invoice) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"invoice.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<InvoiceCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  InvoiceCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"invoice"`.
      id:
        type: optional<string>
        docs: ID of the affected invoice.
      object:
        type: optional<InvoiceCreatedEventObject>
        docs: An object containing the created invoice.
    source:
      openapi: openapi/openapi.json
  InvoiceCreatedEventObject:
    properties:
      invoice:
        type: optional<Invoice>
        docs: The related invoice.
    source:
      openapi: openapi/openapi.json
  InvoiceCustomField:
    docs: >-
      An additional seller-defined and customer-facing field to include on the
      invoice. For more information, 

      see [Custom
      fields](https://developer.squareup.com/docs/invoices-api/overview#custom-fields).


      Adding custom fields to an invoice requires an 

      [Invoices Plus
      subscription](https://developer.squareup.com/docs/invoices-api/overview#invoices-plus-subscription).
    properties:
      label:
        type: optional<nullable<string>>
        docs: >-
          The label or title of the custom field. This field is required for a
          custom field.
        validation:
          maxLength: 30
      value:
        type: optional<nullable<string>>
        docs: The text of the custom field. If omitted, only the label is rendered.
        validation:
          maxLength: 2000
      placement:
        type: optional<InvoiceCustomFieldPlacement>
        docs: >-
          The location of the custom field on the invoice. This field is
          required for a custom field.

          See [InvoiceCustomFieldPlacement](#type-invoicecustomfieldplacement)
          for possible values
    source:
      openapi: openapi/openapi.json
  InvoiceCustomFieldPlacement:
    enum:
      - ABOVE_LINE_ITEMS
      - BELOW_LINE_ITEMS
    docs: >-
      Indicates where to render a custom field on the Square-hosted invoice page
      and in emailed or PDF 

      copies of the invoice.
    source:
      openapi: openapi/openapi.json
  InvoiceDeletedEvent:
    docs: Published when a draft [Invoice](entity:Invoice) is deleted.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"invoice.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<InvoiceDeletedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  InvoiceDeletedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"invoice"`.
      id:
        type: optional<string>
        docs: ID of the affected invoice.
      deleted:
        type: optional<nullable<boolean>>
        docs: Indicates that the invoice was deleted.
    source:
      openapi: openapi/openapi.json
  InvoiceDeliveryMethod:
    enum:
      - EMAIL
      - SHARE_MANUALLY
      - SMS
    docs: >-
      Indicates how Square delivers the [invoice](entity:Invoice) to the
      customer.
    source:
      openapi: openapi/openapi.json
  InvoiceFilter:
    docs: Describes query filters to apply.
    properties:
      location_ids:
        docs: |-
          Limits the search to the specified locations. A location is required. 
          In the current implementation, only one location can be specified.
        type: list<string>
      customer_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          Limits the search to the specified customers, within the specified
          locations. 

          Specifying a customer is optional. In the current implementation, 

          a maximum of one customer can be specified.
    source:
      openapi: openapi/openapi.json
  InvoicePaymentMadeEvent:
    docs: >-
      Published when a payment that is associated with an
      [invoice](entity:Invoice) is completed.

      For more information about invoice payments, see [Pay an
      invoice](https://developer.squareup.com/docs/invoices-api/pay-refund-invoices#pay-invoice).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"invoice.payment_made"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<InvoicePaymentMadeEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  InvoicePaymentMadeEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"invoice"`.
      id:
        type: optional<string>
        docs: ID of the affected invoice.
      object:
        type: optional<InvoicePaymentMadeEventObject>
        docs: An object containing the invoice that was paid.
    source:
      openapi: openapi/openapi.json
  InvoicePaymentMadeEventObject:
    properties:
      invoice:
        type: optional<Invoice>
        docs: The related invoice.
    source:
      openapi: openapi/openapi.json
  InvoicePaymentReminder:
    docs: >-
      Describes a payment request reminder (automatic notification) that Square
      sends

      to the customer. You configure a reminder relative to the payment request

      `due_date`.
    properties:
      uid:
        type: optional<string>
        docs: |-
          A Square-assigned ID that uniquely identifies the reminder within the
          `InvoicePaymentRequest`.
        access: read-only
      relative_scheduled_days:
        type: optional<nullable<integer>>
        docs: >-
          The number of days before (a negative number) or after (a positive
          number)

          the payment request `due_date` when the reminder is sent. For example,
          -3 indicates that

          the reminder should be sent 3 days before the payment request
          `due_date`.
        validation:
          min: -32767
          max: 32767
      message:
        type: optional<nullable<string>>
        docs: The reminder message.
        validation:
          minLength: 1
          maxLength: 1000
      status:
        type: optional<InvoicePaymentReminderStatus>
        docs: >-
          The status of the reminder.

          See [InvoicePaymentReminderStatus](#type-invoicepaymentreminderstatus)
          for possible values
      sent_at:
        type: optional<string>
        docs: If sent, the timestamp when the reminder was sent, in RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  InvoicePaymentReminderStatus:
    enum:
      - PENDING
      - NOT_APPLICABLE
      - SENT
    docs: The status of a payment request reminder.
    source:
      openapi: openapi/openapi.json
  InvoicePaymentRequest:
    docs: >-
      Represents a payment request for an [invoice](entity:Invoice). Invoices
      can specify a maximum

      of 13 payment requests, with up to 12 `INSTALLMENT` request types. For
      more information, 

      see [Configuring payment
      requests](https://developer.squareup.com/docs/invoices-api/create-publish-invoices#payment-requests).


      Adding `INSTALLMENT` payment requests to an invoice requires an 

      [Invoices Plus
      subscription](https://developer.squareup.com/docs/invoices-api/overview#invoices-plus-subscription).
    properties:
      uid:
        type: optional<nullable<string>>
        docs: >-
          The Square-generated ID of the payment request in an
          [invoice](entity:Invoice).
        validation:
          minLength: 1
          maxLength: 255
      request_method:
        type: optional<InvoiceRequestMethod>
        docs: >-
          Indicates how Square processes the payment request. DEPRECATED at
          version 2021-01-21. Replaced by the

          `Invoice.delivery_method` and
          `InvoicePaymentRequest.automatic_payment_source` fields.


          One of the following is required when creating an invoice:

          - (Recommended) The `delivery_method` field of the invoice. To
          configure an automatic payment, the

          `automatic_payment_source` field of the payment request is also
          required.

          - This `request_method` field. Note that `invoice` objects returned in
          responses do not include `request_method`.

          See [InvoiceRequestMethod](#type-invoicerequestmethod) for possible
          values
      request_type:
        type: optional<InvoiceRequestType>
        docs: >-
          Identifies the payment request type. This type defines how the payment
          request amount is determined. 

          This field is required to create a payment request.

          See [InvoiceRequestType](#type-invoicerequesttype) for possible values
      due_date:
        type: optional<nullable<string>>
        docs: >-
          The due date (in the invoice's time zone) for the payment request, in
          `YYYY-MM-DD` format. This field

          is required to create a payment request. If an
          `automatic_payment_source` is defined for the request, Square

          charges the payment source on this date.


          After this date, the invoice becomes overdue. For example, a payment
          `due_date` of 2021-03-09 with a `timezone`

          of America/Los\_Angeles becomes overdue at midnight on March 9 in
          America/Los\_Angeles (which equals a UTC

          timestamp of 2021-03-10T08:00:00Z).
      fixed_amount_requested_money:
        type: optional<Money>
        docs: >-
          If the payment request specifies `DEPOSIT` or `INSTALLMENT` as the
          `request_type`, 

          this indicates the request amount.

          You cannot specify this when `request_type` is `BALANCE` or when the 

          payment request includes the `percentage_requested` field.
      percentage_requested:
        type: optional<nullable<string>>
        docs: >-
          Specifies the amount for the payment request in percentage:


          - When the payment `request_type` is `DEPOSIT`, it is the percentage
          of the order's total amount.

          - When the payment `request_type` is `INSTALLMENT`, it is the
          percentage of the order's total less 

          the deposit, if requested. The sum of the `percentage_requested` in
          all installment 

          payment requests must be equal to 100.


          You cannot specify this when the payment `request_type` is `BALANCE`
          or when the 

          payment request specifies the `fixed_amount_requested_money` field.
      tipping_enabled:
        type: optional<nullable<boolean>>
        docs: >-
          If set to true, the Square-hosted invoice page (the `public_url` field
          of the invoice) 

          provides a place for the customer to pay a tip. 


          This field is allowed only on the final payment request  

          and the payment `request_type` must be `BALANCE` or `INSTALLMENT`.
      automatic_payment_source:
        type: optional<InvoiceAutomaticPaymentSource>
        docs: >-
          The payment method for an automatic payment.


          The default value is `NONE`.

          See
          [InvoiceAutomaticPaymentSource](#type-invoiceautomaticpaymentsource)
          for possible values
      card_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the credit or debit card on file to charge for the payment
          request. To get the cards on file for a customer,

          call [ListCards](api-endpoint:Cards-ListCards) and include the
          `customer_id` of the invoice recipient.
        validation:
          minLength: 1
          maxLength: 255
      reminders:
        type: optional<nullable<list<InvoicePaymentReminder>>>
        docs: A list of one or more reminders to send for the payment request.
      computed_amount_money:
        type: optional<Money>
        docs: >-
          The amount of the payment request, computed using the order amount and
          information from the various payment

          request fields (`request_type`, `fixed_amount_requested_money`, and
          `percentage_requested`).
      total_completed_amount_money:
        type: optional<Money>
        docs: >-
          The amount of money already paid for the specific payment request. 

          This amount might include a rounding adjustment if the most recent
          invoice payment 

          was in cash in a currency that rounds cash payments (such as, `CAD` or
          `AUD`).
      rounding_adjustment_included_money:
        type: optional<Money>
        docs: >-
          If the most recent payment was a cash payment 

          in a currency that rounds cash payments (such as, `CAD` or `AUD`) and
          the payment 

          is rounded from `computed_amount_money` in the payment request, then
          this 

          field specifies the rounding adjustment applied. This amount 

          might be negative.
    source:
      openapi: openapi/openapi.json
  InvoicePublishedEvent:
    docs: >-
      Published when an [Invoice](entity:Invoice) transitions from a draft to a
      non-draft status.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"invoice.published"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<InvoicePublishedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  InvoicePublishedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"invoice"`.
      id:
        type: optional<string>
        docs: ID of the affected invoice.
      object:
        type: optional<InvoicePublishedEventObject>
        docs: An object containing the published invoice.
    source:
      openapi: openapi/openapi.json
  InvoicePublishedEventObject:
    properties:
      invoice:
        type: optional<Invoice>
        docs: The related invoice.
    source:
      openapi: openapi/openapi.json
  InvoiceQuery:
    docs: Describes query criteria for searching invoices.
    properties:
      filter:
        type: InvoiceFilter
        docs: >-
          Query filters to apply in searching invoices. 

          For more information, see [Search for
          invoices](https://developer.squareup.com/docs/invoices-api/retrieve-list-search-invoices#search-invoices).
      sort:
        type: optional<InvoiceSort>
        docs: Describes the sort order for the search result.
    source:
      openapi: openapi/openapi.json
  InvoiceRecipient:
    docs: >-
      Represents a snapshot of customer data. This object stores customer data
      that is displayed on the invoice 

      and that Square uses to deliver the invoice.


      When you provide a customer ID for a draft invoice, Square retrieves the
      associated customer profile and populates 

      the remaining `InvoiceRecipient` fields. You cannot update these fields
      after the invoice is published. 

      Square updates the customer ID in response to a merge operation, but does
      not update other fields.
    properties:
      customer_id:
        type: optional<nullable<string>>
        docs: |-
          The ID of the customer. This is the customer profile ID that 
          you provide when creating a draft invoice.
        validation:
          minLength: 1
          maxLength: 255
      given_name:
        type: optional<string>
        docs: The recipient's given (that is, first) name.
        access: read-only
      family_name:
        type: optional<string>
        docs: The recipient's family (that is, last) name.
        access: read-only
      email_address:
        type: optional<string>
        docs: The recipient's email address.
        access: read-only
      address:
        type: optional<Address>
        docs: The recipient's physical address.
      phone_number:
        type: optional<string>
        docs: The recipient's phone number.
        access: read-only
      company_name:
        type: optional<string>
        docs: The name of the recipient's company.
        access: read-only
      tax_ids:
        type: optional<InvoiceRecipientTaxIds>
        docs: >-
          The recipient's tax IDs. The country of the seller account determines
          whether this field 

          is available for the customer. For more information, see [Invoice
          recipient tax
          IDs](https://developer.squareup.com/docs/invoices-api/overview#recipient-tax-ids).
    source:
      openapi: openapi/openapi.json
  InvoiceRecipientTaxIds:
    docs: >-
      Represents the tax IDs for an invoice recipient. The country of the seller
      account determines 

      whether the corresponding `tax_ids` field is available for the customer.
      For more information, 

      see [Invoice recipient tax
      IDs](https://developer.squareup.com/docs/invoices-api/overview#recipient-tax-ids).
    properties:
      eu_vat:
        type: optional<string>
        docs: >-
          The EU VAT identification number for the invoice recipient. For
          example, `IE3426675K`.
        access: read-only
    source:
      openapi: openapi/openapi.json
  InvoiceRefundedEvent:
    docs: >-
      Published when a refund is applied toward a payment of an
      [invoice](entity:Invoice). 

      For more information about invoice refunds, see [Refund an
      invoice](https://developer.squareup.com/docs/invoices-api/pay-refund-invoices#refund-invoice).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"invoice.refunded"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<InvoiceRefundedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  InvoiceRefundedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"invoice"`.
      id:
        type: optional<string>
        docs: ID of the affected invoice.
      object:
        type: optional<InvoiceRefundedEventObject>
        docs: An object containing the refunded invoice.
    source:
      openapi: openapi/openapi.json
  InvoiceRefundedEventObject:
    properties:
      invoice:
        type: optional<Invoice>
        docs: The related invoice.
    source:
      openapi: openapi/openapi.json
  InvoiceRequestMethod:
    enum:
      - EMAIL
      - CHARGE_CARD_ON_FILE
      - SHARE_MANUALLY
      - CHARGE_BANK_ON_FILE
      - SMS
      - SMS_CHARGE_CARD_ON_FILE
      - SMS_CHARGE_BANK_ON_FILE
    docs: >-
      Specifies the action for Square to take for processing the invoice. For
      example, 

      email the invoice, charge a customer's card on file, or do nothing.
      DEPRECATED at

      version 2021-01-21. The corresponding `request_method` field is replaced
      by the

      `Invoice.delivery_method` and
      `InvoicePaymentRequest.automatic_payment_source` fields.
    source:
      openapi: openapi/openapi.json
  InvoiceRequestType:
    enum:
      - BALANCE
      - DEPOSIT
      - INSTALLMENT
    docs: >-
      Indicates the type of the payment request. For more information, see 

      [Configuring payment
      requests](https://developer.squareup.com/docs/invoices-api/create-publish-invoices#payment-requests).
    source:
      openapi: openapi/openapi.json
  InvoiceScheduledChargeFailedEvent:
    docs: >-
      Published when an automatic scheduled payment for an
      [Invoice](entity:Invoice) has failed.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event this represents,
          `"invoice.scheduled_charge_failed"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<InvoiceScheduledChargeFailedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  InvoiceScheduledChargeFailedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"invoice"`.
      id:
        type: optional<string>
        docs: ID of the affected invoice.
      object:
        type: optional<InvoiceScheduledChargeFailedEventObject>
        docs: >-
          An object containing the invoice that experienced the failed scheduled
          charge.
    source:
      openapi: openapi/openapi.json
  InvoiceScheduledChargeFailedEventObject:
    properties:
      invoice:
        type: optional<Invoice>
        docs: The related invoice.
    source:
      openapi: openapi/openapi.json
  InvoiceSort:
    docs: Identifies the sort field and sort order.
    properties:
      field:
        type: InvoiceSortField
        docs: |-
          The field to use for sorting.
          See [InvoiceSortField](#type-invoicesortfield) for possible values
      order:
        type: optional<SortOrder>
        docs: |-
          The order to use for sorting the results.
          See [SortOrder](#type-sortorder) for possible values
    source:
      openapi: openapi/openapi.json
  InvoiceSortField:
    type: literal<"INVOICE_SORT_DATE">
    docs: The field to use for sorting.
  InvoiceStatus:
    enum:
      - DRAFT
      - UNPAID
      - SCHEDULED
      - PARTIALLY_PAID
      - PAID
      - PARTIALLY_REFUNDED
      - REFUNDED
      - CANCELED
      - FAILED
      - PAYMENT_PENDING
    docs: Indicates the status of an [invoice](entity:Invoice).
    source:
      openapi: openapi/openapi.json
  InvoiceUpdatedEvent:
    docs: Published when an [Invoice](entity:Invoice) is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"invoice.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<InvoiceUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  InvoiceUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"invoice"`.
      id:
        type: optional<string>
        docs: ID of the affected invoice.
      object:
        type: optional<InvoiceUpdatedEventObject>
        docs: An object containing the updated invoice.
    source:
      openapi: openapi/openapi.json
  InvoiceUpdatedEventObject:
    properties:
      invoice:
        type: optional<Invoice>
        docs: The related invoice.
    source:
      openapi: openapi/openapi.json
  ItemVariationLocationOverrides:
    docs: >-
      Price and inventory alerting overrides for a `CatalogItemVariation` at a
      specific `Location`.
    properties:
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the `Location`. This can include locations that are
          deactivated.
      price_money:
        type: optional<Money>
        docs: >-
          The price of the `CatalogItemVariation` at the given `Location`, or
          blank for variable pricing.
      pricing_type:
        type: optional<CatalogPricingType>
        docs: >-
          The pricing type (fixed or variable) for the `CatalogItemVariation` at
          the given `Location`.

          See [CatalogPricingType](#type-catalogpricingtype) for possible values
      track_inventory:
        type: optional<nullable<boolean>>
        docs: >-
          If `true`, inventory tracking is active for the `CatalogItemVariation`
          at this `Location`.
      inventory_alert_type:
        type: optional<InventoryAlertType>
        docs: >-
          Indicates whether the `CatalogItemVariation` displays an alert when
          its inventory

          quantity is less than or equal to its `inventory_alert_threshold`.

          See [InventoryAlertType](#type-inventoryalerttype) for possible values
      inventory_alert_threshold:
        type: optional<nullable<long>>
        docs: >-
          If the inventory quantity for the variation is less than or equal to
          this value and `inventory_alert_type`

          is `LOW_QUANTITY`, the variation displays an alert in the merchant
          dashboard.


          This value is always an integer.
      sold_out:
        type: optional<boolean>
        docs: >-
          Indicates whether the overridden item variation is sold out at the
          specified location.


          When inventory tracking is enabled on the item variation either
          globally or at the specified location,

          the item variation is automatically marked as sold out when its
          inventory count reaches zero. The seller

          can manually set the item variation as sold out even when the
          inventory count is greater than zero.

          Attempts by an application to set this attribute are ignored.
          Regardless how the sold-out status is set,

          applications should treat its inventory count as zero when this
          attribute value is `true`.
        access: read-only
      sold_out_valid_until:
        type: optional<string>
        docs: >-
          The seller-assigned timestamp, of the RFC 3339 format, to indicate
          when this sold-out variation

          becomes available again at the specified location. Attempts by an
          application to set this attribute are ignored.

          When the current time is later than this attribute value, the affected
          item variation is no longer sold out.
        access: read-only
    source:
      openapi: openapi/openapi.json
  Job:
    docs: >-
      Represents a job that can be assigned to [team
      members](entity:TeamMember). This object defines the

      job's title and tip eligibility. Compensation is defined in a [job
      assignment](entity:JobAssignment)

      in a team member's wage setting.
    properties:
      id:
        type: optional<string>
        docs: >-
          **Read only** The unique Square-assigned ID of the job. If you need a
          job ID for an API request,

          call [ListJobs](api-endpoint:Team-ListJobs) or use the ID returned
          when you created the job.

          You can also get job IDs from a team member's wage setting.
      title:
        type: optional<nullable<string>>
        docs: The title of the job.
        validation:
          maxLength: 150
      is_tip_eligible:
        type: optional<nullable<boolean>>
        docs: Indicates whether team members can earn tips for the job.
      created_at:
        type: optional<string>
        docs: The timestamp when the job was created, in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: The timestamp when the job was last updated, in RFC 3339 format.
        access: read-only
      version:
        type: optional<integer>
        docs: >-
          **Read only** The current version of the job. Include this field in
          `UpdateJob` requests to enable

          [optimistic
          concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency)

          control and avoid overwrites from concurrent requests. Requests fail
          if the provided version doesn't

          match the server version at the time of the request.
    source:
      openapi: openapi/openapi.json
  JobAssignment:
    docs: >-
      Represents a job assigned to a [team member](entity:TeamMember), including
      the compensation the team

      member earns for the job. Job assignments are listed in the team member's
      [wage setting](entity:WageSetting).
    properties:
      job_title:
        type: optional<nullable<string>>
        docs: The title of the job.
      pay_type:
        type: JobAssignmentPayType
        docs: >-
          The current pay type for the job assignment used to

          calculate the pay amount in a pay period.

          See [JobAssignmentPayType](#type-jobassignmentpaytype) for possible
          values
      hourly_rate:
        type: optional<Money>
        docs: >-
          The hourly pay rate of the job. For `SALARY` pay types, Square
          calculates the hourly rate based on

          `annual_rate` and `weekly_hours`.
      annual_rate:
        type: optional<Money>
        docs: >-
          The total pay amount for a 12-month period on the job. Set if the job
          `PayType` is `SALARY`.
      weekly_hours:
        type: optional<nullable<integer>>
        docs: >-
          The planned hours per week for the job. Set if the job `PayType` is
          `SALARY`.
      job_id:
        type: optional<nullable<string>>
        docs: The ID of the [job](entity:Job).
    source:
      openapi: openapi/openapi.json
  JobAssignmentPayType:
    enum:
      - NONE
      - HOURLY
      - SALARY
    docs: Enumerates the possible pay types that a job can be assigned.
    source:
      openapi: openapi/openapi.json
  JobCreatedEvent:
    docs: Published when a Job is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"job.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<JobCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  JobCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"job"`.
      id:
        type: optional<string>
        docs: ID of the created job.
      object:
        type: optional<JobCreatedEventObject>
        docs: An object containing the created job.
    source:
      openapi: openapi/openapi.json
  JobCreatedEventObject:
    properties:
      job:
        type: optional<Job>
        docs: The created job.
    source:
      openapi: openapi/openapi.json
  JobUpdatedEvent:
    docs: Published when a Job is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"job.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<JobUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  JobUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"job"`.
      id:
        type: optional<string>
        docs: ID of the updated job.
      object:
        type: optional<JobUpdatedEventObject>
        docs: An object containing the updated job.
    source:
      openapi: openapi/openapi.json
  JobUpdatedEventObject:
    properties:
      job:
        type: optional<Job>
        docs: The updated job.
    source:
      openapi: openapi/openapi.json
  LaborScheduledShiftCreatedEvent:
    docs: Published when a [ScheduledShift](entity:ScheduledShift) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `labor.scheduled_shift.created`.
      event_id:
        type: optional<nullable<string>>
        docs: The unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LaborScheduledShiftCreatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LaborScheduledShiftCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `scheduled_shift`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the affected `ScheduledShift`.
        validation:
          maxLength: 255
      object:
        type: optional<LaborScheduledShiftCreatedEventObject>
        docs: An object containing the affected `ScheduledShift`.
    source:
      openapi: openapi/openapi.json
  LaborScheduledShiftCreatedEventObject:
    properties:
      ScheduledShift:
        type: optional<ScheduledShift>
        docs: The new `ScheduledShift`.
    source:
      openapi: openapi/openapi.json
  LaborScheduledShiftDeletedEvent:
    docs: Published when a [ScheduledShift](entity:ScheduledShift) is deleted.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `labor.scheduled_shift.deleted`.
      event_id:
        type: optional<nullable<string>>
        docs: The unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LaborScheduledShiftDeletedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LaborScheduledShiftDeletedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `scheduled_shift`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the affected `ScheduledShift`.
        validation:
          maxLength: 255
      deleted:
        type: optional<nullable<boolean>>
        docs: Is true if the affected object was deleted. Otherwise absent.
    source:
      openapi: openapi/openapi.json
  LaborScheduledShiftPublishedEvent:
    docs: Published when a [ScheduledShift](entity:ScheduledShift) is published.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `labor.scheduled_shift.published`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LaborScheduledShiftPublishedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LaborScheduledShiftPublishedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `scheduled_shift`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the affected `ScheduledShift`.
        validation:
          maxLength: 255
      object:
        type: optional<LaborScheduledShiftPublishedEventObject>
        docs: An object containing the affected `ScheduledShift`.
    source:
      openapi: openapi/openapi.json
  LaborScheduledShiftPublishedEventObject:
    properties:
      ScheduledShift:
        type: optional<ScheduledShift>
        docs: The published `ScheduledShift`.
    source:
      openapi: openapi/openapi.json
  LaborScheduledShiftUpdatedEvent:
    docs: Published when a [ScheduledShift](entity:ScheduledShift) is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `labor.scheduled_shift.updated`.
      event_id:
        type: optional<nullable<string>>
        docs: The unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LaborScheduledShiftUpdatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LaborScheduledShiftUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `scheduled_shift`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: The ID of the affected `ScheduledShift`.
        validation:
          maxLength: 255
      object:
        type: optional<LaborScheduledShiftUpdatedEventObject>
        docs: An object containing the affected `ScheduledShift`.
    source:
      openapi: openapi/openapi.json
  LaborScheduledShiftUpdatedEventObject:
    properties:
      ScheduledShift:
        type: optional<ScheduledShift>
        docs: The updated `ScheduledShift`.
    source:
      openapi: openapi/openapi.json
  LaborShiftCreatedEvent:
    docs: >-
      Published when a worker starts a [Shift](entity:Shift).


      Deprecated at Square API version 2025-05-21. Replaced by
      `labor.timecard.created`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event. For this event, the value is `labor.shift.created`.
      event_id:
        type: optional<nullable<string>>
        docs: The unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LaborShiftCreatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LaborShiftCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `shift`.
      id:
        type: optional<string>
        docs: The ID of the affected `Shift`.
      object:
        type: optional<LaborShiftCreatedEventObject>
        docs: An object containing the affected `Shift`.
    source:
      openapi: openapi/openapi.json
  LaborShiftCreatedEventObject:
    properties:
      shift:
        type: optional<Shift>
        docs: The new `Shift`.
    source:
      openapi: openapi/openapi.json
  LaborShiftDeletedEvent:
    docs: >-
      Published when a [Shift](entity:Shift) is deleted.


      Deprecated at Square API version 2025-05-21. Replaced by
      `labor.timecard.deleted`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event. For this event, the value is `labor.shift.deleted`.
      event_id:
        type: optional<nullable<string>>
        docs: The unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LaborShiftDeletedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LaborShiftDeletedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `shift`.
      id:
        type: optional<string>
        docs: The ID of the affected `Shift`.
      deleted:
        type: optional<nullable<boolean>>
        docs: Is true if the affected object was deleted. Otherwise absent.
    source:
      openapi: openapi/openapi.json
  LaborShiftUpdatedEvent:
    docs: >-
      Published when a [Shift](entity:Shift) is updated.


      Deprecated at Square API version 2025-05-21. Replaced by
      `labor.timecard.updated`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event. For this event, the value is `labor.shift.updated`.
      event_id:
        type: optional<nullable<string>>
        docs: The unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LaborShiftUpdatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LaborShiftUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `shift`.
      id:
        type: optional<string>
        docs: ID of the affected `Shift`.
      object:
        type: optional<LaborShiftUpdatedEventObject>
        docs: An object containing the affected `Shift`.
    source:
      openapi: openapi/openapi.json
  LaborShiftUpdatedEventObject:
    properties:
      shift:
        type: optional<Shift>
        docs: The updated `Shift`.
    source:
      openapi: openapi/openapi.json
  LaborTimecardCreatedEvent:
    docs: Published when a worker starts a [Timecard](entity:Timecard).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `labor.timecard.created`.
      event_id:
        type: optional<nullable<string>>
        docs: The unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LaborTimecardCreatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LaborTimecardCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `timecard`.
      id:
        type: optional<string>
        docs: The ID of the affected `Timecard`.
      object:
        type: optional<LaborTimecardCreatedEventObject>
        docs: An object containing the affected `Timecard`.
    source:
      openapi: openapi/openapi.json
  LaborTimecardCreatedEventObject:
    properties:
      timecard:
        type: optional<Timecard>
        docs: The new `Timecard`.
    source:
      openapi: openapi/openapi.json
  LaborTimecardDeletedEvent:
    docs: Published when a [Timecard](entity:Timecard) is deleted.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `labor.timecard.deleted`.
      event_id:
        type: optional<nullable<string>>
        docs: The unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LaborTimecardDeletedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LaborTimecardDeletedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `timecard`.
      id:
        type: optional<string>
        docs: The ID of the affected `Timecard`.
      deleted:
        type: optional<nullable<boolean>>
        docs: Is true if the affected object was deleted. Otherwise absent.
    source:
      openapi: openapi/openapi.json
  LaborTimecardUpdatedEvent:
    docs: Published when a [Timecard](entity:Timecard) is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `labor.timecard.updated`.
      event_id:
        type: optional<nullable<string>>
        docs: The unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LaborTimecardUpdatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LaborTimecardUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `timecard`.
      id:
        type: optional<string>
        docs: The ID of the affected `Timecard`.
      object:
        type: optional<LaborTimecardUpdatedEventObject>
        docs: An object containing the affected `Timecard`.
    source:
      openapi: openapi/openapi.json
  LaborTimecardUpdatedEventObject:
    properties:
      timecard:
        type: optional<Timecard>
        docs: The updated `Timecard`.
    source:
      openapi: openapi/openapi.json
  LinkCustomerToGiftCardResponse:
    docs: >-
      A response that contains the linked `GiftCard` object. If the request
      resulted in errors, 

      the response contains a set of `Error` objects.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      gift_card:
        type: optional<GiftCard>
        docs: >-
          The gift card with the ID of the linked customer listed in the
          `customer_ids` field.
    source:
      openapi: openapi/openapi.json
  ListBankAccountsResponse:
    docs: Response object returned by ListBankAccounts.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      bank_accounts:
        type: optional<list<BankAccount>>
        docs: List of BankAccounts associated with this account.
      cursor:
        type: optional<string>
        docs: >-
          When a response is truncated, it includes a cursor that you can 

          use in a subsequent request to fetch next set of bank accounts.

          If empty, this is the final response.


          For more information, see
          [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
    source:
      openapi: openapi/openapi.json
  ListBookingCustomAttributeDefinitionsResponse:
    docs: >-
      Represents a
      [ListBookingCustomAttributeDefinitions](api-endpoint:BookingCustomAttributes-ListBookingCustomAttributeDefinitions)
      response.

      Either `custom_attribute_definitions`, an empty object, or `errors` is
      present in the response.

      If additional results are available, the `cursor` field is also present
      along with `custom_attribute_definitions`.
    properties:
      custom_attribute_definitions:
        type: optional<list<CustomAttributeDefinition>>
        docs: >-
          The retrieved custom attribute definitions. If no custom attribute
          definitions are found,

          Square returns an empty object (`{}`).
      cursor:
        type: optional<string>
        docs: >-
          The cursor to provide in your next call to this endpoint to retrieve
          the next page of

          results for your original request. This field is present only if the
          request succeeded and

          additional results are available. For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListBookingCustomAttributesResponse:
    docs: >-
      Represents a
      [ListBookingCustomAttributes](api-endpoint:BookingCustomAttributes-ListBookingCustomAttributes)
      response.

      Either `custom_attributes`, an empty object, or `errors` is present in the
      response. If additional

      results are available, the `cursor` field is also present along with
      `custom_attributes`.
    properties:
      custom_attributes:
        type: optional<list<CustomAttribute>>
        docs: >-
          The retrieved custom attributes. If `with_definitions` was set to
          `true` in the request,

          the custom attribute definition is returned in the `definition` field
          of each custom attribute.


          If no custom attributes are found, Square returns an empty object
          (`{}`).
      cursor:
        type: optional<string>
        docs: >-
          The cursor to use in your next call to this endpoint to retrieve the
          next page of results

          for your original request. This field is present only if the request
          succeeded and additional

          results are available. For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListBookingsResponse:
    properties:
      bookings:
        type: optional<list<Booking>>
        docs: The list of targeted bookings.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in the subsequent request to get the
          next page of the results. Stop retrieving the next page of the results
          when the cursor is not set.
        validation:
          maxLength: 65536
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListBreakTypesResponse:
    docs: >-
      The response to a request for a set of `BreakType` objects. The response
      contains

      the requested `BreakType` objects and might contain a set of `Error`
      objects if

      the request resulted in errors.
    properties:
      break_types:
        type: optional<list<BreakType>>
        docs: ' A page of `BreakType` results.'
      cursor:
        type: optional<string>
        docs: |-
          The value supplied in the subsequent request to fetch the next page
          of `BreakType` results.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListCardsResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the [ListCards](api-endpoint:Cards-ListCards) endpoint.


      Note: if there are errors processing the request, the card field will not
      be

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      cards:
        type: optional<list<Card>>
        docs: The requested list of `Card`s.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If empty,

          this is the final response.


          See
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination)
          for more information.
    source:
      openapi: openapi/openapi.json
  ListCashDrawerShiftEventsResponse:
    properties:
      cursor:
        type: optional<string>
        docs: |-
          Opaque cursor for fetching the next page. Cursor is not present in
          the last page of results.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      cash_drawer_shift_events:
        type: optional<list<CashDrawerShiftEvent>>
        docs: |-
          All of the events (payments, refunds, etc.) for a cash drawer during
          the shift.
    source:
      openapi: openapi/openapi.json
  ListCashDrawerShiftsResponse:
    properties:
      cursor:
        type: optional<string>
        docs: |-
          Opaque cursor for fetching the next page of results. Cursor is not
          present in the last page of results.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      cash_drawer_shifts:
        type: optional<list<CashDrawerShiftSummary>>
        docs: |-
          A collection of CashDrawerShiftSummary objects for shifts that match
          the query.
    source:
      openapi: openapi/openapi.json
  ListCatalogResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If unset,
          this is the final response.

          See
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination)
          for more information.
      objects:
        type: optional<list<CatalogObject>>
        docs: The CatalogObjects returned.
    source:
      openapi: openapi/openapi.json
  ListCustomerCustomAttributeDefinitionsResponse:
    docs: >-
      Represents a
      [ListCustomerCustomAttributeDefinitions](api-endpoint:CustomerCustomAttributes-ListCustomerCustomAttributeDefinitions)
      response.

      Either `custom_attribute_definitions`, an empty object, or `errors` is
      present in the response.

      If additional results are available, the `cursor` field is also present
      along with `custom_attribute_definitions`.
    properties:
      custom_attribute_definitions:
        type: optional<list<CustomAttributeDefinition>>
        docs: >-
          The retrieved custom attribute definitions. If no custom attribute
          definitions are found,

          Square returns an empty object (`{}`).
      cursor:
        type: optional<string>
        docs: >-
          The cursor to provide in your next call to this endpoint to retrieve
          the next page of

          results for your original request. This field is present only if the
          request succeeded and

          additional results are available. For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListCustomerCustomAttributesResponse:
    docs: >-
      Represents a
      [ListCustomerCustomAttributes](api-endpoint:CustomerCustomAttributes-ListCustomerCustomAttributes)
      response.

      Either `custom_attributes`, an empty object, or `errors` is present in the
      response. If additional

      results are available, the `cursor` field is also present along with
      `custom_attributes`.
    properties:
      custom_attributes:
        type: optional<list<CustomAttribute>>
        docs: >-
          The retrieved custom attributes. If `with_definitions` was set to
          `true` in the request,

          the custom attribute definition is returned in the `definition` field
          of each custom attribute.


          If no custom attributes are found, Square returns an empty object
          (`{}`).
      cursor:
        type: optional<string>
        docs: >-
          The cursor to use in your next call to this endpoint to retrieve the
          next page of results

          for your original request. This field is present only if the request
          succeeded and additional

          results are available. For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListCustomerGroupsResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [ListCustomerGroups](api-endpoint:CustomerGroups-ListCustomerGroups)
      endpoint.


      Either `errors` or `groups` is present in a given response (never both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      groups:
        type: optional<list<CustomerGroup>>
        docs: A list of customer groups belonging to the current seller.
      cursor:
        type: optional<string>
        docs: >-
          A pagination cursor to retrieve the next set of results for your

          original query to the endpoint. This value is present only if the
          request

          succeeded and additional results are available.


          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  ListCustomerSegmentsResponse:
    docs: >-
      Defines the fields that are included in the response body for requests to
      the `ListCustomerSegments` endpoint.


      Either `errors` or `segments` is present in a given response (never both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      segments:
        type: optional<list<CustomerSegment>>
        docs: >-
          The list of customer segments belonging to the associated Square
          account.
      cursor:
        type: optional<string>
        docs: >-
          A pagination cursor to be used in subsequent calls to
          `ListCustomerSegments`

          to retrieve the next set of query results. The cursor is only present
          if the request succeeded and

          additional results are available.


          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  ListCustomersResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the `ListCustomers` endpoint.


      Either `errors` or `customers` is present in a given response (never
      both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      customers:
        type: optional<list<Customer>>
        docs: >-
          The customer profiles associated with the Square account or an empty
          object (`{}`) if none are found.

          Only customer profiles with public information (`given_name`,
          `family_name`, `company_name`, `email_address`, or

          `phone_number`) are included in the response.
      cursor:
        type: optional<string>
        docs: >-
          A pagination cursor to retrieve the next set of results for the

          original query. A cursor is only present if the request succeeded and
          additional results

          are available.


          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      count:
        type: optional<long>
        docs: >-
          The total count of customers associated with the Square account. Only
          customer profiles with public information

          (`given_name`, `family_name`, `company_name`, `email_address`, or
          `phone_number`) are counted. This field is present

          only if `count` is set to `true` in the request.
    source:
      openapi: openapi/openapi.json
  ListDeviceCodesResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      device_codes:
        type: optional<list<DeviceCode>>
        docs: The queried DeviceCode.
      cursor:
        type: optional<string>
        docs: >-
          A pagination cursor to retrieve the next set of results for your

          original query to the endpoint. This value is present only if the
          request

          succeeded and additional results are available.


          See [Paginating
          results](https://developer.squareup.com/docs/working-with-apis/pagination)
          for more information.
    source:
      openapi: openapi/openapi.json
  ListDevicesResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors that occurred during the request.
      devices:
        type: optional<list<Device>>
        docs: The requested list of `Device` objects.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If empty,

          this is the final response.

          See
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination)
          for more information.
    source:
      openapi: openapi/openapi.json
  ListDisputeEvidenceResponse:
    docs: Defines the fields in a `ListDisputeEvidence` response.
    properties:
      evidence:
        type: optional<list<DisputeEvidence>>
        docs: The list of evidence previously uploaded to the specified dispute.
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request.

          If unset, this is the final response. For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  ListDisputesResponse:
    docs: Defines fields in a `ListDisputes` response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      disputes:
        type: optional<list<Dispute>>
        docs: The list of disputes.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request.

          If unset, this is the final response. For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  ListEmployeeWagesResponse:
    docs: >-
      The response to a request for a set of `EmployeeWage` objects. The
      response contains

      a set of `EmployeeWage` objects.
    properties:
      employee_wages:
        type: optional<list<EmployeeWage>>
        docs: A page of `EmployeeWage` results.
      cursor:
        type: optional<string>
        docs: |-
          The value supplied in the subsequent request to fetch the next page
          of `EmployeeWage` results.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListEmployeesResponse:
    properties:
      employees: optional<list<Employee>>
      cursor:
        type: optional<string>
        docs: The token to be used to retrieve the next page of results.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListEventTypesResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the [ListEventTypes](api-endpoint:Events-ListEventTypes)
      endpoint.


      Note: if there are errors processing the request, the event types field
      will not be

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      event_types:
        type: optional<list<string>>
        docs: The list of event types.
      metadata:
        type: optional<list<EventTypeMetadata>>
        docs: >-
          Contains the metadata of an event type. For more information, see
          [EventTypeMetadata](entity:EventTypeMetadata).
    source:
      openapi: openapi/openapi.json
  ListGiftCardActivitiesResponse:
    docs: >-
      A response that contains a list of `GiftCardActivity` objects. If the
      request resulted in errors, 

      the response contains a set of `Error` objects.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      gift_card_activities:
        type: optional<list<GiftCardActivity>>
        docs: >-
          The requested gift card activities or an empty object if none are
          found.
      cursor:
        type: optional<string>
        docs: >-
          When a response is truncated, it includes a cursor that you can use in
          a

          subsequent request to retrieve the next set of activities. If a cursor
          is not present, this is

          the final response.

          For more information, see
          [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
    source:
      openapi: openapi/openapi.json
  ListGiftCardsResponse:
    docs: >-
      A response that contains a list of `GiftCard` objects. If the request
      resulted in errors, 

      the response contains a set of `Error` objects.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      gift_cards:
        type: optional<list<GiftCard>>
        docs: The requested gift cards or an empty object if none are found.
      cursor:
        type: optional<string>
        docs: >-
          When a response is truncated, it includes a cursor that you can use in
          a

          subsequent request to retrieve the next set of gift cards. If a cursor
          is not present, this is

          the final response.

          For more information, see
          [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
    source:
      openapi: openapi/openapi.json
  ListInvoicesResponse:
    docs: Describes a `ListInvoice` response.
    properties:
      invoices:
        type: optional<list<Invoice>>
        docs: The invoices retrieved.
      cursor:
        type: optional<string>
        docs: >-
          When a response is truncated, it includes a cursor that you can use in
          a 

          subsequent request to retrieve the next set of invoices. If empty,
          this is the final 

          response. 

          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  ListJobsResponse:
    docs: >-
      Represents a [ListJobs](api-endpoint:Team-ListJobs) response. Either
      `jobs` or `errors`

      is present in the response. If additional results are available, the
      `cursor` field is also present.
    properties:
      jobs:
        type: optional<list<Job>>
        docs: The retrieved jobs. A single paged response contains up to 100 jobs.
      cursor:
        type: optional<string>
        docs: >-
          An opaque cursor used to retrieve the next page of results. This field
          is present only

          if the request succeeded and additional results are available. For
          more information, see

          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: The errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListLocationBookingProfilesResponse:
    properties:
      location_booking_profiles:
        type: optional<list<LocationBookingProfile>>
        docs: The list of a seller's location booking profiles.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in the subsequent request to get the
          next page of the results. Stop retrieving the next page of the results
          when the cursor is not set.
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListLocationCustomAttributeDefinitionsResponse:
    docs: >-
      Represents a
      [ListLocationCustomAttributeDefinitions](api-endpoint:LocationCustomAttributes-ListLocationCustomAttributeDefinitions)
      response.

      Either `custom_attribute_definitions`, an empty object, or `errors` is
      present in the response.

      If additional results are available, the `cursor` field is also present
      along with `custom_attribute_definitions`.
    properties:
      custom_attribute_definitions:
        type: optional<list<CustomAttributeDefinition>>
        docs: >-
          The retrieved custom attribute definitions. If no custom attribute
          definitions are found,

          Square returns an empty object (`{}`).
      cursor:
        type: optional<string>
        docs: >-
          The cursor to provide in your next call to this endpoint to retrieve
          the next page of

          results for your original request. This field is present only if the
          request succeeded and

          additional results are available. For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListLocationCustomAttributesResponse:
    docs: >-
      Represents a
      [ListLocationCustomAttributes](api-endpoint:LocationCustomAttributes-ListLocationCustomAttributes)
      response.

      Either `custom_attributes`, an empty object, or `errors` is present in the
      response. If additional

      results are available, the `cursor` field is also present along with
      `custom_attributes`.
    properties:
      custom_attributes:
        type: optional<list<CustomAttribute>>
        docs: >-
          The retrieved custom attributes. If `with_definitions` was set to
          `true` in the request,

          the custom attribute definition is returned in the `definition` field
          of each custom attribute.

          If no custom attributes are found, Square returns an empty object
          (`{}`).
      cursor:
        type: optional<string>
        docs: >-
          The cursor to use in your next call to this endpoint to retrieve the
          next page of results

          for your original request. This field is present only if the request
          succeeded and additional

          results are available. For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListLocationsResponse:
    docs: >-
      Defines the fields that are included in the response body of a request

      to the [ListLocations](api-endpoint:Locations-ListLocations) endpoint.


      Either `errors` or `locations` is present in a given response (never
      both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      locations:
        type: optional<list<Location>>
        docs: The business locations.
    source:
      openapi: openapi/openapi.json
  ListLoyaltyProgramsResponse:
    docs: A response that contains all loyalty programs.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      programs:
        type: optional<list<LoyaltyProgram>>
        docs: A list of `LoyaltyProgram` for the merchant.
    source:
      openapi: openapi/openapi.json
  ListLoyaltyPromotionsResponse:
    docs: >-
      Represents a
      [ListLoyaltyPromotions](api-endpoint:Loyalty-ListLoyaltyPromotions)
      response.

      One of `loyalty_promotions`, an empty object, or `errors` is present in
      the response.

      If additional results are available, the `cursor` field is also present
      along with `loyalty_promotions`.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      loyalty_promotions:
        type: optional<list<LoyaltyPromotion>>
        docs: The retrieved loyalty promotions.
      cursor:
        type: optional<string>
        docs: >-
          The cursor to use in your next call to this endpoint to retrieve the
          next page of results

          for your original request. This field is present only if the request
          succeeded and additional

          results are available. For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  ListMerchantCustomAttributeDefinitionsResponse:
    docs: >-
      Represents a
      [ListMerchantCustomAttributeDefinitions](api-endpoint:MerchantCustomAttributes-ListMerchantCustomAttributeDefinitions)
      response.

      Either `custom_attribute_definitions`, an empty object, or `errors` is
      present in the response.

      If additional results are available, the `cursor` field is also present
      along with `custom_attribute_definitions`.
    properties:
      custom_attribute_definitions:
        type: optional<list<CustomAttributeDefinition>>
        docs: >-
          The retrieved custom attribute definitions. If no custom attribute
          definitions are found,

          Square returns an empty object (`{}`).
      cursor:
        type: optional<string>
        docs: >-
          The cursor to provide in your next call to this endpoint to retrieve
          the next page of

          results for your original request. This field is present only if the
          request succeeded and

          additional results are available. For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListMerchantCustomAttributesResponse:
    docs: >-
      Represents a
      [ListMerchantCustomAttributes](api-endpoint:MerchantCustomAttributes-ListMerchantCustomAttributes)
      response.

      Either `custom_attributes`, an empty object, or `errors` is present in the
      response. If additional

      results are available, the `cursor` field is also present along with
      `custom_attributes`.
    properties:
      custom_attributes:
        type: optional<list<CustomAttribute>>
        docs: >-
          The retrieved custom attributes. If `with_definitions` was set to
          `true` in the request,

          the custom attribute definition is returned in the `definition` field
          of each custom attribute.

          If no custom attributes are found, Square returns an empty object
          (`{}`).
      cursor:
        type: optional<string>
        docs: >-
          The cursor to use in your next call to this endpoint to retrieve the
          next page of results

          for your original request. This field is present only if the request
          succeeded and additional

          results are available. For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListMerchantsResponse:
    docs: >-
      The response object returned by the
      [ListMerchant](api-endpoint:Merchants-ListMerchants) endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      merchant:
        type: optional<list<Merchant>>
        docs: The requested `Merchant` entities.
      cursor:
        type: optional<integer>
        docs: >-
          If the  response is truncated, the cursor to use in next  request to
          fetch next set of objects.
    source:
      openapi: openapi/openapi.json
  ListOrderCustomAttributeDefinitionsResponse:
    docs: Represents a response from listing order custom attribute definitions.
    properties:
      custom_attribute_definitions:
        docs: >-
          The retrieved custom attribute definitions. If no custom attribute
          definitions are found, Square returns an empty object (`{}`).
        type: list<CustomAttributeDefinition>
      cursor:
        type: optional<string>
        docs: >-
          The cursor to provide in your next call to this endpoint to retrieve
          the next page of results for your original request. 

          This field is present only if the request succeeded and additional
          results are available.

          For more information, see
          [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
        validation:
          minLength: 1
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListOrderCustomAttributesResponse:
    docs: Represents a response from listing order custom attributes.
    properties:
      custom_attributes:
        type: optional<list<CustomAttribute>>
        docs: >-
          The retrieved custom attributes. If no custom attribute are found,
          Square returns an empty object (`{}`).
      cursor:
        type: optional<string>
        docs: >-
          The cursor to provide in your next call to this endpoint to retrieve
          the next page of results for your original request. 

          This field is present only if the request succeeded and additional
          results are available.

          For more information, see
          [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
        validation:
          minLength: 1
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListPaymentLinksResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
      payment_links:
        type: optional<list<PaymentLink>>
        docs: The list of payment links.
      cursor:
        type: optional<string>
        docs: >2-
            When a response is truncated, it includes a cursor that you can use in a subsequent request
          to retrieve the next set of gift cards. If a cursor is not present,
          this is the final response.

          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  ListPaymentRefundsRequestSortField:
    enum:
      - CREATED_AT
      - UPDATED_AT
    source:
      openapi: openapi/openapi.json
  ListPaymentRefundsResponse:
    docs: >-
      Defines the response returned by
      [ListPaymentRefunds](api-endpoint:Refunds-ListPaymentRefunds).


      Either `errors` or `refunds` is present in a given response (never both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      refunds:
        type: optional<list<PaymentRefund>>
        docs: The list of requested refunds.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If empty,

          this is the final response.


          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  ListPaymentsRequestSortField:
    enum:
      - CREATED_AT
      - OFFLINE_CREATED_AT
      - UPDATED_AT
    source:
      openapi: openapi/openapi.json
  ListPaymentsResponse:
    docs: >-
      Defines the response returned by
      [ListPayments](api-endpoint:Payments-ListPayments).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      payments:
        type: optional<list<Payment>>
        docs: The requested list of payments.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If empty,

          this is the final response.


          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  ListPayoutEntriesResponse:
    docs: The response to retrieve payout records entries.
    properties:
      payout_entries:
        type: optional<list<PayoutEntry>>
        docs: >-
          The requested list of payout entries, ordered with the given or
          default sort order.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If empty,
          this is the final response.

          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  ListPayoutsResponse:
    docs: The response to retrieve payout records entries.
    properties:
      payouts:
        type: optional<list<Payout>>
        docs: The requested list of payouts.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If empty,
          this is the final response.

          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  ListSitesResponse:
    docs: >-
      Represents a `ListSites` response. The response can include either `sites`
      or `errors`.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      sites:
        type: optional<list<Site>>
        docs: The sites that belong to the seller.
    source:
      openapi: openapi/openapi.json
  ListSubscriptionEventsResponse:
    docs: >-
      Defines output parameters in a response from the

      [ListSubscriptionEvents](api-endpoint:Subscriptions-ListSubscriptionEvents).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered during the request.
      subscription_events:
        type: optional<list<SubscriptionEvent>>
        docs: The retrieved subscription events.
      cursor:
        type: optional<string>
        docs: >-
          When the total number of resulting subscription events exceeds the
          limit of a paged response, 

          the response includes a cursor for you to use in a subsequent request
          to fetch the next set of events.

          If the cursor is unset, the response contains the last page of the
          results.


          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  ListTeamMemberBookingProfilesResponse:
    properties:
      team_member_booking_profiles:
        type: optional<list<TeamMemberBookingProfile>>
        docs: >-
          The list of team member booking profiles. The results are returned in
          the ascending order of the time

          when the team member booking profiles were last updated. Multiple
          booking profiles updated at the same time

          are further sorted in the ascending order of their IDs.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in the subsequent request to get the
          next page of the results. Stop retrieving the next page of the results
          when the cursor is not set.
        validation:
          maxLength: 65536
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListTeamMemberWagesResponse:
    docs: >-
      The response to a request for a set of `TeamMemberWage` objects. The
      response contains

      a set of `TeamMemberWage` objects.
    properties:
      team_member_wages:
        type: optional<list<TeamMemberWage>>
        docs: A page of `TeamMemberWage` results.
      cursor:
        type: optional<string>
        docs: |-
          The value supplied in the subsequent request to fetch the next page
          of `TeamMemberWage` results.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ListTransactionsResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [ListTransactions](api-endpoint:Transactions-ListTransactions) endpoint.


      One of `errors` or `transactions` is present in a given response (never
      both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      transactions:
        type: optional<list<Transaction>>
        docs: An array of transactions that match your query.
      cursor:
        type: optional<string>
        docs: >-
          A pagination cursor for retrieving the next set of results,

          if any remain. Provide this value as the `cursor` parameter in a
          subsequent

          request to this endpoint.


          See [Paginating
          results](https://developer.squareup.com/docs/working-with-apis/pagination)
          for more information.
    source:
      openapi: openapi/openapi.json
  ListWebhookEventTypesResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [ListWebhookEventTypes](api-endpoint:WebhookSubscriptions-ListWebhookEventTypes)
      endpoint.


      Note: if there are errors processing the request, the event types field
      will not be

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      event_types:
        type: optional<list<string>>
        docs: The list of event types.
      metadata:
        type: optional<list<EventTypeMetadata>>
        docs: >-
          Contains the metadata of a webhook event type. For more information,
          see [EventTypeMetadata](entity:EventTypeMetadata).
    source:
      openapi: openapi/openapi.json
  ListWebhookSubscriptionsResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [ListWebhookSubscriptions](api-endpoint:WebhookSubscriptions-ListWebhookSubscriptions)
      endpoint.


      Note: if there are errors processing the request, the subscriptions field
      will not be

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      subscriptions:
        type: optional<list<WebhookSubscription>>
        docs: The requested list of [Subscription](entity:WebhookSubscription)s.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If empty,

          this is the final response.


          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  ListWorkweekConfigsResponse:
    docs: >-
      The response to a request for a set of `WorkweekConfig` objects. The
      response contains

      the requested `WorkweekConfig` objects and might contain a set of `Error`
      objects if

      the request resulted in errors.
    properties:
      workweek_configs:
        type: optional<list<WorkweekConfig>>
        docs: A page of `WorkweekConfig` results.
      cursor:
        type: optional<string>
        docs: |-
          The value supplied in the subsequent request to fetch the next page of
          `WorkweekConfig` results.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  Location:
    docs: >-
      Represents one of a business'
      [locations](https://developer.squareup.com/docs/locations-api).
    properties:
      id:
        type: optional<string>
        docs: >-
          A short generated string of letters and numbers that uniquely
          identifies this location instance.
        validation:
          maxLength: 32
        access: read-only
      name:
        type: optional<nullable<string>>
        docs: |-
          The name of the location.
          This information appears in the Seller Dashboard as the nickname.
          A location name must be unique within a seller account.
        validation:
          maxLength: 255
      address:
        type: optional<Address>
        docs: The physical address of the location.
      timezone:
        type: optional<nullable<string>>
        docs: |-
          The [IANA time zone](https://www.iana.org/time-zones) identifier for
          the time zone of the location. For example, `America/Los_Angeles`.
        validation:
          maxLength: 30
      capabilities:
        type: optional<list<LocationCapability>>
        docs: >-
          The Square features that are enabled for the location.

          See [LocationCapability](entity:LocationCapability) for possible
          values.

          See [LocationCapability](#type-locationcapability) for possible values
        access: read-only
      status:
        type: optional<LocationStatus>
        docs: |-
          The status of the location.
          See [LocationStatus](#type-locationstatus) for possible values
      created_at:
        type: optional<string>
        docs: >-
          The time when the location was created, in RFC 3339 format.

          For more information, see [Working with
          Dates](https://developer.squareup.com/docs/build-basics/working-with-dates).
        validation:
          minLength: 20
          maxLength: 25
        access: read-only
      merchant_id:
        type: optional<string>
        docs: The ID of the merchant that owns the location.
        validation:
          maxLength: 32
        access: read-only
      country:
        type: optional<Country>
        docs: >-
          The country of the location, in the two-letter format of ISO 3166. For
          example, `US` or `JP`.


          See [Country](entity:Country) for possible values.

          See [Country](#type-country) for possible values
      language_code:
        type: optional<nullable<string>>
        docs: >-
          The language associated with the location, in

          [BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A).

          For more information, see [Language
          Preferences](https://developer.squareup.com/docs/build-basics/general-considerations/language-preferences).
        validation:
          minLength: 2
          maxLength: 5
      currency:
        type: optional<Currency>
        docs: >-
          The currency used for all transactions at this location,

          in ISO 4217 format. For example, the currency code for US dollars is
          `USD`.

          See [Currency](entity:Currency) for possible values.

          See [Currency](#type-currency) for possible values
      phone_number:
        type: optional<nullable<string>>
        docs: The phone number of the location. For example, `+1 855-700-6000`.
        validation:
          maxLength: 17
      business_name:
        type: optional<nullable<string>>
        docs: >-
          The name of the location's overall business. This name is present on
          receipts and other customer-facing branding, and can be changed no
          more than three times in a twelve-month period.
        validation:
          maxLength: 255
      type:
        type: optional<LocationType>
        docs: |-
          The type of the location.
          See [LocationType](#type-locationtype) for possible values
      website_url:
        type: optional<nullable<string>>
        docs: The website URL of the location.  For example, `https://squareup.com`.
        validation:
          maxLength: 255
      business_hours:
        type: optional<BusinessHours>
        docs: The hours of operation for the location.
      business_email:
        type: optional<nullable<string>>
        docs: >-
          The email address of the location. This can be unique to the location
          and is not always the email address for the business owner or
          administrator.
        validation:
          maxLength: 255
      description:
        type: optional<nullable<string>>
        docs: The description of the location. For example, `Main Street location`.
        validation:
          maxLength: 1024
      twitter_username:
        type: optional<nullable<string>>
        docs: >-
          The Twitter username of the location without the '@' symbol. For
          example, `Square`.
        validation:
          minLength: 1
          maxLength: 15
      instagram_username:
        type: optional<nullable<string>>
        docs: >-
          The Instagram username of the location without the '@' symbol. For
          example, `square`.
        validation:
          minLength: 1
          maxLength: 30
      facebook_url:
        type: optional<nullable<string>>
        docs: >-
          The Facebook profile URL of the location. The URL should begin with
          'facebook.com/'. For example, `https://www.facebook.com/square`.
        validation:
          maxLength: 255
      coordinates:
        type: optional<Coordinates>
        docs: The physical coordinates (latitude and longitude) of the location.
      logo_url:
        type: optional<string>
        docs: >-
          The URL of the logo image for the location. When configured in the
          Seller

          Dashboard (Receipts section), the logo appears on transactions (such
          as receipts and invoices) that Square generates on behalf of the
          seller.

          This image should have a roughly square (1:1) aspect ratio and should
          be at least 200x200 pixels.
        validation:
          maxLength: 255
        access: read-only
      pos_background_url:
        type: optional<string>
        docs: The URL of the Point of Sale background image for the location.
        validation:
          maxLength: 255
        access: read-only
      mcc:
        type: optional<nullable<string>>
        docs: >-
          A four-digit number that describes the kind of goods or services sold
          at the location.

          The [merchant category code
          (MCC)](https://developer.squareup.com/docs/locations-api#initialize-a-merchant-category-code)
          of the location as standardized by ISO 18245.

          For example, `5045`, for a location that sells computer goods and
          software.
        validation:
          minLength: 4
          maxLength: 4
      full_format_logo_url:
        type: optional<string>
        docs: >-
          The URL of a full-format logo image for the location. When configured
          in the Seller

          Dashboard (Receipts section), the logo appears on transactions (such
          as receipts and invoices) that Square generates on behalf of the
          seller.

          This image can be wider than it is tall and should be at least
          1280x648 pixels.
        access: read-only
      tax_ids:
        type: optional<TaxIds>
        docs: The tax IDs for this location.
    source:
      openapi: openapi/openapi.json
  LocationBookingProfile:
    docs: >-
      The booking profile of a seller's location, including the location's ID
      and whether the location is enabled for online booking.
    properties:
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the [location](entity:Location).
      booking_site_url:
        type: optional<nullable<string>>
        docs: Url for the online booking site for this location.
      online_booking_enabled:
        type: optional<nullable<boolean>>
        docs: Indicates whether the location is enabled for online booking.
    source:
      openapi: openapi/openapi.json
  LocationCapability:
    enum:
      - CREDIT_CARD_PROCESSING
      - AUTOMATIC_TRANSFERS
      - UNLINKED_REFUNDS
    docs: The capabilities a location might have.
    source:
      openapi: openapi/openapi.json
  LocationCreatedEvent:
    docs: Published when a [Location](entity:Location) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the [Location](entity:Location) associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"location.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LocationCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  LocationCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"location"`.
      id:
        type: optional<string>
        docs: ID of the updated [Location](entity:Location).
    source:
      openapi: openapi/openapi.json
  LocationCustomAttributeDefinitionOwnedCreatedEvent:
    docs: >-
      Published when a location [custom attribute
      definition](entity:CustomAttributeDefinition)

      is created by the subscribing application.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"location.custom_attribute_definition.owned.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  LocationCustomAttributeDefinitionOwnedDeletedEvent:
    docs: >-
      Published when a location [custom attribute
      definition](entity:CustomAttributeDefinition) 

      created by the subscribing application is deleted. A custom attribute
      definition can only be deleted by 

      the application that created it.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"location.custom_attribute_definition.owned.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  LocationCustomAttributeDefinitionOwnedUpdatedEvent:
    docs: >-
      Published when a location [custom attribute
      definition](entity:CustomAttributeDefinition) 

      created by the subscribing application is updated. A custom attribute
      definition can only be updated 

      by the application that created it.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"location.custom_attribute_definition.owned.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  LocationCustomAttributeDefinitionVisibleCreatedEvent:
    docs: >-
      Published when a location [custom attribute
      definition](entity:CustomAttributeDefinition)

      that is visible to the subscribing application is created. A notification
      is sent when your application 

      creates a custom attribute definition or another application creates a
      custom attribute definition whose

      `visibility` is `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"location.custom_attribute_definition.visible.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  LocationCustomAttributeDefinitionVisibleDeletedEvent:
    docs: >-
      Published when a location [custom attribute
      definition](entity:CustomAttributeDefinition) 

      that is visible to the subscribing application is deleted. A custom
      attribute definition can only 

      be deleted by the application that created it. A notification is sent when
      your application deletes 

      a custom attribute definition or when another application deletes a custom
      attribute definition whose 

      `visibility` is `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"location.custom_attribute_definition.visible.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  LocationCustomAttributeDefinitionVisibleUpdatedEvent:
    docs: >-
      Published when a location [custom attribute
      definition](entity:CustomAttributeDefinition) 

      that is visible to the subscribing application is updated. A custom
      attribute definition can only be updated

      by the application that created it. A notification is sent when your
      application updates a custom attribute 

      definition or when another application updates a custom attribute
      definition whose `visibility` is 

      `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"location.custom_attribute_definition.visible.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  LocationCustomAttributeOwnedDeletedEvent:
    docs: >-
      Published when a location [custom attribute](entity:CustomAttribute) 

      owned by the subscribing application is deleted. Custom attributes are
      owned by the

      application that created the corresponding [custom attribute
      definition](entity:CustomAttributeDefinition).

      Custom attributes whose `visibility` is `VISIBILITY_READ_WRITE_VALUES` can
      be deleted by any application.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"location.custom_attribute.owned.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  LocationCustomAttributeOwnedUpdatedEvent:
    docs: >-
      Published when a location [custom attribute](entity:CustomAttribute) owned
      by the

      subscribing application is created or updated. Custom attributes are owned
      by the application that created

      the corresponding [custom attribute
      definition](entity:CustomAttributeDefinition). Custom attributes whose

      `visibility` is `VISIBILITY_READ_WRITE_VALUES` can be created or updated
      by any application.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"location.custom_attribute.owned.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  LocationCustomAttributeVisibleDeletedEvent:
    docs: >-
      Published when a location [custom attribute](entity:CustomAttribute) that
      is visible to the

      subscribing application is deleted. A notification is sent when:

      - Your application deletes a custom attribute owned by your application,
      regardless of the `visibility` setting.

      - Any application deletes a custom attribute whose `visibility` is
      `VISIBILITY_READ_ONLY`

      or `VISIBILITY_READ_WRITE_VALUES`.


      Custom attributes set to `VISIBILITY_READ_WRITE_VALUES` can be deleted by
      any application, but those set to

      `VISIBILITY_READ_ONLY` or `VISIBILITY_HIDDEN` can only be deleted by the
      owner. Custom attributes are owned

      by the application that created the corresponding [custom attribute
      definition](entity:CustomAttributeDefinition).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"location.custom_attribute.visible.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  LocationCustomAttributeVisibleUpdatedEvent:
    docs: >-
      Published when a location [custom attribute](entity:CustomAttribute) that
      is visible

      to the subscribing application is created or updated. A notification is
      sent when:

      - Your application creates or updates a custom attribute owned by your
      application, regardless of the `visibility` setting.

      - Any application creates or updates a custom attribute whose `visibility`
      is `VISIBILITY_READ_ONLY`

      or `VISIBILITY_READ_WRITE_VALUES`.


      Custom attributes set to `VISIBILITY_READ_WRITE_VALUES` can be created or
      updated by any application, but those set to

      `VISIBILITY_READ_ONLY` or `VISIBILITY_HIDDEN` can only be created or
      updated by the owner. Custom attributes are owned

      by the application that created the corresponding [custom attribute
      definition](entity:CustomAttributeDefinition).
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"location.custom_attribute.visible.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  LocationSettingsUpdatedEvent:
    docs: Published when online checkout location settings are updated
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event this represents,
          `"online_checkout.location_settings.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: RFC 3339 timestamp of when the event was created.
        access: read-only
      data:
        type: optional<LocationSettingsUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  LocationSettingsUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          Name of the updated object’s type,
          `"online_checkout.location_settings"`.
      id:
        type: optional<string>
        docs: ID of the updated location settings.
      object:
        type: optional<LocationSettingsUpdatedEventObject>
        docs: An object containing the updated location settings.
    source:
      openapi: openapi/openapi.json
  LocationSettingsUpdatedEventObject:
    properties:
      location_settings:
        type: optional<CheckoutLocationSettings>
        docs: The updated location settings.
    source:
      openapi: openapi/openapi.json
  LocationStatus:
    enum:
      - ACTIVE
      - INACTIVE
    docs: A location's status.
    source:
      openapi: openapi/openapi.json
  LocationType:
    enum:
      - PHYSICAL
      - MOBILE
    docs: A location's type.
    source:
      openapi: openapi/openapi.json
  LocationUpdatedEvent:
    docs: Published when a [Location](entity:Location) is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the [Location](entity:Location) associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"location.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LocationUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  LocationUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"location"`.
      id:
        type: optional<string>
        docs: ID of the updated [Location](entity:Location).
    source:
      openapi: openapi/openapi.json
  LoyaltyAccount:
    docs: >-
      Describes a loyalty account in a [loyalty program](entity:LoyaltyProgram).
      For more information, see

      [Create and Retrieve Loyalty
      Accounts](https://developer.squareup.com/docs/loyalty-api/loyalty-accounts).
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the loyalty account.
        validation:
          maxLength: 36
        access: read-only
      program_id:
        type: string
        docs: >-
          The Square-assigned ID of the [loyalty program](entity:LoyaltyProgram)
          to which the account belongs.
        validation:
          minLength: 1
          maxLength: 36
      balance:
        type: optional<integer>
        docs: >-
          The available point balance in the loyalty account. If points are
          scheduled to expire, they are listed in the `expiring_point_deadlines`
          field.


          Your application should be able to handle loyalty accounts that have a
          negative point balance (`balance` is less than 0). This might occur if
          a seller makes a manual adjustment or as a result of a refund or
          exchange.
        access: read-only
      lifetime_points:
        type: optional<integer>
        docs: The total points accrued during the lifetime of the account.
        access: read-only
      customer_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-assigned ID of the [customer](entity:Customer) that is
          associated with the account.
      enrolled_at:
        type: optional<nullable<string>>
        docs: >-
          The timestamp when the buyer joined the loyalty program, in RFC 3339
          format. This field is used to display the **Enrolled On** or **Member
          Since** date in first-party Square products.


          If this field is not set in a `CreateLoyaltyAccount` request, Square
          populates it after the buyer's first action on their account 

          (when `AccumulateLoyaltyPoints` or `CreateLoyaltyReward` is called).
          In first-party flows, Square populates the field when the buyer agrees
          to the terms of service in Square Point of Sale. 


          This field is typically specified in a `CreateLoyaltyAccount` request
          when creating a loyalty account for a buyer who already interacted
          with their account. 

          For example, you would set this field when migrating accounts from an
          external system. The timestamp in the request can represent a current
          or previous date and time, but it cannot be set for the future.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp when the loyalty account was created, in RFC 3339
          format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp when the loyalty account was last updated, in RFC 3339
          format.
        access: read-only
      mapping:
        type: optional<LoyaltyAccountMapping>
        docs: >-
          The mapping that associates the loyalty account with a buyer.
          Currently,

          a loyalty account can only be mapped to a buyer by phone number.


          To create a loyalty account, you must specify the `mapping` field,
          with the buyer's phone number

          in the `phone_number` field.
      expiring_point_deadlines:
        type: optional<nullable<list<LoyaltyAccountExpiringPointDeadline>>>
        docs: >-
          The schedule for when points expire in the loyalty account balance.
          This field is present only if the account has points that are
          scheduled to expire. 


          The total number of points in this field equals the number of points
          in the `balance` field.
    source:
      openapi: openapi/openapi.json
  LoyaltyAccountCreatedEvent:
    docs: Published when a [loyalty account](entity:LoyaltyAccount) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `loyalty.account.created`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID for the event, which is used for

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LoyaltyAccountCreatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LoyaltyAccountCreatedEventData:
    docs: The data associated with a `loyalty.account.created` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `loyalty_account`.
      id:
        type: optional<string>
        docs: The ID of the affected loyalty account.
      object:
        type: optional<LoyaltyAccountCreatedEventObject>
        docs: An object that contains the new loyalty account.
    source:
      openapi: openapi/openapi.json
  LoyaltyAccountCreatedEventObject:
    properties:
      loyalty_account:
        type: optional<LoyaltyAccount>
        docs: The loyalty account that was created.
    source:
      openapi: openapi/openapi.json
  LoyaltyAccountDeletedEvent:
    docs: Published when a [loyalty account](entity:LoyaltyAccount) is deleted.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `loyalty.account.deleted`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID for the event, which is used for

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LoyaltyAccountDeletedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LoyaltyAccountDeletedEventData:
    docs: The data associated with a `loyalty.account.deleted` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `loyalty_account`.
      id:
        type: optional<string>
        docs: The ID of the affected loyalty account.
      object:
        type: optional<LoyaltyAccountDeletedEventObject>
        docs: An object that contains the loyalty account that was deleted.
    source:
      openapi: openapi/openapi.json
  LoyaltyAccountDeletedEventObject:
    properties:
      loyalty_account:
        type: optional<LoyaltyAccount>
        docs: The loyalty account that was deleted.
    source:
      openapi: openapi/openapi.json
  LoyaltyAccountExpiringPointDeadline:
    docs: >-
      Represents a set of points for a loyalty account that are scheduled to
      expire on a specific date.
    properties:
      points:
        type: integer
        docs: >-
          The number of points scheduled to expire at the `expires_at`
          timestamp.
      expires_at:
        type: string
        docs: >-
          The timestamp of when the points are scheduled to expire, in RFC 3339
          format.
        validation:
          minLength: 1
    source:
      openapi: openapi/openapi.json
  LoyaltyAccountMapping:
    docs: >-
      Represents the mapping that associates a loyalty account with a buyer. 


      Currently, a loyalty account can only be mapped to a buyer by phone
      number. For more information, see 

      [Loyalty Overview](https://developer.squareup.com/docs/loyalty/overview).
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the mapping.
        validation:
          maxLength: 36
        access: read-only
      created_at:
        type: optional<string>
        docs: The timestamp when the mapping was created, in RFC 3339 format.
        access: read-only
      phone_number:
        type: optional<nullable<string>>
        docs: >-
          The phone number of the buyer, in E.164 format. For example,
          "+14155551111".
    source:
      openapi: openapi/openapi.json
  LoyaltyAccountMappingType:
    type: literal<"PHONE">
    docs: The type of mapping.
  LoyaltyAccountUpdatedEvent:
    docs: Published when a [loyalty account](entity:LoyaltyAccount) is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `loyalty.account.updated`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID for the event, which is used for

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LoyaltyAccountUpdatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LoyaltyAccountUpdatedEventData:
    docs: The data associated with a `loyalty.account.updated` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `loyalty_account`.
      id:
        type: optional<string>
        docs: The ID of the affected loyalty account.
      object:
        type: optional<LoyaltyAccountUpdatedEventObject>
        docs: An object that contains the loyalty account that was updated.
    source:
      openapi: openapi/openapi.json
  LoyaltyAccountUpdatedEventObject:
    properties:
      loyalty_account:
        type: optional<LoyaltyAccount>
        docs: The loyalty account that was updated.
    source:
      openapi: openapi/openapi.json
  LoyaltyEvent:
    docs: >-
      Provides information about a loyalty event. 

      For more information, see [Search for Balance-Changing Loyalty
      Events](https://developer.squareup.com/docs/loyalty-api/loyalty-events).
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the loyalty event.
        validation:
          minLength: 1
        access: read-only
      type:
        type: LoyaltyEventType
        docs: |-
          The type of the loyalty event.
          See [LoyaltyEventType](#type-loyaltyeventtype) for possible values
      created_at:
        type: optional<string>
        docs: The timestamp when the event was created, in RFC 3339 format.
        validation:
          minLength: 1
        access: read-only
      accumulate_points:
        type: optional<LoyaltyEventAccumulatePoints>
        docs: Provides metadata when the event `type` is `ACCUMULATE_POINTS`.
      create_reward:
        type: optional<LoyaltyEventCreateReward>
        docs: Provides metadata when the event `type` is `CREATE_REWARD`.
      redeem_reward:
        type: optional<LoyaltyEventRedeemReward>
        docs: Provides metadata when the event `type` is `REDEEM_REWARD`.
      delete_reward:
        type: optional<LoyaltyEventDeleteReward>
        docs: Provides metadata when the event `type` is `DELETE_REWARD`.
      adjust_points:
        type: optional<LoyaltyEventAdjustPoints>
        docs: Provides metadata when the event `type` is `ADJUST_POINTS`.
      loyalty_account_id:
        type: optional<string>
        docs: >-
          The ID of the [loyalty account](entity:LoyaltyAccount) associated with
          the event.
        validation:
          minLength: 1
          maxLength: 36
        access: read-only
      location_id:
        type: optional<string>
        docs: The ID of the [location](entity:Location) where the event occurred.
        access: read-only
      source:
        type: LoyaltyEventSource
        docs: |-
          Defines whether the event was generated by the Square Point of Sale.
          See [LoyaltyEventSource](#type-loyaltyeventsource) for possible values
      expire_points:
        type: optional<LoyaltyEventExpirePoints>
        docs: Provides metadata when the event `type` is `EXPIRE_POINTS`.
      other_event:
        type: optional<LoyaltyEventOther>
        docs: Provides metadata when the event `type` is `OTHER`.
      accumulate_promotion_points:
        type: optional<LoyaltyEventAccumulatePromotionPoints>
        docs: >-
          Provides metadata when the event `type` is
          `ACCUMULATE_PROMOTION_POINTS`.
    source:
      openapi: openapi/openapi.json
  LoyaltyEventAccumulatePoints:
    docs: Provides metadata when the event `type` is `ACCUMULATE_POINTS`.
    properties:
      loyalty_program_id:
        type: optional<string>
        docs: The ID of the [loyalty program](entity:LoyaltyProgram).
        validation:
          maxLength: 36
        access: read-only
      points:
        type: optional<nullable<integer>>
        docs: The number of points accumulated by the event.
        validation:
          min: 1
      order_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the [order](entity:Order) for which the buyer accumulated
          the points.

          This field is returned only if the Orders API is used to process
          orders.
    source:
      openapi: openapi/openapi.json
  LoyaltyEventAccumulatePromotionPoints:
    docs: Provides metadata when the event `type` is `ACCUMULATE_PROMOTION_POINTS`.
    properties:
      loyalty_program_id:
        type: optional<string>
        docs: >-
          The Square-assigned ID of the [loyalty
          program](entity:LoyaltyProgram).
        validation:
          maxLength: 36
        access: read-only
      loyalty_promotion_id:
        type: optional<string>
        docs: >-
          The Square-assigned ID of the [loyalty
          promotion](entity:LoyaltyPromotion).
        validation:
          minLength: 1
          maxLength: 255
        access: read-only
      points:
        type: optional<integer>
        docs: The number of points earned by the event.
        access: read-only
      order_id:
        type: optional<string>
        docs: >-
          The ID of the [order](entity:Order) for which the buyer earned the
          promotion points.

          Only applications that use the Orders API to process orders can
          trigger this event.
        validation:
          minLength: 1
        access: read-only
    source:
      openapi: openapi/openapi.json
  LoyaltyEventAdjustPoints:
    docs: Provides metadata when the event `type` is `ADJUST_POINTS`.
    properties:
      loyalty_program_id:
        type: optional<string>
        docs: >-
          The Square-assigned ID of the [loyalty
          program](entity:LoyaltyProgram).
        validation:
          maxLength: 36
        access: read-only
      points:
        type: integer
        docs: The number of points added or removed.
      reason:
        type: optional<nullable<string>>
        docs: The reason for the adjustment of points.
        validation:
          maxLength: 3500
    source:
      openapi: openapi/openapi.json
  LoyaltyEventCreateReward:
    docs: Provides metadata when the event `type` is `CREATE_REWARD`.
    properties:
      loyalty_program_id:
        type: optional<string>
        docs: The ID of the [loyalty program](entity:LoyaltyProgram).
        validation:
          minLength: 1
          maxLength: 36
        access: read-only
      reward_id:
        type: optional<string>
        docs: >-
          The Square-assigned ID of the created [loyalty
          reward](entity:LoyaltyReward).

          This field is returned only if the event source is `LOYALTY_API`.
        validation:
          maxLength: 36
        access: read-only
      points:
        type: optional<integer>
        docs: The loyalty points used to create the reward.
        access: read-only
    source:
      openapi: openapi/openapi.json
  LoyaltyEventCreatedEvent:
    docs: Published when a [loyalty event](entity:LoyaltyEvent) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `loyalty.event.created`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID for the event, which is used for

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LoyaltyEventCreatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LoyaltyEventCreatedEventData:
    docs: The data associated with a `loyalty.event.created` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `loyalty_event`.
      id:
        type: optional<string>
        docs: ID of the affected loyalty event.
      object:
        type: optional<LoyaltyEventCreatedEventObject>
        docs: An object that contains the new loyalty event.
    source:
      openapi: openapi/openapi.json
  LoyaltyEventCreatedEventObject:
    properties:
      loyalty_event:
        type: optional<LoyaltyEvent>
        docs: The loyalty event that was created.
    source:
      openapi: openapi/openapi.json
  LoyaltyEventDateTimeFilter:
    docs: Filter events by date time range.
    properties:
      created_at:
        type: TimeRange
        docs: The `created_at` date time range used to filter the result.
    source:
      openapi: openapi/openapi.json
  LoyaltyEventDeleteReward:
    docs: Provides metadata when the event `type` is `DELETE_REWARD`.
    properties:
      loyalty_program_id:
        type: optional<string>
        docs: The ID of the [loyalty program](entity:LoyaltyProgram).
        validation:
          minLength: 1
          maxLength: 36
        access: read-only
      reward_id:
        type: optional<string>
        docs: |-
          The ID of the deleted [loyalty reward](entity:LoyaltyReward).
          This field is returned only if the event source is `LOYALTY_API`.
        validation:
          maxLength: 36
        access: read-only
      points:
        type: optional<integer>
        docs: The number of points returned to the loyalty account.
        access: read-only
    source:
      openapi: openapi/openapi.json
  LoyaltyEventExpirePoints:
    docs: Provides metadata when the event `type` is `EXPIRE_POINTS`.
    properties:
      loyalty_program_id:
        type: optional<string>
        docs: >-
          The Square-assigned ID of the [loyalty
          program](entity:LoyaltyProgram).
        validation:
          minLength: 1
          maxLength: 36
        access: read-only
      points:
        type: integer
        docs: The number of points expired.
    source:
      openapi: openapi/openapi.json
  LoyaltyEventFilter:
    docs: |-
      The filtering criteria. If the request specifies multiple filters, 
      the endpoint uses a logical AND to evaluate them.
    properties:
      loyalty_account_filter:
        type: optional<LoyaltyEventLoyaltyAccountFilter>
        docs: Filter events by loyalty account.
      type_filter:
        type: optional<LoyaltyEventTypeFilter>
        docs: Filter events by event type.
      date_time_filter:
        type: optional<LoyaltyEventDateTimeFilter>
        docs: |-
          Filter events by date time range. 
          For each range, the start time is inclusive and the end time 
          is exclusive.
      location_filter:
        type: optional<LoyaltyEventLocationFilter>
        docs: Filter events by location.
      order_filter:
        type: optional<LoyaltyEventOrderFilter>
        docs: Filter events by the order associated with the event.
    source:
      openapi: openapi/openapi.json
  LoyaltyEventLocationFilter:
    docs: Filter events by location.
    properties:
      location_ids:
        docs: |-
          The [location](entity:Location) IDs for loyalty events to query.
          If multiple values are specified, the endpoint uses 
          a logical OR to combine them.
        type: list<string>
    source:
      openapi: openapi/openapi.json
  LoyaltyEventLoyaltyAccountFilter:
    docs: Filter events by loyalty account.
    properties:
      loyalty_account_id:
        type: string
        docs: >-
          The ID of the [loyalty account](entity:LoyaltyAccount) associated with
          loyalty events.
        validation:
          minLength: 1
    source:
      openapi: openapi/openapi.json
  LoyaltyEventOrderFilter:
    docs: Filter events by the order associated with the event.
    properties:
      order_id:
        type: string
        docs: The ID of the [order](entity:Order) associated with the event.
        validation:
          minLength: 1
    source:
      openapi: openapi/openapi.json
  LoyaltyEventOther:
    docs: Provides metadata when the event `type` is `OTHER`.
    properties:
      loyalty_program_id:
        type: optional<string>
        docs: >-
          The Square-assigned ID of the [loyalty
          program](entity:LoyaltyProgram).
        validation:
          minLength: 1
          maxLength: 36
        access: read-only
      points:
        type: integer
        docs: The number of points added or removed.
    source:
      openapi: openapi/openapi.json
  LoyaltyEventQuery:
    docs: Represents a query used to search for loyalty events.
    properties:
      filter:
        type: optional<LoyaltyEventFilter>
        docs: The query filter criteria.
    source:
      openapi: openapi/openapi.json
  LoyaltyEventRedeemReward:
    docs: Provides metadata when the event `type` is `REDEEM_REWARD`.
    properties:
      loyalty_program_id:
        type: optional<string>
        docs: The ID of the [loyalty program](entity:LoyaltyProgram).
        validation:
          minLength: 1
          maxLength: 36
        access: read-only
      reward_id:
        type: optional<string>
        docs: |-
          The ID of the redeemed [loyalty reward](entity:LoyaltyReward).
          This field is returned only if the event source is `LOYALTY_API`.
        validation:
          maxLength: 36
        access: read-only
      order_id:
        type: optional<string>
        docs: >-
          The ID of the [order](entity:Order) that redeemed the reward.

          This field is returned only if the Orders API is used to process
          orders.
        access: read-only
    source:
      openapi: openapi/openapi.json
  LoyaltyEventSource:
    enum:
      - SQUARE
      - LOYALTY_API
    docs: Defines whether the event was generated by the Square Point of Sale.
    source:
      openapi: openapi/openapi.json
  LoyaltyEventType:
    enum:
      - ACCUMULATE_POINTS
      - CREATE_REWARD
      - REDEEM_REWARD
      - DELETE_REWARD
      - ADJUST_POINTS
      - EXPIRE_POINTS
      - OTHER
      - ACCUMULATE_PROMOTION_POINTS
    docs: The type of the loyalty event.
    source:
      openapi: openapi/openapi.json
  LoyaltyEventTypeFilter:
    docs: Filter events by event type.
    properties:
      types:
        docs: |-
          The loyalty event types used to filter the result.
          If multiple values are specified, the endpoint uses a 
          logical OR to combine them.
          See [LoyaltyEventType](#type-loyaltyeventtype) for possible values
        type: list<LoyaltyEventType>
    source:
      openapi: openapi/openapi.json
  LoyaltyProgram:
    docs: >-
      Represents a Square loyalty program. Loyalty programs define how buyers
      can earn points and redeem points for rewards. 

      Square sellers can have only one loyalty program, which is created and
      managed from the Seller Dashboard. 

      For more information, see [Loyalty Program
      Overview](https://developer.squareup.com/docs/loyalty/overview).
    properties:
      id:
        type: optional<string>
        docs: |-
          The Square-assigned ID of the loyalty program. Updates to 
          the loyalty program do not modify the identifier.
        validation:
          maxLength: 36
        access: read-only
      status:
        type: optional<LoyaltyProgramStatus>
        docs: >-
          Whether the program is currently active.

          See [LoyaltyProgramStatus](#type-loyaltyprogramstatus) for possible
          values
      reward_tiers:
        type: optional<nullable<list<LoyaltyProgramRewardTier>>>
        docs: The list of rewards for buyers, sorted by ascending points.
      expiration_policy:
        type: optional<LoyaltyProgramExpirationPolicy>
        docs: If present, details for how points expire.
      terminology:
        type: optional<LoyaltyProgramTerminology>
        docs: A cosmetic name for the “points” currency.
      location_ids:
        type: optional<nullable<list<string>>>
        docs: The [locations](entity:Location) at which the program is active.
      created_at:
        type: optional<string>
        docs: The timestamp when the program was created, in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: The timestamp when the reward was last updated, in RFC 3339 format.
        access: read-only
      accrual_rules:
        type: optional<nullable<list<LoyaltyProgramAccrualRule>>>
        docs: >-
          Defines how buyers can earn loyalty points from the base loyalty
          program.

          To check for associated [loyalty promotions](entity:LoyaltyPromotion)
          that enable

          buyers to earn extra points, call
          [ListLoyaltyPromotions](api-endpoint:Loyalty-ListLoyaltyPromotions).
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramAccrualRule:
    docs: >-
      Represents an accrual rule, which defines how buyers can earn points from
      the base [loyalty program](entity:LoyaltyProgram).
    properties:
      accrual_type:
        type: LoyaltyProgramAccrualRuleType
        docs: >-
          The type of the accrual rule that defines how buyers can earn points.

          See
          [LoyaltyProgramAccrualRuleType](#type-loyaltyprogramaccrualruletype)
          for possible values
      points:
        type: optional<nullable<integer>>
        docs: |-
          The number of points that 
          buyers earn based on the `accrual_type`.
        validation:
          min: 1
      visit_data:
        type: optional<LoyaltyProgramAccrualRuleVisitData>
        docs: Additional data for rules with the `VISIT` accrual type.
      spend_data:
        type: optional<LoyaltyProgramAccrualRuleSpendData>
        docs: Additional data for rules with the `SPEND` accrual type.
      item_variation_data:
        type: optional<LoyaltyProgramAccrualRuleItemVariationData>
        docs: Additional data for rules with the `ITEM_VARIATION` accrual type.
      category_data:
        type: optional<LoyaltyProgramAccrualRuleCategoryData>
        docs: Additional data for rules with the `CATEGORY` accrual type.
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramAccrualRuleCategoryData:
    docs: Represents additional data for rules with the `CATEGORY` accrual type.
    properties:
      category_id:
        type: string
        docs: >-
          The ID of the `CATEGORY` [catalog object](entity:CatalogObject) that
          buyers can purchase to earn

          points.
        validation:
          minLength: 1
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramAccrualRuleItemVariationData:
    docs: >-
      Represents additional data for rules with the `ITEM_VARIATION` accrual
      type.
    properties:
      item_variation_id:
        type: string
        docs: >-
          The ID of the `ITEM_VARIATION` [catalog object](entity:CatalogObject)
          that buyers can purchase to earn

          points.
        validation:
          minLength: 1
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramAccrualRuleSpendData:
    docs: Represents additional data for rules with the `SPEND` accrual type.
    properties:
      amount_money:
        type: Money
        docs: >-
          The amount that buyers must spend to earn points. 

          For example, given an "Earn 1 point for every $10 spent" accrual rule,
          a buyer who spends $105 earns 10 points.
      excluded_category_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The IDs of any `CATEGORY` catalog objects that are excluded from
          points accrual.


          You can use the
          [BatchRetrieveCatalogObjects](api-endpoint:Catalog-BatchRetrieveCatalogObjects)

          endpoint to retrieve information about the excluded categories.
      excluded_item_variation_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The IDs of any `ITEM_VARIATION` catalog objects that are excluded from
          points accrual.


          You can use the
          [BatchRetrieveCatalogObjects](api-endpoint:Catalog-BatchRetrieveCatalogObjects)

          endpoint to retrieve information about the excluded item variations.
      tax_mode:
        type: LoyaltyProgramAccrualRuleTaxMode
        docs: >-
          Indicates how taxes should be treated when calculating the purchase
          amount used for points accrual.

          See
          [LoyaltyProgramAccrualRuleTaxMode](#type-loyaltyprogramaccrualruletaxmode)
          for possible values
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramAccrualRuleTaxMode:
    enum:
      - BEFORE_TAX
      - AFTER_TAX
    docs: >-
      Indicates how taxes should be treated when calculating the purchase amount
      used for loyalty points accrual. 

      This setting applies only to `SPEND` accrual rules or `VISIT` accrual
      rules that have a minimum spend requirement.
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramAccrualRuleType:
    enum:
      - VISIT
      - SPEND
      - ITEM_VARIATION
      - CATEGORY
    docs: The type of the accrual rule that defines how buyers can earn points.
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramAccrualRuleVisitData:
    docs: Represents additional data for rules with the `VISIT` accrual type.
    properties:
      minimum_amount_money:
        type: optional<Money>
        docs: The minimum purchase required during the visit to quality for points.
      tax_mode:
        type: LoyaltyProgramAccrualRuleTaxMode
        docs: >-
          Indicates how taxes should be treated when calculating the purchase
          amount to determine whether the visit qualifies for points. 

          This setting applies only if `minimum_amount_money` is specified.

          See
          [LoyaltyProgramAccrualRuleTaxMode](#type-loyaltyprogramaccrualruletaxmode)
          for possible values
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramCreatedEvent:
    docs: Published when a [loyalty program](entity:LoyaltyProgram) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `loyalty.program.created`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID for the event, which is used for

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LoyaltyProgramCreatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramCreatedEventData:
    docs: The data associated with a `loyalty.program.created` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `loyalty_program`.
      id:
        type: optional<string>
        docs: The ID of the created loyalty program.
      object:
        type: optional<LoyaltyProgramCreatedEventObject>
        docs: An object that contains the loyalty program that was created.
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramCreatedEventObject:
    docs: >-
      An object that contains the loyalty program associated with a
      `loyalty.program.created` event.
    properties:
      loyalty_program:
        type: optional<LoyaltyProgram>
        docs: The loyalty program that was created.
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramExpirationPolicy:
    docs: Describes when the loyalty program expires.
    properties:
      expiration_duration:
        type: string
        docs: >-
          The number of months before points expire, in `P[n]M` RFC 3339
          duration format. For example, a value of `P12M` represents a duration
          of 12 months. 

          Points are valid through the last day of the month in which they are
          scheduled to expire. For example, with a  `P12M` duration, points
          earned on July 6, 2020 expire on August 1, 2021.
        validation:
          minLength: 1
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramRewardTier:
    docs: >-
      Represents a reward tier in a loyalty program. A reward tier defines how
      buyers can redeem points for a reward, such as the number of points
      required and the value and scope of the discount. A loyalty program can
      offer multiple reward tiers.
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the reward tier.
        validation:
          maxLength: 36
        access: read-only
      points:
        type: integer
        docs: The points exchanged for the reward tier.
        validation:
          min: 1
      name:
        type: optional<string>
        docs: The name of the reward tier.
        access: read-only
      created_at:
        type: optional<string>
        docs: The timestamp when the reward tier was created, in RFC 3339 format.
        access: read-only
      pricing_rule_reference:
        type: CatalogObjectReference
        docs: >-
          A reference to the specific version of a `PRICING_RULE` catalog object
          that contains information about the reward tier discount.


          Use `object_id` and `catalog_version` with the
          [RetrieveCatalogObject](api-endpoint:Catalog-RetrieveCatalogObject)
          endpoint

          to get discount details. Make sure to set `include_related_objects` to
          true in the request to retrieve all catalog objects

          that define the discount. For more information, see [Getting discount
          details for a reward
          tier](https://developer.squareup.com/docs/loyalty-api/loyalty-rewards#get-discount-details).
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramStatus:
    enum:
      - INACTIVE
      - ACTIVE
    docs: Indicates whether the program is currently active.
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramTerminology:
    docs: Represents the naming used for loyalty points.
    properties:
      one:
        type: string
        docs: A singular unit for a point (for example, 1 point is called 1 star).
        validation:
          minLength: 1
      other:
        type: string
        docs: A plural unit for point (for example, 10 points is called 10 stars).
        validation:
          minLength: 1
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramUpdatedEvent:
    docs: Published when a [loyalty program](entity:LoyaltyProgram) is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `loyalty.program.updated`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID for the event, which is used for

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LoyaltyProgramUpdatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramUpdatedEventData:
    docs: The data associated with a `loyalty.program.updated` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `loyalty_program`.
      id:
        type: optional<string>
        docs: The ID of the affected loyalty program.
      object:
        type: optional<LoyaltyProgramUpdatedEventObject>
        docs: An object that contains the loyalty program that was updated.
    source:
      openapi: openapi/openapi.json
  LoyaltyProgramUpdatedEventObject:
    docs: >-
      An object that contains the loyalty program associated with a
      `loyalty.program.updated` event.
    properties:
      loyalty_program:
        type: optional<LoyaltyProgram>
        docs: The loyalty program that was updated.
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotion:
    docs: >-
      Represents a promotion for a [loyalty program](entity:LoyaltyProgram).
      Loyalty promotions enable buyers

      to earn extra points on top of those earned from the base program.


      A loyalty program can have a maximum of 10 loyalty promotions with an
      `ACTIVE` or `SCHEDULED` status.
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the promotion.
        validation:
          minLength: 1
          maxLength: 255
        access: read-only
      name:
        type: string
        docs: The name of the promotion.
        validation:
          minLength: 1
          maxLength: 70
      incentive:
        type: LoyaltyPromotionIncentive
        docs: >-
          The points incentive for the promotion. This field defines whether
          promotion points

          are earned by multiplying base program points or by adding a specified
          number of points.
      available_time:
        type: LoyaltyPromotionAvailableTimeData
        docs: >-
          The scheduling information that defines when purchases can qualify to
          earn points from an `ACTIVE` promotion.
      trigger_limit:
        type: optional<LoyaltyPromotionTriggerLimit>
        docs: >-
          The number of times a buyer can earn promotion points during a
          specified interval.

          If not specified, buyers can trigger the promotion an unlimited number
          of times.
      status:
        type: optional<LoyaltyPromotionStatus>
        docs: >-
          The current status of the promotion.

          See [LoyaltyPromotionStatus](#type-loyaltypromotionstatus) for
          possible values
      created_at:
        type: optional<string>
        docs: The timestamp of when the promotion was created, in RFC 3339 format.
        access: read-only
      canceled_at:
        type: optional<string>
        docs: The timestamp of when the promotion was canceled, in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: The timestamp when the promotion was last updated, in RFC 3339 format.
        access: read-only
      loyalty_program_id:
        type: optional<string>
        docs: >-
          The ID of the [loyalty program](entity:LoyaltyProgram) associated with
          the promotion.
        access: read-only
      minimum_spend_amount_money:
        type: optional<Money>
        docs: >-
          The minimum purchase amount required to earn promotion points. If
          specified, this amount is positive.
      qualifying_item_variation_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The IDs of any qualifying `ITEM_VARIATION` [catalog
          objects](entity:CatalogObject). If specified,

          the purchase must include at least one of these items to qualify for
          the promotion.


          This option is valid only if the base loyalty program uses a `VISIT`
          or `SPEND` accrual rule.

          With `SPEND` accrual rules, make sure that qualifying promotional
          items are not excluded.


          You can specify `qualifying_item_variation_ids` or
          `qualifying_category_ids` for a given promotion, but not both.
      qualifying_category_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          The IDs of any qualifying `CATEGORY` [catalog
          objects](entity:CatalogObject). If specified,

          the purchase must include at least one item from one of these
          categories to qualify for the promotion.


          This option is valid only if the base loyalty program uses a `VISIT`
          or `SPEND` accrual rule.

          With `SPEND` accrual rules, make sure that qualifying promotional
          items are not excluded.


          You can specify `qualifying_category_ids` or
          `qualifying_item_variation_ids` for a promotion, but not both.
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionAvailableTimeData:
    docs: >-
      Represents scheduling information that determines when purchases can
      qualify to earn points

      from a [loyalty promotion](entity:LoyaltyPromotion).
    properties:
      start_date:
        type: optional<string>
        docs: >-
          The date that the promotion starts, in `YYYY-MM-DD` format. Square
          populates this field

          based on the provided `time_periods`.
        access: read-only
      end_date:
        type: optional<string>
        docs: >-
          The date that the promotion ends, in `YYYY-MM-DD` format. Square
          populates this field

          based on the provided `time_periods`. If an end date is not specified,
          an `ACTIVE` promotion

          remains available until it is canceled.
        access: read-only
      time_periods:
        docs: >-
          A list of [iCalendar (RFC 5545)
          events](https://tools.ietf.org/html/rfc5545#section-3.6.1)

          (`VEVENT`). Each event represents an available time period per day or
          days of the week. 

          A day can have a maximum of one available time period.


          Only `DTSTART`, `DURATION`, and `RRULE` are supported. `DTSTART` and
          `DURATION` are required and

          timestamps must be in local (unzoned) time format. Include `RRULE` to
          specify recurring promotions,

          an end date (using the `UNTIL` keyword), or both. For more
          information, see

          [Available
          time](https://developer.squareup.com/docs/loyalty-api/loyalty-promotions#available-time).


          Note that `BEGIN:VEVENT` and `END:VEVENT` are optional in a
          `CreateLoyaltyPromotion` request

          but are always included in the response.
        type: list<string>
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionCreatedEvent:
    docs: Published when a [loyalty promotion](entity:LoyaltyPromotion) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `loyalty.promotion.created`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID for the event, which is used for

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LoyaltyPromotionCreatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionCreatedEventData:
    docs: The data associated with a `loyalty.promotion.created` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `loyalty_promotion`.
      id:
        type: optional<string>
        docs: The ID of the affected loyalty promotion.
      object:
        type: optional<LoyaltyPromotionCreatedEventObject>
        docs: An object that contains the loyalty promotion that was created.
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionCreatedEventObject:
    docs: >-
      An object that contains the loyalty promotion associated with a
      `loyalty.promotion.created` event.
    properties:
      loyalty_promotion:
        type: optional<LoyaltyPromotion>
        docs: The loyalty promotion that was created.
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionIncentive:
    docs: >-
      Represents how points for a [loyalty promotion](entity:LoyaltyPromotion)
      are calculated,

      either by multiplying the points earned from the base program or by adding
      a specified number

      of points to the points earned from the base program.
    properties:
      type:
        type: LoyaltyPromotionIncentiveType
        docs: >-
          The type of points incentive.

          See
          [LoyaltyPromotionIncentiveType](#type-loyaltypromotionincentivetype)
          for possible values
      points_multiplier_data:
        type: optional<LoyaltyPromotionIncentivePointsMultiplierData>
        docs: Additional data for a `POINTS_MULTIPLIER` incentive type.
      points_addition_data:
        type: optional<LoyaltyPromotionIncentivePointsAdditionData>
        docs: Additional data for a `POINTS_ADDITION` incentive type.
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionIncentivePointsAdditionData:
    docs: >-
      Represents the metadata for a `POINTS_ADDITION` type of [loyalty promotion
      incentive](entity:LoyaltyPromotionIncentive).
    properties:
      points_addition:
        type: integer
        docs: >-
          The number of additional points to earn each time the promotion is
          triggered. For example,

          suppose a purchase qualifies for 5 points from the base loyalty
          program. If the purchase also

          qualifies for a `POINTS_ADDITION` promotion incentive with a
          `points_addition` of 3, the buyer

          earns a total of 8 points (5 program points + 3 promotion points = 8
          points).
        validation:
          min: 1
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionIncentivePointsMultiplierData:
    docs: >-
      Represents the metadata for a `POINTS_MULTIPLIER` type of [loyalty
      promotion incentive](entity:LoyaltyPromotionIncentive).
    properties:
      points_multiplier:
        type: optional<nullable<integer>>
        docs: >-
          The multiplier used to calculate the number of points earned each time
          the promotion

          is triggered. For example, suppose a purchase qualifies for 5 points
          from the base loyalty program.

          If the purchase also qualifies for a `POINTS_MULTIPLIER` promotion
          incentive with a `points_multiplier`

          of 3, the buyer earns a total of 15 points (5 program points x 3
          promotion multiplier = 15 points).


          DEPRECATED at version 2023-08-16. Replaced by the `multiplier` field.


          One of the following is required when specifying a points multiplier:

          - (Recommended) The `multiplier` field.

          - This deprecated `points_multiplier` field. If provided in the
          request, Square also returns `multiplier`

          with the equivalent value.
        validation:
          min: 2
          max: 10
      multiplier:
        type: optional<nullable<string>>
        docs: >-
          The multiplier used to calculate the number of points earned each time
          the promotion is triggered,

          specified as a string representation of a decimal. Square supports
          multipliers up to 10x, with three

          point precision for decimal multipliers. For example, suppose a
          purchase qualifies for 4 points from the

          base loyalty program. If the purchase also qualifies for a
          `POINTS_MULTIPLIER` promotion incentive with a

          `multiplier` of "1.5", the buyer earns a total of 6 points (4 program
          points x 1.5 promotion multiplier = 6 points).

          Fractional points are dropped.


          One of the following is required when specifying a points multiplier:

          - (Recommended) This `multiplier` field.

          - The deprecated `points_multiplier` field. If provided in the
          request, Square also returns `multiplier`

          with the equivalent value.
        validation:
          maxLength: 5
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionIncentiveType:
    enum:
      - POINTS_MULTIPLIER
      - POINTS_ADDITION
    docs: >-
      Indicates the type of points incentive for a [loyalty
      promotion](entity:LoyaltyPromotion),

      which is used to determine how buyers can earn points from the promotion.
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionStatus:
    enum:
      - ACTIVE
      - ENDED
      - CANCELED
      - SCHEDULED
    docs: Indicates the status of a [loyalty promotion](entity:LoyaltyPromotion).
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionTriggerLimit:
    docs: >-
      Represents the number of times a buyer can earn points during a [loyalty
      promotion](entity:LoyaltyPromotion).

      If this field is not set, buyers can trigger the promotion an unlimited
      number of times to earn points during

      the time that the promotion is available.


      A purchase that is disqualified from earning points because of this limit
      might qualify for another active promotion.
    properties:
      times:
        type: integer
        docs: >-
          The maximum number of times a buyer can trigger the promotion during
          the specified `interval`.
        validation:
          min: 1
          max: 30
      interval:
        type: optional<LoyaltyPromotionTriggerLimitInterval>
        docs: >-
          The time period the limit applies to.

          See
          [LoyaltyPromotionTriggerLimitInterval](#type-loyaltypromotiontriggerlimitinterval)
          for possible values
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionTriggerLimitInterval:
    enum:
      - ALL_TIME
      - DAY
    docs: >-
      Indicates the time period that the [trigger
      limit](entity:LoyaltyPromotionTriggerLimit) applies to,

      which is used to determine the number of times a buyer can earn points for
      a [loyalty promotion](entity:LoyaltyPromotion).
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionUpdatedEvent:
    docs: >-
      Published when a [loyalty promotion](entity:LoyaltyPromotion) is updated.
      This event is

      invoked only when a loyalty promotion is canceled.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the Square seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event. For this event, the value is
          `loyalty.promotion.updated`.
      event_id:
        type: optional<nullable<string>>
        docs: >-
          The unique ID for the event, which is used for

          [idempotency
          support](https://developer.squareup.com/docs/webhooks/step4manage#webhooks-best-practices).
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<LoyaltyPromotionUpdatedEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionUpdatedEventData:
    docs: The data associated with a `loyalty.promotion.updated` event.
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of object affected by the event. For this event, the value is
          `loyalty_promotion`.
      id:
        type: optional<string>
        docs: The ID of the affected loyalty promotion.
      object:
        type: optional<LoyaltyPromotionUpdatedEventObject>
        docs: An object that contains the loyalty promotion that was updated.
    source:
      openapi: openapi/openapi.json
  LoyaltyPromotionUpdatedEventObject:
    docs: >-
      An object that contains the loyalty promotion associated with a
      `loyalty.promotion.updated` event.
    properties:
      loyalty_promotion:
        type: optional<LoyaltyPromotion>
        docs: The loyalty promotion that was updated.
    source:
      openapi: openapi/openapi.json
  LoyaltyReward:
    docs: >-
      Represents a contract to redeem loyalty points for a [reward
      tier](entity:LoyaltyProgramRewardTier) discount. Loyalty rewards can be in
      an ISSUED, REDEEMED, or DELETED state. 

      For more information, see [Manage loyalty
      rewards](https://developer.squareup.com/docs/loyalty-api/loyalty-rewards).
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the loyalty reward.
        validation:
          maxLength: 36
        access: read-only
      status:
        type: optional<LoyaltyRewardStatus>
        docs: >-
          The status of a loyalty reward.

          See [LoyaltyRewardStatus](#type-loyaltyrewardstatus) for possible
          values
      loyalty_account_id:
        type: string
        docs: >-
          The Square-assigned ID of the [loyalty account](entity:LoyaltyAccount)
          to which the reward belongs.
        validation:
          minLength: 1
          maxLength: 36
      reward_tier_id:
        type: string
        docs: >-
          The Square-assigned ID of the [reward
          tier](entity:LoyaltyProgramRewardTier) used to create the reward.
        validation:
          minLength: 1
          maxLength: 36
      points:
        type: optional<integer>
        docs: The number of loyalty points used for the reward.
        validation:
          min: 1
        access: read-only
      order_id:
        type: optional<nullable<string>>
        docs: >-
          The Square-assigned ID of the [order](entity:Order) to which the
          reward is attached.
      created_at:
        type: optional<string>
        docs: The timestamp when the reward was created, in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: The timestamp when the reward was last updated, in RFC 3339 format.
        access: read-only
      redeemed_at:
        type: optional<string>
        docs: The timestamp when the reward was redeemed, in RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  LoyaltyRewardStatus:
    enum:
      - ISSUED
      - REDEEMED
      - DELETED
    docs: The status of the loyalty reward.
    source:
      openapi: openapi/openapi.json
  MeasurementUnit:
    docs: >-
      Represents a unit of measurement to use with a quantity, such as ounces

      or inches. Exactly one of the following fields are required:
      `custom_unit`,

      `area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.
    properties:
      custom_unit:
        type: optional<MeasurementUnitCustom>
        docs: >-
          A custom unit of measurement defined by the seller using the Point of
          Sale

          app or ad-hoc as an order line item.
      area_unit:
        type: optional<MeasurementUnitArea>
        docs: >-
          Represents a standard area unit.

          See [MeasurementUnitArea](#type-measurementunitarea) for possible
          values
      length_unit:
        type: optional<MeasurementUnitLength>
        docs: >-
          Represents a standard length unit.

          See [MeasurementUnitLength](#type-measurementunitlength) for possible
          values
      volume_unit:
        type: optional<MeasurementUnitVolume>
        docs: >-
          Represents a standard volume unit.

          See [MeasurementUnitVolume](#type-measurementunitvolume) for possible
          values
      weight_unit:
        type: optional<MeasurementUnitWeight>
        docs: >-
          Represents a standard unit of weight or mass.

          See [MeasurementUnitWeight](#type-measurementunitweight) for possible
          values
      generic_unit:
        type: optional<MeasurementUnitGeneric>
        docs: >-
          Reserved for API integrations that lack the ability to specify a real
          measurement unit

          See [MeasurementUnitGeneric](#type-measurementunitgeneric) for
          possible values
      time_unit:
        type: optional<MeasurementUnitTime>
        docs: >-
          Represents a standard unit of time.

          See [MeasurementUnitTime](#type-measurementunittime) for possible
          values
      type:
        type: optional<MeasurementUnitUnitType>
        docs: >-
          Represents the type of the measurement unit.

          See [MeasurementUnitUnitType](#type-measurementunitunittype) for
          possible values
    source:
      openapi: openapi/openapi.json
  MeasurementUnitArea:
    enum:
      - IMPERIAL_ACRE
      - IMPERIAL_SQUARE_INCH
      - IMPERIAL_SQUARE_FOOT
      - IMPERIAL_SQUARE_YARD
      - IMPERIAL_SQUARE_MILE
      - METRIC_SQUARE_CENTIMETER
      - METRIC_SQUARE_METER
      - METRIC_SQUARE_KILOMETER
    docs: Unit of area used to measure a quantity.
    source:
      openapi: openapi/openapi.json
  MeasurementUnitCustom:
    docs: The information needed to define a custom unit, provided by the seller.
    properties:
      name:
        type: string
        docs: The name of the custom unit, for example "bushel".
      abbreviation:
        type: string
        docs: >-
          The abbreviation of the custom unit, such as "bsh" (bushel). This
          appears

          in the cart for the Point of Sale app, and in reports.
    source:
      openapi: openapi/openapi.json
  MeasurementUnitGeneric: literal<"UNIT">
  MeasurementUnitLength:
    enum:
      - IMPERIAL_INCH
      - IMPERIAL_FOOT
      - IMPERIAL_YARD
      - IMPERIAL_MILE
      - METRIC_MILLIMETER
      - METRIC_CENTIMETER
      - METRIC_METER
      - METRIC_KILOMETER
    docs: The unit of length used to measure a quantity.
    source:
      openapi: openapi/openapi.json
  MeasurementUnitTime:
    enum:
      - GENERIC_MILLISECOND
      - GENERIC_SECOND
      - GENERIC_MINUTE
      - GENERIC_HOUR
      - GENERIC_DAY
    docs: Unit of time used to measure a quantity (a duration).
    source:
      openapi: openapi/openapi.json
  MeasurementUnitUnitType:
    enum:
      - TYPE_CUSTOM
      - TYPE_AREA
      - TYPE_LENGTH
      - TYPE_VOLUME
      - TYPE_WEIGHT
      - TYPE_GENERIC
    docs: >-
      Describes the type of this unit and indicates which field contains the
      unit information. This is an ‘open’ enum.
    source:
      openapi: openapi/openapi.json
  MeasurementUnitVolume:
    enum:
      - GENERIC_FLUID_OUNCE
      - GENERIC_SHOT
      - GENERIC_CUP
      - GENERIC_PINT
      - GENERIC_QUART
      - GENERIC_GALLON
      - IMPERIAL_CUBIC_INCH
      - IMPERIAL_CUBIC_FOOT
      - IMPERIAL_CUBIC_YARD
      - METRIC_MILLILITER
      - METRIC_LITER
    docs: The unit of volume used to measure a quantity.
    source:
      openapi: openapi/openapi.json
  MeasurementUnitWeight:
    enum:
      - IMPERIAL_WEIGHT_OUNCE
      - IMPERIAL_POUND
      - IMPERIAL_STONE
      - METRIC_MILLIGRAM
      - METRIC_GRAM
      - METRIC_KILOGRAM
    docs: Unit of weight used to measure a quantity.
    source:
      openapi: openapi/openapi.json
  Merchant:
    docs: Represents a business that sells with Square.
    properties:
      id:
        type: optional<string>
        docs: The Square-issued ID of the merchant.
      business_name:
        type: optional<nullable<string>>
        docs: The name of the merchant's overall business.
      country:
        type: Country
        docs: >-
          The country code associated with the merchant, in the two-letter
          format of ISO 3166. For example, `US` or `JP`.

          See [Country](#type-country) for possible values
      language_code:
        type: optional<nullable<string>>
        docs: >-
          The code indicating the [language
          preferences](https://developer.squareup.com/docs/build-basics/general-considerations/language-preferences)
          of the merchant, in [BCP 47
          format](https://tools.ietf.org/html/bcp47#appendix-A). For example,
          `en-US` or `fr-CA`.
      currency:
        type: optional<Currency>
        docs: >-
          The currency associated with the merchant, in ISO 4217 format. For
          example, the currency code for US dollars is `USD`.

          See [Currency](#type-currency) for possible values
      status:
        type: optional<MerchantStatus>
        docs: |-
          The merchant's status.
          See [MerchantStatus](#type-merchantstatus) for possible values
      main_location_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the [main
          `Location`](https://developer.squareup.com/docs/locations-api#about-the-main-location)
          for this merchant.
      created_at:
        type: optional<string>
        docs: |-
          The time when the merchant was created, in RFC 3339 format.
             For more information, see [Working with Dates](https://developer.squareup.com/docs/build-basics/working-with-dates).
        access: read-only
    source:
      openapi: openapi/openapi.json
  MerchantCustomAttributeDefinitionOwnedCreatedEvent:
    docs: >-
      Published when a merchant [custom attribute
      definition](entity:CustomAttributeDefinition)

      is created by the subscribing application. Subscribe to this event to be
      notified

      when your application creates a merchant custom attribute definition.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"merchant.custom_attribute_definition.owned.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  MerchantCustomAttributeDefinitionOwnedDeletedEvent:
    docs: >-
      Published when a merchant [custom attribute
      definition](entity:CustomAttributeDefinition)

      is deleted by the subscribing application. Subscribe to this event to be
      notified

      when your application deletes a merchant custom attribute definition.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"merchant.custom_attribute_definition.owned.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  MerchantCustomAttributeDefinitionOwnedUpdatedEvent:
    docs: >-
      Published when a merchant [custom attribute
      definition](entity:CustomAttributeDefinition)

      is updated by the subscribing application. Subscribe to this event to be
      notified

      when your application updates a merchant custom attribute definition.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"merchant.custom_attribute_definition.owned.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  MerchantCustomAttributeDefinitionVisibleCreatedEvent:
    docs: >-
      Published when a merchant [custom attribute
      definition](entity:CustomAttributeDefinition)

      that is visible to the subscribing application is created. A notification
      is sent when your application

      creates a custom attribute definition or another application creates a
      custom attribute definition whose

      `visibility` is `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"merchant.custom_attribute_definition.visible.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  MerchantCustomAttributeDefinitionVisibleDeletedEvent:
    docs: >-
      Published when a merchant [custom attribute
      definition](entity:CustomAttributeDefinition)

      that is visible to the subscribing application is deleted. A notification
      is sent when your application

      deletes a custom attribute definition or another application deletes a
      custom attribute definition whose

      `visibility` is `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"merchant.custom_attribute_definition.visible.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  MerchantCustomAttributeDefinitionVisibleUpdatedEvent:
    docs: >-
      Published when a merchant [custom attribute
      definition](entity:CustomAttributeDefinition)

      that is visible to the subscribing application is updated. A notification
      is sent when your application

      updates a custom attribute definition or another application updates a
      custom attribute definition whose

      `visibility` is `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"merchant.custom_attribute_definition.visible.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  MerchantCustomAttributeOwnedDeletedEvent:
    docs: >-
      Published when a merchant [custom attribute](entity:CustomAttribute)

      associated with a [custom attribute
      definition](entity:CustomAttributeDefinition) that is

      owned by the subscribing application is deleted. Subscribe to this event
      to be notified

      when your application deletes a merchant custom attribute.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"merchant.custom_attribute.owned.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  MerchantCustomAttributeOwnedUpdatedEvent:
    docs: >-
      Published when a merchant [custom attribute](entity:CustomAttribute)

      associated with a [custom attribute
      definition](entity:CustomAttributeDefinition) that is

      owned by the subscribing application is updated. Subscribe to this event
      to be notified

      when your application updates a merchant custom attribute.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"merchant.custom_attribute.owned.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  MerchantCustomAttributeVisibleDeletedEvent:
    docs: >-
      Published when a merchant [custom attribute](entity:CustomAttribute) with

      the `visibility` field set to `VISIBILITY_READ_ONLY` or
      `VISIBILITY_READ_WRITE_VALUES` is deleted.

      An application that subscribes to this event is notified when a merchant
      custom attribute is deleted

      by any application for which the subscribing application has read access
      to the merchant custom attribute.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"merchant.custom_attribute.visible.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  MerchantCustomAttributeVisibleUpdatedEvent:
    docs: >-
      Published when a merchant [custom attribute](entity:CustomAttribute) with

      the `visibility` field set to `VISIBILITY_READ_ONLY` or
      `VISIBILITY_READ_WRITE_VALUES` is updated.

      An application that subscribes to this event is notified when a merchant
      custom attribute is updated

      by any application for which the subscribing application has read access
      to the merchant custom attribute.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the seller associated with the event that triggered the
          event notification.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"merchant.custom_attribute.visible.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event notification.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp that indicates when the event notification was created,
          in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: >-
          The data associated with the event that triggered the event
          notification.
    source:
      openapi: openapi/openapi.json
  MerchantSettingsUpdatedEvent:
    docs: Published when online checkout merchant settings are updated
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event this represents,
          `"online_checkout.merchant_settings.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: RFC 3339 timestamp of when the event was created.
        access: read-only
      data:
        type: optional<MerchantSettingsUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  MerchantSettingsUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: >-
          Name of the updated object’s type,
          `"online_checkout.merchant_settings"`.
      id:
        type: optional<string>
        docs: ID of the updated merchant settings.
      object:
        type: optional<MerchantSettingsUpdatedEventObject>
        docs: An object containing the updated merchant settings.
    source:
      openapi: openapi/openapi.json
  MerchantSettingsUpdatedEventObject:
    properties:
      merchant_settings:
        type: optional<CheckoutMerchantSettings>
        docs: The updated merchant settings.
    source:
      openapi: openapi/openapi.json
  MerchantStatus:
    enum:
      - ACTIVE
      - INACTIVE
    source:
      openapi: openapi/openapi.json
  ModifierLocationOverrides:
    docs: >-
      Location-specific overrides for specified properties of a
      `CatalogModifier` object.
    properties:
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the `Location` object representing the location. This can
          include a deactivated location.
      price_money:
        type: optional<Money>
        docs: >-
          The overridden price at the specified location. If this is
          unspecified, the modifier price is not overridden.

          The modifier becomes free of charge at the specified location, when
          this `price_money` field is set to 0.
      sold_out:
        type: optional<boolean>
        docs: >-
          Indicates whether the modifier is sold out at the specified location
          or not. As an example, for cheese (modifier) burger (item), when the
          modifier is sold out, it is the cheese, but not the burger, that is
          sold out.

          The seller can manually set this sold out status. Attempts by an
          application to set this attribute are ignored.
        access: read-only
    source:
      openapi: openapi/openapi.json
  Money:
    docs: >-
      Represents an amount of money. `Money` fields can be signed or unsigned.

      Fields that do not explicitly define whether they are signed or unsigned
      are

      considered unsigned and can only hold positive amounts. For signed fields,
      the

      sign of the value indicates the purpose of the money transfer. See

      [Working with Monetary
      Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)

      for more information.
    properties:
      amount:
        type: optional<nullable<long>>
        docs: >-
          The amount of money, in the smallest denomination of the currency

          indicated by `currency`. For example, when `currency` is `USD`,
          `amount` is

          in cents. Monetary amounts can be positive or negative. See the
          specific

          field description to determine the meaning of the sign in a particular
          case.
      currency:
        type: optional<Currency>
        docs: >-
          The type of currency, in __ISO 4217 format__. For example, the
          currency

          code for US dollars is `USD`.


          See [Currency](entity:Currency) for possible values.

          See [Currency](#type-currency) for possible values
    source:
      openapi: openapi/openapi.json
  OauthAuthorizationRevokedEvent:
    docs: >-
      Published when a merchant/application revokes all access tokens and
      refresh tokens granted to an application.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"oauth.authorization.revoked"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<OauthAuthorizationRevokedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  OauthAuthorizationRevokedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"revocation"`.
      id:
        type: optional<string>
        docs: Not applicable, revocation is not an object
      object:
        type: optional<OauthAuthorizationRevokedEventObject>
        docs: An object containing information about revocation event.
    source:
      openapi: openapi/openapi.json
  OauthAuthorizationRevokedEventObject:
    properties:
      revocation:
        type: optional<OauthAuthorizationRevokedEventRevocationObject>
        docs: The revocation event.
    source:
      openapi: openapi/openapi.json
  OauthAuthorizationRevokedEventRevocationObject:
    properties:
      revoked_at:
        type: optional<nullable<string>>
        docs: Timestamp of when the revocation event occurred, in RFC 3339 format.
      revoker_type:
        type: optional<OauthAuthorizationRevokedEventRevokerType>
        docs: >-
          Type of client that performed the revocation, either APPLICATION,
          MERCHANT, or SQUARE.

          See
          [OauthAuthorizationRevokedEventRevokerType](#type-oauthauthorizationrevokedeventrevokertype)
          for possible values
    source:
      openapi: openapi/openapi.json
  OauthAuthorizationRevokedEventRevokerType:
    enum:
      - APPLICATION
      - MERCHANT
      - SQUARE
    docs: Defines the possible types for the revoking client.
    source:
      openapi: openapi/openapi.json
  ObtainTokenResponse:
    docs: Represents an [ObtainToken](api-endpoint:OAuth-ObtainToken) response.
    properties:
      access_token:
        type: optional<string>
        docs: >-
          An OAuth access token used to authorize Square API requests on behalf
          of the seller.

          Include this token as a bearer token in the `Authorization` header of
          your API requests.


          OAuth access tokens expire in 30 days (except `short_lived` access
          tokens). You should call

          `ObtainToken` and provide the returned `refresh_token` to get a new
          access token well before

          the current one expires. For more information, see [OAuth API:
          Walkthrough](https://developer.squareup.com/docs/oauth-api/walkthrough).
        validation:
          minLength: 2
          maxLength: 1024
      token_type:
        type: optional<string>
        docs: The type of access token. This value is always `bearer`.
        validation:
          minLength: 2
          maxLength: 10
      expires_at:
        type: optional<string>
        docs: >-
          The timestamp of when the `access_token` expires, in [ISO
          8601](http://www.iso.org/iso/home/standards/iso8601.htm) format.
        validation:
          minLength: 20
          maxLength: 48
      merchant_id:
        type: optional<string>
        docs: >-
          The ID of the authorizing [merchant](entity:Merchant) (seller), which
          represents a business.
        validation:
          minLength: 8
          maxLength: 191
      subscription_id:
        type: optional<string>
        docs: >-
          __LEGACY__ The ID of merchant's subscription.

          The ID is only present if the merchant signed up for a subscription
          plan during authorization.
      plan_id:
        type: optional<string>
        docs: >-
          __LEGACY__ The ID of the subscription plan the merchant signed

          up for. The ID is only present if the merchant signed up for a
          subscription plan during

          authorization.
      id_token:
        type: optional<string>
        docs: >-
          The OpenID token that belongs to this person. This token is only
          present if the

          `OPENID` scope is included in the authorization request.


          Deprecated at version 2021-09-15. Square doesn't support OpenID or
          other single sign-on (SSO)

          protocols on top of OAuth.
      refresh_token:
        type: optional<string>
        docs: >-
          A refresh token that can be used in an `ObtainToken` request to
          generate a new access token.


          With the code flow:

          - For the `authorization_code` grant type, the refresh token is
          multi-use and never expires.

          - For the `refresh_token` grant type, the response returns the same
          refresh token.


          With the PKCE flow:

          - For the `authorization_code` grant type, the refresh token is
          single-use and expires in 90 days.

          - For the `refresh_token` grant type, the refresh token is a new
          single-use refresh token that expires in 90 days.


          For more information, see [Refresh, Revoke, and Limit the Scope of
          OAuth
          Tokens](https://developer.squareup.com/docs/oauth-api/refresh-revoke-limit-scope).
        validation:
          minLength: 2
          maxLength: 1024
      short_lived:
        type: optional<boolean>
        docs: >-
          Indicates whether the access_token is short lived. If `true`, the
          access token expires

          in 24 hours. If `false`, the access token expires in 30 days.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      refresh_token_expires_at:
        type: optional<string>
        docs: >-
          The timestamp of when the `refresh_token` expires, in [ISO
          8601](http://www.iso.org/iso/home/standards/iso8601.htm)

          format.


          This field is only returned for the PKCE flow.
        validation:
          minLength: 20
          maxLength: 48
    source:
      openapi: openapi/openapi.json
  OfflinePaymentDetails:
    docs: Details specific to offline payments.
    properties:
      client_created_at:
        type: optional<string>
        docs: >-
          The client-side timestamp of when the offline payment was created, in
          RFC 3339 format.
        validation:
          maxLength: 32
        access: read-only
    source:
      openapi: openapi/openapi.json
  Order:
    docs: >-
      Contains all information related to a single order to process with Square,

      including line items that specify the products to purchase. `Order`
      objects also

      include information about any associated tenders, refunds, and returns.


      All Connect V2 Transactions have all been converted to Orders including
      all associated

      itemization data.
    properties:
      id:
        type: optional<string>
        docs: The order's unique ID.
        access: read-only
      location_id:
        type: string
        docs: The ID of the seller location that this order is associated with.
        validation:
          minLength: 1
      reference_id:
        type: optional<nullable<string>>
        docs: |-
          A client-specified ID to associate an entity in another system
          with this order.
        validation:
          maxLength: 40
      source:
        type: optional<OrderSource>
        docs: The origination details of the order.
      customer_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the [customer](entity:Customer) associated with the order.


          You should specify a `customer_id` on the order (or the payment) to
          ensure that transactions

          are reliably linked to customers. Omitting this field might result in
          the creation of new

          [instant
          profiles](https://developer.squareup.com/docs/customers-api/what-it-does#instant-profiles).
        validation:
          maxLength: 191
      line_items:
        type: optional<nullable<list<OrderLineItem>>>
        docs: The line items included in the order.
      taxes:
        type: optional<nullable<list<OrderLineItemTax>>>
        docs: >-
          The list of all taxes associated with the order.


          Taxes can be scoped to either `ORDER` or `LINE_ITEM`. For taxes with
          `LINE_ITEM` scope, an

          `OrderLineItemAppliedTax` must be added to each line item that the tax
          applies to. For taxes

          with `ORDER` scope, the server generates an `OrderLineItemAppliedTax`
          for every line item.


          On reads, each tax in the list includes the total amount of that tax
          applied to the order.


          __IMPORTANT__: If `LINE_ITEM` scope is set on any taxes in this field,
          using the deprecated

          `line_items.taxes` field results in an error. Use
          `line_items.applied_taxes`

          instead.
      discounts:
        type: optional<nullable<list<OrderLineItemDiscount>>>
        docs: >-
          The list of all discounts associated with the order.


          Discounts can be scoped to either `ORDER` or `LINE_ITEM`. For
          discounts scoped to `LINE_ITEM`,

          an `OrderLineItemAppliedDiscount` must be added to each line item that
          the discount applies to.

          For discounts with `ORDER` scope, the server generates an
          `OrderLineItemAppliedDiscount`

          for every line item.


          __IMPORTANT__: If `LINE_ITEM` scope is set on any discounts in this
          field, using the deprecated

          `line_items.discounts` field results in an error. Use
          `line_items.applied_discounts`

          instead.
      service_charges:
        type: optional<nullable<list<OrderServiceCharge>>>
        docs: A list of service charges applied to the order.
      fulfillments:
        type: optional<nullable<list<Fulfillment>>>
        docs: >-
          Details about order fulfillment.


          Orders can only be created with at most one fulfillment. However,
          orders returned

          by the API might contain multiple fulfillments.
      returns:
        type: optional<list<OrderReturn>>
        docs: >-
          A collection of items from sale orders being returned in this one.
          Normally part of an

          itemized return or exchange. There is exactly one `Return` object per
          sale `Order` being

          referenced.
        access: read-only
      return_amounts:
        type: optional<OrderMoneyAmounts>
        docs: The rollup of the returned money amounts.
      net_amounts:
        type: optional<OrderMoneyAmounts>
        docs: The net money amounts (sale money - return money).
      rounding_adjustment:
        type: optional<OrderRoundingAdjustment>
        docs: >-
          A positive rounding adjustment to the total of the order. This
          adjustment is commonly

          used to apply cash rounding when the minimum unit of account is
          smaller than the lowest physical

          denomination of the currency.
      tenders:
        type: optional<list<Tender>>
        docs: The tenders that were used to pay for the order.
        access: read-only
      refunds:
        type: optional<list<Refund>>
        docs: The refunds that are part of this order.
        access: read-only
      metadata:
        type: optional<nullable<map<string, optional<nullable<string>>>>>
        docs: >-
          Application-defined data attached to this order. Metadata fields are
          intended

          to store descriptive references or associations with an entity in
          another system or store brief

          information about the object. Square does not process this field; it
          only stores and returns it

          in relevant API calls. Do not use metadata to store any sensitive
          information (such as personally

          identifiable information or card details).


          Keys written by applications must be 60 characters or less and must be
          in the character set

          `[a-zA-Z0-9_-]`. Entries can also include metadata generated by
          Square. These keys are prefixed

          with a namespace, separated from the key with a ':' character.


          Values have a maximum length of 255 characters.


          An application can have up to 10 entries per metadata field.


          Entries written by applications are private and can only be read or
          modified by the same

          application.


          For more information, see 
          [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
      created_at:
        type: optional<string>
        docs: >-
          The timestamp for when the order was created, at server side, in RFC
          3339 format (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp for when the order was last updated, at server side, in
          RFC 3339 format (for example, "2016-09-04T23:59:33.123Z").
        access: read-only
      closed_at:
        type: optional<string>
        docs: >-
          The timestamp for when the order reached a terminal
          [state](entity:OrderState), in RFC 3339 format (for example
          "2016-09-04T23:59:33.123Z").
        access: read-only
      state:
        type: optional<OrderState>
        docs: |-
          The current state of the order.
          See [OrderState](#type-orderstate) for possible values
      version:
        type: optional<integer>
        docs: >-
          The version number, which is incremented each time an update is
          committed to the order.

          Orders not created through the API do not include a version number and

          therefore cannot be updated.


          [Read more about working with
          versions](https://developer.squareup.com/docs/orders-api/manage-orders/update-orders).
      total_money:
        type: optional<Money>
        docs: The total amount of money to collect for the order.
      total_tax_money:
        type: optional<Money>
        docs: The total amount of tax money to collect for the order.
      total_discount_money:
        type: optional<Money>
        docs: The total amount of discount money to collect for the order.
      total_tip_money:
        type: optional<Money>
        docs: The total amount of tip money to collect for the order.
      total_service_charge_money:
        type: optional<Money>
        docs: >-
          The total amount of money collected in service charges for the order.


          Note: `total_service_charge_money` is the sum of `applied_money`
          fields for each individual

          service charge. Therefore, `total_service_charge_money` only includes
          inclusive tax amounts,

          not additive tax amounts.
      ticket_name:
        type: optional<nullable<string>>
        docs: |-
          A short-term identifier for the order (such as a customer first name,
          table number, or auto-generated order number that resets daily).
        validation:
          maxLength: 30
      pricing_options:
        type: optional<OrderPricingOptions>
        docs: >-
          Pricing options for an order. The options affect how the order's price
          is calculated.

          They can be used, for example, to apply automatic price adjustments
          that are based on

          preconfigured [pricing rules](entity:CatalogPricingRule).
      rewards:
        type: optional<list<OrderReward>>
        docs: A set-like list of Rewards that have been added to the Order.
        access: read-only
      net_amount_due_money:
        type: optional<Money>
        docs: The net amount of money due on the order.
    source:
      openapi: openapi/openapi.json
  OrderCreated:
    properties:
      order_id:
        type: optional<nullable<string>>
        docs: The order's unique ID.
      version:
        type: optional<integer>
        docs: >-
          The version number, which is incremented each time an update is
          committed to the order.

          Orders that were not created through the API do not include a version
          number and

          therefore cannot be updated.


          [Read more about working with
          versions.](https://developer.squareup.com/docs/orders-api/manage-orders/update-orders)
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the seller location that this order is associated with.
      state:
        type: optional<OrderState>
        docs: |-
          The state of the order.
          See [OrderState](#type-orderstate) for possible values
      created_at:
        type: optional<string>
        docs: The timestamp for when the order was created, in RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  OrderCreatedEvent:
    docs: "Published when an [Order](entity:Order) is created. This event is\ntriggered only by the [CreateOrder](api-endpoint:Orders-CreateOrder) endpoint call.\n\nCreating an order in the Point of Sale\_app will **not** publish this event."
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"order.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<OrderCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"order_created"`.
      id:
        type: optional<string>
        docs: ID of the affected order.
      object:
        type: optional<OrderCreatedObject>
        docs: An object containing information about the created Order.
    source:
      openapi: openapi/openapi.json
  OrderCreatedObject:
    properties:
      order_created:
        type: optional<OrderCreated>
        docs: Information about the created order.
    source:
      openapi: openapi/openapi.json
  OrderCustomAttributeDefinitionOwnedCreatedEvent:
    docs: >-
      Published when an order [custom attribute
      definition](entity:CustomAttributeDefinition) that is owned by the
      subscribing app is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"order.custom_attribute_definition.owned.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderCustomAttributeDefinitionOwnedDeletedEvent:
    docs: >-
      Published when an order [custom attribute
      definition](entity:CustomAttributeDefinition) that is owned by the
      subscribing app is deleted.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"order.custom_attribute_definition.owned.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderCustomAttributeDefinitionOwnedUpdatedEvent:
    docs: >-
      Published when an order [custom attribute
      definition](entity:CustomAttributeDefinition) that is owned by the
      subscribing app is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"order.custom_attribute_definition.owned.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderCustomAttributeDefinitionVisibleCreatedEvent:
    docs: >-
      Published when an order [custom attribute
      definition](entity:CustomAttributeDefinition) that is visible to the
      subscribing app is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"order.custom_attribute_definition.visible.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderCustomAttributeDefinitionVisibleDeletedEvent:
    docs: >-
      Published when an order [custom attribute
      definition](entity:CustomAttributeDefinition) that is visible to the
      subscribing app is deleted.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"order.custom_attribute_definition.visible.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderCustomAttributeDefinitionVisibleUpdatedEvent:
    docs: >-
      Published when an order [custom attribute
      definition](entity:CustomAttributeDefinition) that is visible to the
      subscribing app is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"order.custom_attribute_definition.visible.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeDefinitionEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderCustomAttributeOwnedDeletedEvent:
    docs: >-
      Published when an order [custom attribute](entity:CustomAttribute)
      associated with a [custom attribute
      definition](entity:CustomAttributeDefinition) that is owned by the
      subscribing app is deleted.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"order.custom_attribute.owned.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderCustomAttributeOwnedUpdatedEvent:
    docs: >-
      Published when an order [custom attribute](entity:CustomAttribute)
      associated with a [custom attribute
      definition](entity:CustomAttributeDefinition) that is owned by the
      subscribing app is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"order.custom_attribute.owned.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderCustomAttributeVisibleDeletedEvent:
    docs: >-
      Published when an order [custom attribute](entity:CustomAttribute) that is
      visible to the subscribing app is deleted.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"order.custom_attribute.visible.deleted"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderCustomAttributeVisibleUpdatedEvent:
    docs: >-
      Published when an order [custom attribute](entity:CustomAttribute) that is
      visible to the subscribing app is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target seller associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of this event. The value is
          `"order.custom_attribute.visible.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<CustomAttributeEventData>
        docs: The data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderEntry:
    docs: >-
      A lightweight description of an [order](entity:Order) that is returned
      when

      `returned_entries` is `true` on a
      [SearchOrdersRequest](api-endpoint:Orders-SearchOrders).
    properties:
      order_id:
        type: optional<nullable<string>>
        docs: The ID of the order.
      version:
        type: optional<integer>
        docs: >-
          The version number, which is incremented each time an update is
          committed to the order.

          Orders that were not created through the API do not include a version
          number and

          therefore cannot be updated.


          [Read more about working with
          versions.](https://developer.squareup.com/docs/orders-api/manage-orders/update-orders)
        access: read-only
      location_id:
        type: optional<nullable<string>>
        docs: The location ID the order belongs to.
    source:
      openapi: openapi/openapi.json
  OrderFulfillmentDeliveryDetailsScheduleType:
    enum:
      - SCHEDULED
      - ASAP
    docs: The schedule type of the delivery fulfillment.
    source:
      openapi: openapi/openapi.json
  OrderFulfillmentFulfillmentLineItemApplication:
    enum:
      - ALL
      - ENTRY_LIST
    docs: >-
      The `line_item_application` describes what order line items this
      fulfillment applies

      to. It can be `ALL` or `ENTRY_LIST` with a supplied list of fulfillment
      entries.
    source:
      openapi: openapi/openapi.json
  OrderFulfillmentPickupDetailsScheduleType:
    enum:
      - SCHEDULED
      - ASAP
    docs: The schedule type of the pickup fulfillment.
    source:
      openapi: openapi/openapi.json
  OrderFulfillmentState:
    enum:
      - PROPOSED
      - RESERVED
      - PREPARED
      - COMPLETED
      - CANCELED
      - FAILED
    docs: The current state of this fulfillment.
    source:
      openapi: openapi/openapi.json
  OrderFulfillmentType:
    enum:
      - PICKUP
      - SHIPMENT
      - DELIVERY
    docs: The type of fulfillment.
    source:
      openapi: openapi/openapi.json
  OrderFulfillmentUpdated:
    properties:
      order_id:
        type: optional<nullable<string>>
        docs: The order's unique ID.
      version:
        type: optional<integer>
        docs: >-
          The version number, which is incremented each time an update is
          committed to the order.

          Orders that were not created through the API do not include a version
          number and

          therefore cannot be updated.


          [Read more about working with
          versions.](https://developer.squareup.com/docs/orders-api/manage-orders/update-orders)
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the seller location that this order is associated with.
      state:
        type: optional<OrderState>
        docs: |-
          The state of the order.
          See [OrderState](#type-orderstate) for possible values
      created_at:
        type: optional<string>
        docs: The timestamp for when the order was created, in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: The timestamp for when the order was last updated, in RFC 3339 format.
        access: read-only
      fulfillment_update:
        type: optional<nullable<list<OrderFulfillmentUpdatedUpdate>>>
        docs: The fulfillments that were updated with this version change.
    source:
      openapi: openapi/openapi.json
  OrderFulfillmentUpdatedEvent:
    docs: |-
      Published when an [OrderFulfillment](entity:OrderFulfillment)
      is created or updated. This event is triggered only by the
      [UpdateOrder](api-endpoint:Orders-UpdateOrder) endpoint call.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"order.fulfillment.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<OrderFulfillmentUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderFulfillmentUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"order_fulfillment_updated"`.
      id:
        type: optional<string>
        docs: ID of the affected order.
      object:
        type: optional<OrderFulfillmentUpdatedObject>
        docs: An object containing information about the updated Order.
    source:
      openapi: openapi/openapi.json
  OrderFulfillmentUpdatedObject:
    properties:
      order_fulfillment_updated:
        type: optional<OrderFulfillmentUpdated>
        docs: Information about the updated order fulfillment.
    source:
      openapi: openapi/openapi.json
  OrderFulfillmentUpdatedUpdate:
    docs: Information about fulfillment updates.
    properties:
      fulfillment_uid:
        type: optional<nullable<string>>
        docs: A unique ID that identifies the fulfillment only within this order.
      old_state:
        type: optional<FulfillmentState>
        docs: >-
          The state of the fulfillment before the change.

          The state is not populated if the fulfillment is created with this new
          `Order` version.
      new_state:
        type: optional<FulfillmentState>
        docs: >-
          The state of the fulfillment after the change. The state might be
          equal to `old_state` if a non-state

          field was changed on the fulfillment (such as the tracking number).
    source:
      openapi: openapi/openapi.json
  OrderLineItem:
    docs: |-
      Represents a line item in an order. Each line item describes a different
      product to purchase, with its own quantity and price details.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID that identifies the line item only within this order.
        validation:
          maxLength: 60
      name:
        type: optional<nullable<string>>
        docs: The name of the line item.
        validation:
          maxLength: 512
      quantity:
        type: string
        docs: >-
          The count, or measurement, of a line item being purchased:


          If `quantity` is a whole number, and `quantity_unit` is not specified,
          then `quantity` denotes an item count.  For example: `3` apples.


          If `quantity` is a whole or decimal number, and `quantity_unit` is
          also specified, then `quantity` denotes a measurement.  For example:
          `2.25` pounds of broccoli.


          For more information, see [Specify item quantity and measurement
          unit](https://developer.squareup.com/docs/orders-api/create-orders#specify-item-quantity-and-measurement-unit).


          Line items with a quantity of `0` are automatically removed

          when paying for or otherwise completing the order.
        validation:
          minLength: 1
          maxLength: 12
      quantity_unit:
        type: optional<OrderQuantityUnit>
        docs: >-
          The measurement unit and decimal precision that this line item's
          quantity is measured in.
      note:
        type: optional<nullable<string>>
        docs: An optional note associated with the line item.
        validation:
          maxLength: 2000
      catalog_object_id:
        type: optional<nullable<string>>
        docs: >-
          The [CatalogItemVariation](entity:CatalogItemVariation) ID applied to
          this line item.
        validation:
          maxLength: 192
      catalog_version:
        type: optional<nullable<long>>
        docs: The version of the catalog object that this line item references.
      variation_name:
        type: optional<nullable<string>>
        docs: The name of the variation applied to this line item.
        validation:
          maxLength: 400
      item_type:
        type: optional<OrderLineItemItemType>
        docs: >-
          The type of line item: an itemized sale, a non-itemized sale (custom
          amount), or the

          activation or reloading of a gift card.

          See [OrderLineItemItemType](#type-orderlineitemitemtype) for possible
          values
      metadata:
        type: optional<nullable<map<string, optional<nullable<string>>>>>
        docs: >-
          Application-defined data attached to this line item. Metadata fields
          are intended

          to store descriptive references or associations with an entity in
          another system or store brief

          information about the object. Square does not process this field; it
          only stores and returns it

          in relevant API calls. Do not use metadata to store any sensitive
          information (such as personally

          identifiable information or card details).


          Keys written by applications must be 60 characters or less and must be
          in the character set

          `[a-zA-Z0-9_-]`. Entries can also include metadata generated by
          Square. These keys are prefixed

          with a namespace, separated from the key with a ':' character.


          Values have a maximum length of 255 characters.


          An application can have up to 10 entries per metadata field.


          Entries written by applications are private and can only be read or
          modified by the same

          application.


          For more information, see
          [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
      modifiers:
        type: optional<nullable<list<OrderLineItemModifier>>>
        docs: >-
          The [CatalogModifier](entity:CatalogModifier)s applied to this line
          item.
      applied_taxes:
        type: optional<nullable<list<OrderLineItemAppliedTax>>>
        docs: >-
          The list of references to taxes applied to this line item. Each

          `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of
          a

          top-level `OrderLineItemTax` applied to the line item. On reads, the

          amount applied is populated.


          An `OrderLineItemAppliedTax` is automatically created on every line

          item for all `ORDER` scoped taxes added to the order.
          `OrderLineItemAppliedTax`

          records for `LINE_ITEM` scoped taxes must be added in requests for the
          tax

          to apply to any line items.


          To change the amount of a tax, modify the referenced top-level tax.
      applied_discounts:
        type: optional<nullable<list<OrderLineItemAppliedDiscount>>>
        docs: >-
          The list of references to discounts applied to this line item. Each

          `OrderLineItemAppliedDiscount` has a `discount_uid` that references
          the `uid` of a top-level

          `OrderLineItemDiscounts` applied to the line item. On reads, the
          amount

          applied is populated.


          An `OrderLineItemAppliedDiscount` is automatically created on every
          line item for all

          `ORDER` scoped discounts that are added to the order.
          `OrderLineItemAppliedDiscount` records

          for `LINE_ITEM` scoped discounts must be added in requests for the
          discount to apply to any

          line items.


          To change the amount of a discount, modify the referenced top-level
          discount.
      applied_service_charges:
        type: optional<nullable<list<OrderLineItemAppliedServiceCharge>>>
        docs: >-
          The list of references to service charges applied to this line item.
          Each

          `OrderLineItemAppliedServiceCharge` has a `service_charge_id` that
          references the `uid` of a

          top-level `OrderServiceCharge` applied to the line item. On reads, the
          amount applied is

          populated.


          To change the amount of a service charge, modify the referenced
          top-level service charge.
      base_price_money:
        type: optional<Money>
        docs: The base price for a single unit of the line item.
      variation_total_price_money:
        type: optional<Money>
        docs: >-
          The total price of all item variations sold in this line item.

          The price is calculated as `base_price_money` multiplied by
          `quantity`.

          It does not include modifiers.
      gross_sales_money:
        type: optional<Money>
        docs: >-
          The amount of money made in gross sales for this line item.

          The amount is calculated as the sum of the variation's total price and
          each modifier's total price.

          For inclusive tax items in the US, Canada, and Japan, tax is deducted
          from `gross_sales_money`. For Europe and

          Australia, inclusive tax remains as part of the gross sale
          calculation.
      total_tax_money:
        type: optional<Money>
        docs: The total amount of tax money to collect for the line item.
      total_discount_money:
        type: optional<Money>
        docs: The total amount of discount money to collect for the line item.
      total_money:
        type: optional<Money>
        docs: The total amount of money to collect for this line item.
      pricing_blocklists:
        type: optional<OrderLineItemPricingBlocklists>
        docs: >-
          Describes pricing adjustments that are blocked from automatic

          application to a line item. For more information, see

          [Apply Taxes and
          Discounts](https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts).
      total_service_charge_money:
        type: optional<Money>
        docs: >-
          The total amount of apportioned service charge money to collect for
          the line item.
    source:
      openapi: openapi/openapi.json
  OrderLineItemAppliedDiscount:
    docs: >-
      Represents an applied portion of a discount to a line item in an order.


      Order scoped discounts have automatically applied discounts present for
      each line item.

      Line-item scoped discounts must have applied discounts added manually for
      any applicable line

      items. The corresponding applied money is automatically computed based on
      participating

      line items.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: >-
          A unique ID that identifies the applied discount only within this
          order.
        validation:
          maxLength: 60
      discount_uid:
        type: string
        docs: >-
          The `uid` of the discount that the applied discount represents. It
          must

          reference a discount present in the `order.discounts` field.


          This field is immutable. To change which discounts apply to a line
          item,

          you must delete the discount and re-add it as a new
          `OrderLineItemAppliedDiscount`.
        validation:
          minLength: 1
          maxLength: 60
      applied_money:
        type: optional<Money>
        docs: The amount of money applied by the discount to the line item.
    source:
      openapi: openapi/openapi.json
  OrderLineItemAppliedServiceCharge:
    properties:
      uid:
        type: optional<nullable<string>>
        docs: >-
          A unique ID that identifies the applied service charge only within
          this order.
        validation:
          maxLength: 60
      service_charge_uid:
        type: string
        docs: >-
          The `uid` of the service charge that the applied service charge
          represents. It must

          reference a service charge present in the `order.service_charges`
          field.


          This field is immutable. To change which service charges apply to a
          line item,

          delete and add a new `OrderLineItemAppliedServiceCharge`.
        validation:
          minLength: 1
          maxLength: 60
      applied_money:
        type: optional<Money>
        docs: The amount of money applied by the service charge to the line item.
    source:
      openapi: openapi/openapi.json
  OrderLineItemAppliedTax:
    docs: >-
      Represents an applied portion of a tax to a line item in an order.


      Order-scoped taxes automatically include the applied taxes in each line
      item.

      Line item taxes must be referenced from any applicable line items.

      The corresponding applied money is automatically computed, based on the

      set of participating line items.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID that identifies the applied tax only within this order.
        validation:
          maxLength: 60
      tax_uid:
        type: string
        docs: >-
          The `uid` of the tax for which this applied tax represents. It must
          reference

          a tax present in the `order.taxes` field.


          This field is immutable. To change which taxes apply to a line item,
          delete and add a new

          `OrderLineItemAppliedTax`.
        validation:
          minLength: 1
          maxLength: 60
      applied_money:
        type: optional<Money>
        docs: The amount of money applied by the tax to the line item.
    source:
      openapi: openapi/openapi.json
  OrderLineItemDiscount:
    docs: >-
      Represents a discount that applies to one or more line items in an

      order.


      Fixed-amount, order-scoped discounts are distributed across all non-zero
      line item totals.

      The amount distributed to each line item is relative to the

      amount contributed by the item to the order subtotal.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID that identifies the discount only within this order.
        validation:
          maxLength: 60
      catalog_object_id:
        type: optional<nullable<string>>
        docs: >-
          The catalog object ID referencing
          [CatalogDiscount](entity:CatalogDiscount).
        validation:
          maxLength: 192
      catalog_version:
        type: optional<nullable<long>>
        docs: The version of the catalog object that this discount references.
      name:
        type: optional<nullable<string>>
        docs: The discount's name.
        validation:
          maxLength: 255
      type:
        type: optional<OrderLineItemDiscountType>
        docs: >-
          The type of the discount.


          Discounts that do not reference a catalog object ID must have a type
          of

          `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.

          See [OrderLineItemDiscountType](#type-orderlineitemdiscounttype) for
          possible values
      percentage:
        type: optional<nullable<string>>
        docs: >-
          The percentage of the discount, as a string representation of a
          decimal number.

          A value of `7.25` corresponds to a percentage of 7.25%.


          `percentage` is not set for amount-based discounts.
        validation:
          maxLength: 10
      amount_money:
        type: optional<Money>
        docs: |-
          The total declared monetary amount of the discount.

          `amount_money` is not set for percentage-based discounts.
      applied_money:
        type: optional<Money>
        docs: >-
          The amount of discount actually applied to the line item.


          The amount represents the amount of money applied as a line-item
          scoped discount.

          When an amount-based discount is scoped to the entire order, the value

          of `applied_money` is different than `amount_money` because the total

          amount of the discount is distributed across all line items.
      metadata:
        type: optional<nullable<map<string, optional<nullable<string>>>>>
        docs: >-
          Application-defined data attached to this discount. Metadata fields
          are intended

          to store descriptive references or associations with an entity in
          another system or store brief

          information about the object. Square does not process this field; it
          only stores and returns it

          in relevant API calls. Do not use metadata to store any sensitive
          information (such as personally

          identifiable information or card details).


          Keys written by applications must be 60 characters or less and must be
          in the character set

          `[a-zA-Z0-9_-]`. Entries can also include metadata generated by
          Square. These keys are prefixed

          with a namespace, separated from the key with a ':' character.


          Values have a maximum length of 255 characters.


          An application can have up to 10 entries per metadata field.


          Entries written by applications are private and can only be read or
          modified by the same

          application.


          For more information, see
          [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
      scope:
        type: optional<OrderLineItemDiscountScope>
        docs: >-
          Indicates the level at which the discount applies. For `ORDER` scoped
          discounts,

          Square generates references in `applied_discounts` on all order line
          items that do

          not have them. For `LINE_ITEM` scoped discounts, the discount only
          applies to line items

          with a discount reference in their `applied_discounts` field.


          This field is immutable. To change the scope of a discount, you must
          delete

          the discount and re-add it as a new discount.

          See [OrderLineItemDiscountScope](#type-orderlineitemdiscountscope) for
          possible values
      reward_ids:
        type: optional<list<string>>
        docs: >-
          The reward IDs corresponding to this discount. The application and

          specification of discounts that have `reward_ids` are completely
          controlled by the backing

          criteria corresponding to the reward tiers of the rewards that are
          added to the order

          through the Loyalty API. To manually unapply discounts that are the
          result of added rewards,

          the rewards must be removed from the order through the Loyalty API.
        access: read-only
      pricing_rule_id:
        type: optional<string>
        docs: >-
          The object ID of a [pricing rule](entity:CatalogPricingRule) to be
          applied

          automatically to this discount. The specification and application of
          the discounts, to

          which a `pricing_rule_id` is assigned, are completely controlled by
          the corresponding

          pricing rule.
        access: read-only
    source:
      openapi: openapi/openapi.json
  OrderLineItemDiscountScope:
    enum:
      - OTHER_DISCOUNT_SCOPE
      - LINE_ITEM
      - ORDER
    docs: Indicates whether this is a line-item or order-level discount.
    source:
      openapi: openapi/openapi.json
  OrderLineItemDiscountType:
    enum:
      - UNKNOWN_DISCOUNT
      - FIXED_PERCENTAGE
      - FIXED_AMOUNT
      - VARIABLE_PERCENTAGE
      - VARIABLE_AMOUNT
    docs: >-
      Indicates how the discount is applied to the associated line item or
      order.
    source:
      openapi: openapi/openapi.json
  OrderLineItemItemType:
    enum:
      - ITEM
      - CUSTOM_AMOUNT
      - GIFT_CARD
    docs: Represents the line item type.
    source:
      openapi: openapi/openapi.json
  OrderLineItemModifier:
    docs: A [CatalogModifier](entity:CatalogModifier).
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID that identifies the modifier only within this order.
        validation:
          maxLength: 60
      catalog_object_id:
        type: optional<nullable<string>>
        docs: >-
          The catalog object ID referencing
          [CatalogModifier](entity:CatalogModifier).
        validation:
          maxLength: 192
      catalog_version:
        type: optional<nullable<long>>
        docs: The version of the catalog object that this modifier references.
      name:
        type: optional<nullable<string>>
        docs: The name of the item modifier.
        validation:
          maxLength: 255
      quantity:
        type: optional<nullable<string>>
        docs: >-
          The quantity of the line item modifier. The modifier quantity can be 0
          or more.

          For example, suppose a restaurant offers a cheeseburger on the menu.
          When a buyer orders

          this item, the restaurant records the purchase by creating an `Order`
          object with a line item

          for a burger. The line item includes a line item modifier: the name is
          cheese and the quantity

          is 1. The buyer has the option to order extra cheese (or no cheese).
          If the buyer chooses

          the extra cheese option, the modifier quantity increases to 2. If the
          buyer does not want

          any cheese, the modifier quantity is set to 0.
      base_price_money:
        type: optional<Money>
        docs: >-
          The base price for the modifier.


          `base_price_money` is required for ad hoc modifiers.

          If both `catalog_object_id` and `base_price_money` are set,
          `base_price_money` will

          override the predefined [CatalogModifier](entity:CatalogModifier)
          price.
      total_price_money:
        type: optional<Money>
        docs: >-
          The total price of the item modifier for its line item.

          This is the modifier's `base_price_money` multiplied by the line
          item's quantity.
      metadata:
        type: optional<nullable<map<string, optional<nullable<string>>>>>
        docs: >-
          Application-defined data attached to this order. Metadata fields are
          intended

          to store descriptive references or associations with an entity in
          another system or store brief

          information about the object. Square does not process this field; it
          only stores and returns it

          in relevant API calls. Do not use metadata to store any sensitive
          information (such as personally

          identifiable information or card details).


          Keys written by applications must be 60 characters or less and must be
          in the character set

          `[a-zA-Z0-9_-]`. Entries can also include metadata generated by
          Square. These keys are prefixed

          with a namespace, separated from the key with a ':' character.


          Values have a maximum length of 255 characters.


          An application can have up to 10 entries per metadata field.


          Entries written by applications are private and can only be read or
          modified by the same

          application.


          For more information, see 
          [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
    source:
      openapi: openapi/openapi.json
  OrderLineItemPricingBlocklists:
    docs: >-
      Describes pricing adjustments that are blocked from automatic

      application to a line item. For more information, see

      [Apply Taxes and
      Discounts](https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts).
    properties:
      blocked_discounts:
        type: >-
          optional<nullable<list<OrderLineItemPricingBlocklistsBlockedDiscount>>>
        docs: >-
          A list of discounts blocked from applying to the line item.

          Discounts can be blocked by the `discount_uid` (for ad hoc discounts)
          or

          the `discount_catalog_object_id` (for catalog discounts).
      blocked_taxes:
        type: optional<nullable<list<OrderLineItemPricingBlocklistsBlockedTax>>>
        docs: |-
          A list of taxes blocked from applying to the line item.
          Taxes can be blocked by the `tax_uid` (for ad hoc taxes) or
          the `tax_catalog_object_id` (for catalog taxes).
    source:
      openapi: openapi/openapi.json
  OrderLineItemPricingBlocklistsBlockedDiscount:
    docs: >-
      A discount to block from applying to a line item. The discount must be

      identified by either `discount_uid` or `discount_catalog_object_id`, but
      not both.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID of the `BlockedDiscount` within the order.
        validation:
          maxLength: 60
      discount_uid:
        type: optional<nullable<string>>
        docs: >-
          The `uid` of the discount that should be blocked. Use this field to
          block

          ad hoc discounts. For catalog discounts, use the
          `discount_catalog_object_id` field.
        validation:
          maxLength: 60
      discount_catalog_object_id:
        type: optional<nullable<string>>
        docs: >-
          The `catalog_object_id` of the discount that should be blocked.

          Use this field to block catalog discounts. For ad hoc discounts, use
          the

          `discount_uid` field.
        validation:
          maxLength: 192
    source:
      openapi: openapi/openapi.json
  OrderLineItemPricingBlocklistsBlockedTax:
    docs: |-
      A tax to block from applying to a line item. The tax must be
      identified by either `tax_uid` or `tax_catalog_object_id`, but not both.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID of the `BlockedTax` within the order.
        validation:
          maxLength: 60
      tax_uid:
        type: optional<nullable<string>>
        docs: >-
          The `uid` of the tax that should be blocked. Use this field to block

          ad hoc taxes. For catalog, taxes use the `tax_catalog_object_id`
          field.
        validation:
          maxLength: 60
      tax_catalog_object_id:
        type: optional<nullable<string>>
        docs: |-
          The `catalog_object_id` of the tax that should be blocked.
          Use this field to block catalog taxes. For ad hoc taxes, use the
          `tax_uid` field.
        validation:
          maxLength: 192
    source:
      openapi: openapi/openapi.json
  OrderLineItemTax:
    docs: >-
      Represents a tax that applies to one or more line item in the order.


      Fixed-amount, order-scoped taxes are distributed across all non-zero line
      item totals.

      The amount distributed to each line item is relative to the amount the
      item

      contributes to the order subtotal.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID that identifies the tax only within this order.
        validation:
          maxLength: 60
      catalog_object_id:
        type: optional<nullable<string>>
        docs: The catalog object ID referencing [CatalogTax](entity:CatalogTax).
        validation:
          maxLength: 192
      catalog_version:
        type: optional<nullable<long>>
        docs: The version of the catalog object that this tax references.
      name:
        type: optional<nullable<string>>
        docs: The tax's name.
        validation:
          maxLength: 255
      type:
        type: optional<OrderLineItemTaxType>
        docs: >-
          Indicates the calculation method used to apply the tax.

          See [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible
          values
      percentage:
        type: optional<nullable<string>>
        docs: >-
          The percentage of the tax, as a string representation of a decimal

          number. For example, a value of `"7.25"` corresponds to a percentage
          of

          7.25%.
        validation:
          maxLength: 10
      metadata:
        type: optional<nullable<map<string, optional<nullable<string>>>>>
        docs: >-
          Application-defined data attached to this tax. Metadata fields are
          intended

          to store descriptive references or associations with an entity in
          another system or store brief

          information about the object. Square does not process this field; it
          only stores and returns it

          in relevant API calls. Do not use metadata to store any sensitive
          information (such as personally

          identifiable information or card details).


          Keys written by applications must be 60 characters or less and must be
          in the character set

          `[a-zA-Z0-9_-]`. Entries can also include metadata generated by
          Square. These keys are prefixed

          with a namespace, separated from the key with a ':' character.


          Values have a maximum length of 255 characters.


          An application can have up to 10 entries per metadata field.


          Entries written by applications are private and can only be read or
          modified by the same

          application.


          For more information, see
          [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
      applied_money:
        type: optional<Money>
        docs: |-
          The amount of money applied to the order by the tax.

          - For percentage-based taxes, `applied_money` is the money
          calculated using the percentage.
      scope:
        type: optional<OrderLineItemTaxScope>
        docs: >-
          Indicates the level at which the tax applies. For `ORDER` scoped
          taxes,

          Square generates references in `applied_taxes` on all order line items
          that do

          not have them. For `LINE_ITEM` scoped taxes, the tax only applies to
          line items

          with references in their `applied_taxes` field.


          This field is immutable. To change the scope, you must delete the tax
          and

          re-add it as a new tax.

          See [OrderLineItemTaxScope](#type-orderlineitemtaxscope) for possible
          values
      auto_applied:
        type: optional<boolean>
        docs: >-
          Determines whether the tax was automatically applied to the order
          based on

          the catalog configuration. For an example, see

          [Automatically Apply Taxes to an
          Order](https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts/auto-apply-taxes).
        access: read-only
    source:
      openapi: openapi/openapi.json
  OrderLineItemTaxScope:
    enum:
      - OTHER_TAX_SCOPE
      - LINE_ITEM
      - ORDER
    docs: Indicates whether this is a line-item or order-level tax.
    source:
      openapi: openapi/openapi.json
  OrderLineItemTaxType:
    enum:
      - UNKNOWN_TAX
      - ADDITIVE
      - INCLUSIVE
    docs: Indicates how the tax is applied to the associated line item or order.
    source:
      openapi: openapi/openapi.json
  OrderMoneyAmounts:
    docs: A collection of various money amounts.
    properties:
      total_money:
        type: optional<Money>
        docs: The total money.
      tax_money:
        type: optional<Money>
        docs: The money associated with taxes.
      discount_money:
        type: optional<Money>
        docs: The money associated with discounts.
      tip_money:
        type: optional<Money>
        docs: The money associated with tips.
      service_charge_money:
        type: optional<Money>
        docs: The money associated with service charges.
    source:
      openapi: openapi/openapi.json
  OrderPricingOptions:
    docs: >-
      Pricing options for an order. The options affect how the order's price is
      calculated.

      They can be used, for example, to apply automatic price adjustments that
      are based on preconfigured

      [pricing rules](entity:CatalogPricingRule).
    properties:
      auto_apply_discounts:
        type: optional<nullable<boolean>>
        docs: |-
          The option to determine whether pricing rule-based
          discounts are automatically applied to an order.
      auto_apply_taxes:
        type: optional<nullable<boolean>>
        docs: >-
          The option to determine whether rule-based taxes are automatically

          applied to an order when the criteria of the corresponding rules are
          met.
    source:
      openapi: openapi/openapi.json
  OrderQuantityUnit:
    docs: >-
      Contains the measurement unit for a quantity and a precision that

      specifies the number of digits after the decimal point for decimal
      quantities.
    properties:
      measurement_unit:
        type: optional<MeasurementUnit>
        docs: |-
          A [MeasurementUnit](entity:MeasurementUnit) that represents the
          unit of measure for the quantity.
      precision:
        type: optional<nullable<integer>>
        docs: >-
          For non-integer quantities, represents the number of digits after the
          decimal point that are

          recorded for this quantity.


          For example, a precision of 1 allows quantities such as `"1.0"` and
          `"1.1"`, but not `"1.01"`.


          Min: 0. Max: 5.
      catalog_object_id:
        type: optional<nullable<string>>
        docs: |-
          The catalog object ID referencing the
          [CatalogMeasurementUnit](entity:CatalogMeasurementUnit).

          This field is set when this is a catalog-backed measurement unit.
      catalog_version:
        type: optional<nullable<long>>
        docs: >-
          The version of the catalog object that this measurement unit
          references.


          This field is set when this is a catalog-backed measurement unit.
    source:
      openapi: openapi/openapi.json
  OrderReturn:
    docs: >-
      The set of line items, service charges, taxes, discounts, tips, and other
      items being returned in an order.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID that identifies the return only within this order.
        validation:
          maxLength: 60
      source_order_id:
        type: optional<nullable<string>>
        docs: >-
          An order that contains the original sale of these return line items.
          This is unset

          for unlinked returns.
      return_line_items:
        type: optional<nullable<list<OrderReturnLineItem>>>
        docs: A collection of line items that are being returned.
      return_service_charges:
        type: optional<nullable<list<OrderReturnServiceCharge>>>
        docs: A collection of service charges that are being returned.
      return_taxes:
        type: optional<list<OrderReturnTax>>
        docs: >-
          A collection of references to taxes being returned for an order,
          including the total

          applied tax amount to be returned. The taxes must reference a
          top-level tax ID from the source

          order.
        access: read-only
      return_discounts:
        type: optional<list<OrderReturnDiscount>>
        docs: >-
          A collection of references to discounts being returned for an order,
          including the total

          applied discount amount to be returned. The discounts must reference a
          top-level discount ID

          from the source order.
        access: read-only
      return_tips:
        type: optional<nullable<list<OrderReturnTip>>>
        docs: A collection of references to tips being returned for an order.
      rounding_adjustment:
        type: optional<OrderRoundingAdjustment>
        docs: >-
          A positive or negative rounding adjustment to the total value being
          returned. Adjustments are commonly

          used to apply cash rounding when the minimum unit of the account is
          smaller than the lowest

          physical denomination of the currency.
      return_amounts:
        type: optional<OrderMoneyAmounts>
        docs: An aggregate monetary value being returned by this return entry.
    source:
      openapi: openapi/openapi.json
  OrderReturnDiscount:
    docs: >-
      Represents a discount being returned that applies to one or more return
      line items in an

      order.


      Fixed-amount, order-scoped discounts are distributed across all non-zero
      return line item totals.

      The amount distributed to each return line item is relative to that item’s
      contribution to the

      order subtotal.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: >-
          A unique ID that identifies the returned discount only within this
          order.
        validation:
          maxLength: 60
      source_discount_uid:
        type: optional<nullable<string>>
        docs: >-
          The discount `uid` from the order that contains the original
          application of this discount.
        validation:
          maxLength: 60
      catalog_object_id:
        type: optional<nullable<string>>
        docs: >-
          The catalog object ID referencing
          [CatalogDiscount](entity:CatalogDiscount).
        validation:
          maxLength: 192
      catalog_version:
        type: optional<nullable<long>>
        docs: The version of the catalog object that this discount references.
      name:
        type: optional<nullable<string>>
        docs: The discount's name.
        validation:
          maxLength: 255
      type:
        type: optional<OrderLineItemDiscountType>
        docs: >-
          The type of the discount. If it is created by the API, it is
          `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.


          Discounts that do not reference a catalog object ID must have a type
          of

          `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.

          See [OrderLineItemDiscountType](#type-orderlineitemdiscounttype) for
          possible values
      percentage:
        type: optional<nullable<string>>
        docs: >-
          The percentage of the tax, as a string representation of a decimal
          number.

          A value of `"7.25"` corresponds to a percentage of 7.25%.


          `percentage` is not set for amount-based discounts.
        validation:
          maxLength: 10
      amount_money:
        type: optional<Money>
        docs: |-
          The total declared monetary amount of the discount.

          `amount_money` is not set for percentage-based discounts.
      applied_money:
        type: optional<Money>
        docs: >-
          The amount of discount actually applied to this line item. When an
          amount-based

          discount is at the order level, this value is different from
          `amount_money` because the discount

          is distributed across the line items.
      scope:
        type: optional<OrderLineItemDiscountScope>
        docs: >-
          Indicates the level at which the `OrderReturnDiscount` applies. For
          `ORDER` scoped

          discounts, the server generates references in `applied_discounts` on
          all

          `OrderReturnLineItem`s. For `LINE_ITEM` scoped discounts, the discount
          is only applied to

          `OrderReturnLineItem`s with references in their `applied_discounts`
          field.

          See [OrderLineItemDiscountScope](#type-orderlineitemdiscountscope) for
          possible values
    source:
      openapi: openapi/openapi.json
  OrderReturnLineItem:
    docs: The line item being returned in an order.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID for this return line-item entry.
        validation:
          maxLength: 60
      source_line_item_uid:
        type: optional<nullable<string>>
        docs: The `uid` of the line item in the original sale order.
        validation:
          maxLength: 60
      name:
        type: optional<nullable<string>>
        docs: The name of the line item.
        validation:
          maxLength: 512
      quantity:
        type: string
        docs: |-
          The quantity returned, formatted as a decimal number.
          For example, `"3"`.

          Line items with a `quantity_unit` can have non-integer quantities.
          For example, `"1.70000"`.
        validation:
          minLength: 1
          maxLength: 12
      quantity_unit:
        type: optional<OrderQuantityUnit>
        docs: >-
          The unit and precision that this return line item's quantity is
          measured in.
      note:
        type: optional<nullable<string>>
        docs: The note of the return line item.
        validation:
          maxLength: 2000
      catalog_object_id:
        type: optional<nullable<string>>
        docs: >-
          The [CatalogItemVariation](entity:CatalogItemVariation) ID applied to
          this return line item.
        validation:
          maxLength: 192
      catalog_version:
        type: optional<nullable<long>>
        docs: The version of the catalog object that this line item references.
      variation_name:
        type: optional<nullable<string>>
        docs: The name of the variation applied to this return line item.
        validation:
          maxLength: 400
      item_type:
        type: optional<OrderLineItemItemType>
        docs: >-
          The type of line item: an itemized return, a non-itemized return
          (custom amount),

          or the return of an unactivated gift card sale.

          See [OrderLineItemItemType](#type-orderlineitemitemtype) for possible
          values
      return_modifiers:
        type: optional<nullable<list<OrderReturnLineItemModifier>>>
        docs: >-
          The [CatalogModifier](entity:CatalogModifier)s applied to this line
          item.
      applied_taxes:
        type: optional<nullable<list<OrderLineItemAppliedTax>>>
        docs: >-
          The list of references to `OrderReturnTax` entities applied to the
          return line item. Each

          `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of
          a top-level

          `OrderReturnTax` applied to the return line item. On reads, the
          applied amount

          is populated.
      applied_discounts:
        type: optional<nullable<list<OrderLineItemAppliedDiscount>>>
        docs: >-
          The list of references to `OrderReturnDiscount` entities applied to
          the return line item. Each

          `OrderLineItemAppliedDiscount` has a `discount_uid` that references
          the `uid` of a top-level

          `OrderReturnDiscount` applied to the return line item. On reads, the
          applied amount

          is populated.
      base_price_money:
        type: optional<Money>
        docs: The base price for a single unit of the line item.
      variation_total_price_money:
        type: optional<Money>
        docs: >-
          The total price of all item variations returned in this line item.

          The price is calculated as `base_price_money` multiplied by `quantity`
          and

          does not include modifiers.
      gross_return_money:
        type: optional<Money>
        docs: >-
          The gross return amount of money calculated as (item base price +
          modifiers price) * quantity.
      total_tax_money:
        type: optional<Money>
        docs: The total amount of tax money to return for the line item.
      total_discount_money:
        type: optional<Money>
        docs: The total amount of discount money to return for the line item.
      total_money:
        type: optional<Money>
        docs: The total amount of money to return for this line item.
      applied_service_charges:
        type: optional<nullable<list<OrderLineItemAppliedServiceCharge>>>
        docs: >-
          The list of references to `OrderReturnServiceCharge` entities applied
          to the return

          line item. Each `OrderLineItemAppliedServiceCharge` has a
          `service_charge_uid` that

          references the `uid` of a top-level `OrderReturnServiceCharge` applied
          to the return line

          item. On reads, the applied amount is populated.
      total_service_charge_money:
        type: optional<Money>
        docs: >-
          The total amount of apportioned service charge money to return for the
          line item.
    source:
      openapi: openapi/openapi.json
  OrderReturnLineItemModifier:
    docs: A line item modifier being returned.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: >-
          A unique ID that identifies the return modifier only within this
          order.
        validation:
          maxLength: 60
      source_modifier_uid:
        type: optional<nullable<string>>
        docs: |-
          The modifier `uid` from the order's line item that contains the
          original sale of this line item modifier.
        validation:
          maxLength: 60
      catalog_object_id:
        type: optional<nullable<string>>
        docs: >-
          The catalog object ID referencing
          [CatalogModifier](entity:CatalogModifier).
        validation:
          maxLength: 192
      catalog_version:
        type: optional<nullable<long>>
        docs: >-
          The version of the catalog object that this line item modifier
          references.
      name:
        type: optional<nullable<string>>
        docs: The name of the item modifier.
        validation:
          maxLength: 255
      base_price_money:
        type: optional<Money>
        docs: >-
          The base price for the modifier.


          `base_price_money` is required for ad hoc modifiers.

          If both `catalog_object_id` and `base_price_money` are set,
          `base_price_money` overrides the predefined
          [CatalogModifier](entity:CatalogModifier) price.
      total_price_money:
        type: optional<Money>
        docs: >-
          The total price of the item modifier for its line item.

          This is the modifier's `base_price_money` multiplied by the line
          item's quantity.
      quantity:
        type: optional<nullable<string>>
        docs: >-
          The quantity of the line item modifier. The modifier quantity can be 0
          or more.

          For example, suppose a restaurant offers a cheeseburger on the menu.
          When a buyer orders

          this item, the restaurant records the purchase by creating an `Order`
          object with a line item

          for a burger. The line item includes a line item modifier: the name is
          cheese and the quantity

          is 1. The buyer has the option to order extra cheese (or no cheese).
          If the buyer chooses

          the extra cheese option, the modifier quantity increases to 2. If the
          buyer does not want

          any cheese, the modifier quantity is set to 0.
    source:
      openapi: openapi/openapi.json
  OrderReturnServiceCharge:
    docs: Represents the service charge applied to the original order.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: >-
          A unique ID that identifies the return service charge only within this
          order.
        validation:
          maxLength: 60
      source_service_charge_uid:
        type: optional<nullable<string>>
        docs: |-
          The service charge `uid` from the order containing the original
          service charge. `source_service_charge_uid` is `null` for
          unlinked returns.
        validation:
          maxLength: 60
      name:
        type: optional<nullable<string>>
        docs: The name of the service charge.
        validation:
          maxLength: 255
      catalog_object_id:
        type: optional<nullable<string>>
        docs: >-
          The catalog object ID of the associated
          [OrderServiceCharge](entity:OrderServiceCharge).
        validation:
          maxLength: 192
      catalog_version:
        type: optional<nullable<long>>
        docs: The version of the catalog object that this service charge references.
      percentage:
        type: optional<nullable<string>>
        docs: |-
          The percentage of the service charge, as a string representation of
          a decimal number. For example, a value of `"7.25"` corresponds to a
          percentage of 7.25%.

          Either `percentage` or `amount_money` should be set, but not both.
        validation:
          maxLength: 10
      amount_money:
        type: optional<Money>
        docs: |-
          The amount of a non-percentage-based service charge.

          Either `percentage` or `amount_money` should be set, but not both.
      applied_money:
        type: optional<Money>
        docs: >-
          The amount of money applied to the order by the service charge,
          including

          any inclusive tax amounts, as calculated by Square.


          - For fixed-amount service charges, `applied_money` is equal to
          `amount_money`.

          - For percentage-based service charges, `applied_money` is the money
          calculated using the percentage.
      total_money:
        type: optional<Money>
        docs: >-
          The total amount of money to collect for the service charge.


          __NOTE__: If an inclusive tax is applied to the service charge,
          `total_money`

          does not equal `applied_money` plus `total_tax_money` because the
          inclusive

          tax amount is already included in both `applied_money` and
          `total_tax_money`.
      total_tax_money:
        type: optional<Money>
        docs: The total amount of tax money to collect for the service charge.
      calculation_phase:
        type: optional<OrderServiceChargeCalculationPhase>
        docs: >-
          The calculation phase after which to apply the service charge.

          See
          [OrderServiceChargeCalculationPhase](#type-orderservicechargecalculationphase)
          for possible values
      taxable:
        type: optional<nullable<boolean>>
        docs: |-
          Indicates whether the surcharge can be taxed. Service charges
          calculated in the `TOTAL_PHASE` cannot be marked as taxable.
      applied_taxes:
        type: optional<nullable<list<OrderLineItemAppliedTax>>>
        docs: >-
          The list of references to `OrderReturnTax` entities applied to the

          `OrderReturnServiceCharge`. Each `OrderLineItemAppliedTax` has a
          `tax_uid`

          that references the `uid` of a top-level `OrderReturnTax` that is
          being

          applied to the `OrderReturnServiceCharge`. On reads, the applied
          amount is

          populated.
      treatment_type:
        type: optional<OrderServiceChargeTreatmentType>
        docs: >-
          The treatment type of the service charge.

          See
          [OrderServiceChargeTreatmentType](#type-orderservicechargetreatmenttype)
          for possible values
      scope:
        type: optional<OrderServiceChargeScope>
        docs: >-
          Indicates the level at which the apportioned service charge applies.
          For `ORDER`

          scoped service charges, Square generates references in
          `applied_service_charges` on

          all order line items that do not have them. For `LINE_ITEM` scoped
          service charges,

          the service charge only applies to line items with a service charge
          reference in their

          `applied_service_charges` field.


          This field is immutable. To change the scope of an apportioned service
          charge, you must delete

          the apportioned service charge and re-add it as a new apportioned
          service charge.

          See [OrderServiceChargeScope](#type-orderservicechargescope) for
          possible values
    source:
      openapi: openapi/openapi.json
  OrderReturnTax:
    docs: >-
      Represents a tax being returned that applies to one or more return line
      items in an order.


      Fixed-amount, order-scoped taxes are distributed across all non-zero
      return line item totals.

      The amount distributed to each return line item is relative to that item’s
      contribution to the

      order subtotal.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID that identifies the returned tax only within this order.
        validation:
          maxLength: 60
      source_tax_uid:
        type: optional<nullable<string>>
        docs: The tax `uid` from the order that contains the original tax charge.
        validation:
          maxLength: 60
      catalog_object_id:
        type: optional<nullable<string>>
        docs: The catalog object ID referencing [CatalogTax](entity:CatalogTax).
        validation:
          maxLength: 192
      catalog_version:
        type: optional<nullable<long>>
        docs: The version of the catalog object that this tax references.
      name:
        type: optional<nullable<string>>
        docs: The tax's name.
        validation:
          maxLength: 255
      type:
        type: optional<OrderLineItemTaxType>
        docs: >-
          Indicates the calculation method used to apply the tax.

          See [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible
          values
      percentage:
        type: optional<nullable<string>>
        docs: >-
          The percentage of the tax, as a string representation of a decimal
          number.

          For example, a value of `"7.25"` corresponds to a percentage of 7.25%.
        validation:
          maxLength: 10
      applied_money:
        type: optional<Money>
        docs: The amount of money applied by the tax in an order.
      scope:
        type: optional<OrderLineItemTaxScope>
        docs: >-
          Indicates the level at which the `OrderReturnTax` applies. For `ORDER`
          scoped

          taxes, Square generates references in `applied_taxes` on all

          `OrderReturnLineItem`s. For `LINE_ITEM` scoped taxes, the tax is only
          applied to

          `OrderReturnLineItem`s with references in their `applied_discounts`
          field.

          See [OrderLineItemTaxScope](#type-orderlineitemtaxscope) for possible
          values
    source:
      openapi: openapi/openapi.json
  OrderReturnTip:
    docs: A tip being returned.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID that identifies the tip only within this order.
        validation:
          maxLength: 60
      applied_money:
        type: optional<Money>
        docs: |-
          The amount of tip being returned
          --
      source_tender_uid:
        type: optional<nullable<string>>
        docs: >-
          The tender `uid` from the order that contains the original application
          of this tip.
        validation:
          maxLength: 192
      source_tender_id:
        type: optional<nullable<string>>
        docs: >-
          The tender `id` from the order that contains the original application
          of this tip.
        validation:
          maxLength: 192
    source:
      openapi: openapi/openapi.json
  OrderReward:
    docs: |-
      Represents a reward that can be applied to an order if the necessary
      reward tier criteria are met. Rewards are created through the Loyalty API.
    properties:
      id:
        type: string
        docs: The identifier of the reward.
        validation:
          minLength: 1
      reward_tier_id:
        type: string
        docs: The identifier of the reward tier corresponding to this reward.
        validation:
          minLength: 1
    source:
      openapi: openapi/openapi.json
  OrderRoundingAdjustment:
    docs: >-
      A rounding adjustment of the money being returned. Commonly used to apply
      cash rounding

      when the minimum unit of the account is smaller than the lowest physical
      denomination of the currency.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: >-
          A unique ID that identifies the rounding adjustment only within this
          order.
        validation:
          maxLength: 60
      name:
        type: optional<nullable<string>>
        docs: The name of the rounding adjustment from the original sale order.
      amount_money:
        type: optional<Money>
        docs: The actual rounding adjustment amount.
    source:
      openapi: openapi/openapi.json
  OrderServiceCharge:
    docs: Represents a service charge applied to an order.
    properties:
      uid:
        type: optional<nullable<string>>
        docs: A unique ID that identifies the service charge only within this order.
        validation:
          maxLength: 60
      name:
        type: optional<nullable<string>>
        docs: The name of the service charge.
        validation:
          maxLength: 512
      catalog_object_id:
        type: optional<nullable<string>>
        docs: >-
          The catalog object ID referencing the service charge
          [CatalogObject](entity:CatalogObject).
        validation:
          maxLength: 192
      catalog_version:
        type: optional<nullable<long>>
        docs: The version of the catalog object that this service charge references.
      percentage:
        type: optional<nullable<string>>
        docs: >-
          The service charge percentage as a string representation of a

          decimal number. For example, `"7.25"` indicates a service charge of
          7.25%.


          Exactly 1 of `percentage` or `amount_money` should be set.
        validation:
          maxLength: 10
      amount_money:
        type: optional<Money>
        docs: |-
          The amount of a non-percentage-based service charge.

          Exactly one of `percentage` or `amount_money` should be set.
      applied_money:
        type: optional<Money>
        docs: >-
          The amount of money applied to the order by the service charge,

          including any inclusive tax amounts, as calculated by Square.


          - For fixed-amount service charges, `applied_money` is equal to
          `amount_money`.

          - For percentage-based service charges, `applied_money` is the money

          calculated using the percentage.
      total_money:
        type: optional<Money>
        docs: |-
          The total amount of money to collect for the service charge.

          __Note__: If an inclusive tax is applied to the service charge,
          `total_money` does not equal `applied_money` plus `total_tax_money`
          because the inclusive tax amount is already included in both
          `applied_money` and `total_tax_money`.
      total_tax_money:
        type: optional<Money>
        docs: The total amount of tax money to collect for the service charge.
      calculation_phase:
        type: optional<OrderServiceChargeCalculationPhase>
        docs: >-
          The calculation phase at which to apply the service charge.

          See
          [OrderServiceChargeCalculationPhase](#type-orderservicechargecalculationphase)
          for possible values
      taxable:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether the service charge can be taxed. If set to `true`,

          order-level taxes automatically apply to the service charge. Note that

          service charges calculated in the `TOTAL_PHASE` cannot be marked as
          taxable.
      applied_taxes:
        type: optional<nullable<list<OrderLineItemAppliedTax>>>
        docs: >-
          The list of references to the taxes applied to this service charge.
          Each

          `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of
          a top-level

          `OrderLineItemTax` that is being applied to this service charge. On
          reads, the amount applied

          is populated.


          An `OrderLineItemAppliedTax` is automatically created on every taxable
          service charge

          for all `ORDER` scoped taxes that are added to the order.
          `OrderLineItemAppliedTax` records

          for `LINE_ITEM` scoped taxes must be added in requests for the tax to
          apply to any taxable

          service charge. Taxable service charges have the `taxable` field set
          to `true` and calculated

          in the `SUBTOTAL_PHASE`.


          To change the amount of a tax, modify the referenced top-level tax.
      metadata:
        type: optional<nullable<map<string, optional<nullable<string>>>>>
        docs: >-
          Application-defined data attached to this service charge. Metadata
          fields are intended

          to store descriptive references or associations with an entity in
          another system or store brief

          information about the object. Square does not process this field; it
          only stores and returns it

          in relevant API calls. Do not use metadata to store any sensitive
          information (such as personally

          identifiable information or card details).


          Keys written by applications must be 60 characters or less and must be
          in the character set

          `[a-zA-Z0-9_-]`. Entries can also include metadata generated by
          Square. These keys are prefixed

          with a namespace, separated from the key with a ':' character.


          Values have a maximum length of 255 characters.


          An application can have up to 10 entries per metadata field.


          Entries written by applications are private and can only be read or
          modified by the same

          application.


          For more information, see
          [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
      type:
        type: optional<OrderServiceChargeType>
        docs: >-
          The type of the service charge.

          See [OrderServiceChargeType](#type-orderservicechargetype) for
          possible values
      treatment_type:
        type: optional<OrderServiceChargeTreatmentType>
        docs: >-
          The treatment type of the service charge.

          See
          [OrderServiceChargeTreatmentType](#type-orderservicechargetreatmenttype)
          for possible values
      scope:
        type: optional<OrderServiceChargeScope>
        docs: >-
          Indicates the level at which the apportioned service charge applies.
          For `ORDER`

          scoped service charges, Square generates references in
          `applied_service_charges` on

          all order line items that do not have them. For `LINE_ITEM` scoped
          service charges,

          the service charge only applies to line items with a service charge
          reference in their

          `applied_service_charges` field.


          This field is immutable. To change the scope of an apportioned service
          charge, you must delete

          the apportioned service charge and re-add it as a new apportioned
          service charge.

          See [OrderServiceChargeScope](#type-orderservicechargescope) for
          possible values
    source:
      openapi: openapi/openapi.json
  OrderServiceChargeCalculationPhase:
    enum:
      - SUBTOTAL_PHASE
      - TOTAL_PHASE
      - APPORTIONED_PERCENTAGE_PHASE
      - APPORTIONED_AMOUNT_PHASE
    docs: >-
      Represents a phase in the process of calculating order totals.

      Service charges are applied after the indicated phase.


      [Read more about how order totals are
      calculated.](https://developer.squareup.com/docs/orders-api/how-it-works#how-totals-are-calculated)
    source:
      openapi: openapi/openapi.json
  OrderServiceChargeScope:
    enum:
      - OTHER_SERVICE_CHARGE_SCOPE
      - LINE_ITEM
      - ORDER
    docs: |-
      Indicates whether this is a line-item or order-level apportioned
      service charge.
    source:
      openapi: openapi/openapi.json
  OrderServiceChargeTreatmentType:
    enum:
      - LINE_ITEM_TREATMENT
      - APPORTIONED_TREATMENT
    docs: >-
      Indicates whether the service charge will be treated as a value-holding
      line item or

      apportioned toward a line item.
    source:
      openapi: openapi/openapi.json
  OrderServiceChargeType:
    enum:
      - AUTO_GRATUITY
      - CUSTOM
    source:
      openapi: openapi/openapi.json
  OrderSource:
    docs: Represents the origination details of an order.
    properties:
      name:
        type: optional<nullable<string>>
        docs: >-
          The name used to identify the place (physical or digital) that an
          order originates.

          If unset, the name defaults to the name of the application that
          created the order.
    source:
      openapi: openapi/openapi.json
  OrderState:
    enum:
      - OPEN
      - COMPLETED
      - CANCELED
      - DRAFT
    docs: The state of the order.
    source:
      openapi: openapi/openapi.json
  OrderUpdated:
    properties:
      order_id:
        type: optional<nullable<string>>
        docs: The order's unique ID.
      version:
        type: optional<integer>
        docs: >-
          The version number, which is incremented each time an update is
          committed to the order.

          Orders that were not created through the API do not include a version
          number and

          therefore cannot be updated.


          [Read more about working with
          versions.](https://developer.squareup.com/docs/orders-api/manage-orders/update-orders)
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the seller location that this order is associated with.
      state:
        type: optional<OrderState>
        docs: |-
          The state of the order.
          See [OrderState](#type-orderstate) for possible values
      created_at:
        type: optional<string>
        docs: The timestamp for when the order was created, in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: The timestamp for when the order was last updated, in RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  OrderUpdatedEvent:
    docs: |-
      Published when an [Order](entity:Order) is updated. This
      event is triggered by the [UpdateOrder](api-endpoint:Orders-UpdateOrder)
      endpoint call, Order Manager, or the Square Dashboard.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"order.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<OrderUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  OrderUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"order_updated"`.
      id:
        type: optional<string>
        docs: ID of the affected order.
      object:
        type: optional<OrderUpdatedObject>
        docs: An object containing information about the updated Order.
    source:
      openapi: openapi/openapi.json
  OrderUpdatedObject:
    properties:
      order_updated:
        type: optional<OrderUpdated>
        docs: Information about the updated order.
    source:
      openapi: openapi/openapi.json
  PauseSubscriptionResponse:
    docs: >-
      Defines output parameters in a response from the

      [PauseSubscription](api-endpoint:Subscriptions-PauseSubscription)
      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered during the request.
      subscription:
        type: optional<Subscription>
        docs: The subscription to be paused by the scheduled `PAUSE` action.
      actions:
        type: optional<list<SubscriptionAction>>
        docs: >-
          The list of a `PAUSE` action and a possible `RESUME` action created by
          the request.
    source:
      openapi: openapi/openapi.json
  PayOrderResponse:
    docs: >-
      Defines the fields that are included in the response body of a request to
      the

      [PayOrder](api-endpoint:Orders-PayOrder) endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      order:
        type: optional<Order>
        docs: The paid, updated [order](entity:Order).
    source:
      openapi: openapi/openapi.json
  Payment:
    docs: Represents a payment processed by the Square API.
    properties:
      id:
        type: optional<string>
        docs: A unique ID for the payment.
        validation:
          maxLength: 192
        access: read-only
      created_at:
        type: optional<string>
        docs: The timestamp of when the payment was created, in RFC 3339 format.
        validation:
          maxLength: 32
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp of when the payment was last updated, in RFC 3339
          format.
        validation:
          maxLength: 32
        access: read-only
      amount_money:
        type: optional<Money>
        docs: >-
          The amount processed for this payment, not including `tip_money`.


          The amount is specified in the smallest denomination of the applicable
          currency (for example,

          US dollar amounts are specified in cents). For more information, see

          [Working with Monetary
          Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).
      tip_money:
        type: optional<Money>
        docs: >-
          The amount designated as a tip. 


          This amount is specified in the smallest denomination of the
          applicable currency (for example,

          US dollar amounts are specified in cents). For more information, see

          [Working with Monetary
          Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).
      total_money:
        type: optional<Money>
        docs: >-
          The total amount for the payment, including `amount_money` and
          `tip_money`.

          This amount is specified in the smallest denomination of the
          applicable currency (for example,

          US dollar amounts are specified in cents). For more information, see

          [Working with Monetary
          Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).
      app_fee_money:
        type: optional<Money>
        docs: >-
          The amount the developer is taking as a fee for facilitating the
          payment on behalf

          of the seller. This amount is specified in the smallest denomination
          of the applicable currency

          (for example, US dollar amounts are specified in cents). For more
          information,

          see [Take Payments and Collect
          Fees](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees).


          The amount cannot be more than 90% of the `total_money` value.


          To set this field, `PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS` OAuth
          permission is required.

          For more information, see
          [Permissions](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees#permissions).
      approved_money:
        type: optional<Money>
        docs: >-
          The amount of money approved for this payment. This value may change
          if Square chooses to

          obtain reauthorization as part of a call to
          [UpdatePayment](api-endpoint:Payments-UpdatePayment).
      processing_fee:
        type: optional<list<ProcessingFee>>
        docs: >-
          The processing fees and fee adjustments assessed by Square for this
          payment.
        access: read-only
      refunded_money:
        type: optional<Money>
        docs: >-
          The total amount of the payment refunded to date. 


          This amount is specified in the smallest denomination of the
          applicable currency (for example,

          US dollar amounts are specified in cents).
      status:
        type: optional<string>
        docs: >-
          Indicates whether the payment is APPROVED, PENDING, COMPLETED,
          CANCELED, or FAILED.
        validation:
          maxLength: 50
        access: read-only
      delay_duration:
        type: optional<string>
        docs: >-
          The duration of time after the payment's creation when Square
          automatically applies the

          `delay_action` to the payment. This automatic `delay_action` applies
          only to payments that

          do not reach a terminal state (COMPLETED, CANCELED, or FAILED) before
          the `delay_duration`

          time period.


          This field is specified as a time duration, in RFC 3339 format.


          Notes:

          This feature is only supported for card payments.


          Default:


          - Card-present payments: "PT36H" (36 hours) from the creation time.

          - Card-not-present payments: "P7D" (7 days) from the creation time.
        access: read-only
      delay_action:
        type: optional<nullable<string>>
        docs: >-
          The action to be applied to the payment when the `delay_duration` has
          elapsed.


          Current values include `CANCEL` and `COMPLETE`.
      delayed_until:
        type: optional<string>
        docs: >-
          The read-only timestamp of when the `delay_action` is automatically
          applied,

          in RFC 3339 format.


          Note that this field is calculated by summing the payment's
          `delay_duration` and `created_at`

          fields. The `created_at` field is generated by Square and might not
          exactly match the

          time on your local machine.
        access: read-only
      source_type:
        type: optional<string>
        docs: >-
          The source type for this payment.


          Current values include `CARD`, `BANK_ACCOUNT`, `WALLET`,
          `BUY_NOW_PAY_LATER`, `SQUARE_ACCOUNT`,

          `CASH` and `EXTERNAL`. For information about these payment source
          types,

          see [Take
          Payments](https://developer.squareup.com/docs/payments-api/take-payments).
        validation:
          maxLength: 50
        access: read-only
      card_details:
        type: optional<CardPaymentDetails>
        docs: >-
          Details about a card payment. These details are only populated if the
          source_type is `CARD`.
      cash_details:
        type: optional<CashPaymentDetails>
        docs: >-
          Details about a cash payment. These details are only populated if the
          source_type is `CASH`.
      bank_account_details:
        type: optional<BankAccountPaymentDetails>
        docs: >-
          Details about a bank account payment. These details are only populated
          if the source_type is `BANK_ACCOUNT`.
      external_details:
        type: optional<ExternalPaymentDetails>
        docs: |-
          Details about an external payment. The details are only populated 
          if the `source_type` is `EXTERNAL`.
      wallet_details:
        type: optional<DigitalWalletDetails>
        docs: |-
          Details about an wallet payment. The details are only populated 
          if the `source_type` is `WALLET`.
      buy_now_pay_later_details:
        type: optional<BuyNowPayLaterDetails>
        docs: >-
          Details about a Buy Now Pay Later payment. The details are only
          populated

          if the `source_type` is `BUY_NOW_PAY_LATER`. For more information,
          see 

          [Afterpay
          Payments](https://developer.squareup.com/docs/payments-api/take-payments/afterpay-payments).
      square_account_details:
        type: optional<SquareAccountDetails>
        docs: |-
          Details about a Square Account payment. The details are only populated
          if the `source_type` is `SQUARE_ACCOUNT`.
      location_id:
        type: optional<string>
        docs: The ID of the location associated with the payment.
        validation:
          maxLength: 50
        access: read-only
      order_id:
        type: optional<string>
        docs: The ID of the order associated with the payment.
        validation:
          maxLength: 192
        access: read-only
      reference_id:
        type: optional<string>
        docs: |-
          An optional ID that associates the payment with an entity in
          another system.
        validation:
          maxLength: 40
        access: read-only
      customer_id:
        type: optional<string>
        docs: >-
          The ID of the customer associated with the payment. If the ID is 

          not provided in the `CreatePayment` request that was used to create
          the `Payment`, 

          Square may use information in the request 

          (such as the billing and shipping address, email address, and payment
          source) 

          to identify a matching customer profile in the Customer Directory. 

          If found, the profile ID is used. If a profile is not found, the 

          API attempts to create an 

          [instant
          profile](https://developer.squareup.com/docs/customers-api/what-it-does#instant-profiles). 

          If the API cannot create an 

          instant profile (either because the seller has disabled it or the 

          seller's region prevents creating it), this field remains unset. Note
          that 

          this process is asynchronous and it may take some time before a 

          customer ID is added to the payment.
        validation:
          maxLength: 191
        access: read-only
      employee_id:
        type: optional<string>
        docs: |-
          __Deprecated__: Use `Payment.team_member_id` instead.

          An optional ID of the employee associated with taking the payment.
        validation:
          maxLength: 192
        access: read-only
      team_member_id:
        type: optional<nullable<string>>
        docs: >-
          An optional ID of the [TeamMember](entity:TeamMember) associated with
          taking the payment.
        validation:
          maxLength: 192
      refund_ids:
        type: optional<list<string>>
        docs: A list of `refund_id`s identifying refunds for the payment.
        access: read-only
      risk_evaluation:
        type: optional<RiskEvaluation>
        docs: >-
          Provides information about the risk associated with the payment, as
          determined by Square.

          This field is present for payments to sellers that have opted in to
          receive risk

          evaluations.
      terminal_checkout_id:
        type: optional<string>
        docs: >-
          An optional ID for a Terminal checkout that is associated with the
          payment.
        access: read-only
      buyer_email_address:
        type: optional<string>
        docs: The buyer's email address.
        validation:
          maxLength: 255
        access: read-only
      billing_address:
        type: optional<Address>
        docs: The buyer's billing address.
      shipping_address:
        type: optional<Address>
        docs: The buyer's shipping address.
      note:
        type: optional<string>
        docs: An optional note to include when creating a payment.
        validation:
          maxLength: 500
        access: read-only
      statement_description_identifier:
        type: optional<string>
        docs: >-
          Additional payment information that gets added to the customer's card
          statement

          as part of the statement description.


          Note that the `statement_description_identifier` might get truncated
          on the statement description

          to fit the required information including the Square identifier (SQ *)
          and the name of the

          seller taking the payment.
        access: read-only
      capabilities:
        type: optional<list<string>>
        docs: |-
          Actions that can be performed on this payment:
          - `EDIT_AMOUNT_UP` - The payment amount can be edited up.
          - `EDIT_AMOUNT_DOWN` - The payment amount can be edited down.
          - `EDIT_TIP_AMOUNT_UP` - The tip amount can be edited up.
          - `EDIT_TIP_AMOUNT_DOWN` - The tip amount can be edited down.
          - `EDIT_DELAY_ACTION` - The delay_action can be edited.
        access: read-only
      receipt_number:
        type: optional<string>
        docs: |-
          The payment's receipt number.
          The field is missing if a payment is canceled.
        validation:
          maxLength: 4
        access: read-only
      receipt_url:
        type: optional<string>
        docs: |-
          The URL for the payment's receipt.
          The field is only populated for COMPLETED payments.
        validation:
          maxLength: 255
        access: read-only
      device_details:
        type: optional<DeviceDetails>
        docs: Details about the device that took the payment.
      application_details:
        type: optional<ApplicationDetails>
        docs: Details about the application that took the payment.
      is_offline_payment:
        type: optional<boolean>
        docs: Whether or not this payment was taken offline.
        access: read-only
      offline_payment_details:
        type: optional<OfflinePaymentDetails>
        docs: Additional information about the payment if it was taken offline.
      version_token:
        type: optional<nullable<string>>
        docs: >-
          Used for optimistic concurrency. This opaque token identifies a
          specific version of the

          `Payment` object.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityAppFeeRefundDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
      refund_id:
        type: optional<nullable<string>>
        docs: The ID of the refund associated with this activity.
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the location of the merchant associated with the payment
          refund activity
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityAppFeeRevenueDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the location of the merchant associated with the payment
          activity
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityAutomaticSavingsDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
      payout_id:
        type: optional<nullable<string>>
        docs: The ID of the payout associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityAutomaticSavingsReversedDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
      payout_id:
        type: optional<nullable<string>>
        docs: The ID of the payout associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityChargeDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityDepositFeeDetail:
    properties:
      payout_id:
        type: optional<nullable<string>>
        docs: The ID of the payout that triggered this deposit fee activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityDepositFeeReversedDetail:
    properties:
      payout_id:
        type: optional<nullable<string>>
        docs: The ID of the payout that triggered this deposit fee activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityDisputeDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
      dispute_id:
        type: optional<nullable<string>>
        docs: The ID of the dispute associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityFeeDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the payment associated with this activity

          This will only be populated when a principal LedgerEntryToken is also
          populated.

          If the fee is independent (there is no principal LedgerEntryToken)
          then this will likely not

          be populated.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityFreeProcessingDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityHoldAdjustmentDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityOpenDisputeDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
      dispute_id:
        type: optional<nullable<string>>
        docs: The ID of the dispute associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityOtherAdjustmentDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityOtherDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityRefundDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
      refund_id:
        type: optional<nullable<string>>
        docs: The ID of the refund associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityReleaseAdjustmentDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityReserveHoldDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityReserveReleaseDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivitySquareCapitalPaymentDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivitySquareCapitalReversedPaymentDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivitySquarePayrollTransferDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivitySquarePayrollTransferReversedDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityTaxOnFeeDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
      tax_rate_description:
        type: optional<nullable<string>>
        docs: >-
          The description of the tax rate being applied. For example: "GST",
          "HST".
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityThirdPartyFeeDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentBalanceActivityThirdPartyFeeRefundDetail:
    properties:
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this activity.
      refund_id:
        type: optional<nullable<string>>
        docs: The public refund id associated with this activity.
    source:
      openapi: openapi/openapi.json
  PaymentCreatedEvent:
    docs: Published when a [Payment](entity:Payment) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"payment.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<PaymentCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  PaymentCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"payment"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: ID of the affected payment.
        validation:
          maxLength: 192
      object:
        type: optional<PaymentCreatedEventObject>
        docs: An object containing the created payment.
    source:
      openapi: openapi/openapi.json
  PaymentCreatedEventObject:
    properties:
      payment:
        type: optional<Payment>
        docs: The created payment.
    source:
      openapi: openapi/openapi.json
  PaymentLink:
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the payment link.
        access: read-only
      version:
        type: integer
        docs: >-
          The Square-assigned version number, which is incremented each time an
          update is committed to the payment link.
        validation:
          max: 65535
      description:
        type: optional<nullable<string>>
        docs: |-
          The optional description of the `payment_link` object.
          It is primarily for use by your application and is not used anywhere.
        validation:
          maxLength: 4096
      order_id:
        type: optional<string>
        docs: The ID of the order associated with the payment link.
        validation:
          maxLength: 192
        access: read-only
      checkout_options:
        type: optional<CheckoutOptions>
        docs: >-
          The checkout options configured for the payment link.

          For more information, see [Optional Checkout
          Configurations](https://developer.squareup.com/docs/checkout-api/optional-checkout-configurations).
      pre_populated_data:
        type: optional<PrePopulatedData>
        docs: |-
          Describes buyer data to prepopulate
          on the checkout page.
      url:
        type: optional<string>
        docs: The shortened URL of the payment link.
        validation:
          maxLength: 255
        access: read-only
      long_url:
        type: optional<string>
        docs: The long URL of the payment link.
        validation:
          maxLength: 255
        access: read-only
      created_at:
        type: optional<string>
        docs: The timestamp when the payment link was created, in RFC 3339 format.
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp when the payment link was last updated, in RFC 3339
          format.
      payment_note:
        type: optional<nullable<string>>
        docs: >-
          An optional note. After Square processes the payment, this note is
          added to the

          resulting `Payment`.
        validation:
          maxLength: 500
    source:
      openapi: openapi/openapi.json
  PaymentLinkRelatedResources:
    properties:
      orders:
        type: optional<nullable<list<Order>>>
        docs: The order associated with the payment link.
      subscription_plans:
        type: optional<nullable<list<CatalogObject>>>
        docs: The subscription plan associated with the payment link.
    source:
      openapi: openapi/openapi.json
  PaymentOptions:
    properties:
      autocomplete:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether the `Payment` objects created from this
          `TerminalCheckout` are

          automatically `COMPLETED` or left in an `APPROVED` state for later
          modification.


          Default: true
      delay_duration:
        type: optional<nullable<string>>
        docs: >-
          The duration of time after the payment's creation when Square
          automatically resolves the

          payment. This automatic resolution applies only to payments that do
          not reach a terminal state

          (`COMPLETED` or `CANCELED`) before the `delay_duration` time period.


          This parameter should be specified as a time duration, in RFC 3339
          format, with a minimum value

          of 1 minute and a maximum value of 36 hours. This feature is only
          supported for card payments,

          and all payments will be considered card-present.


          This parameter can only be set for a delayed capture payment
          (`autocomplete=false`). For more

          information, see [Delayed
          Capture](https://developer.squareup.com/docs/payments-api/take-payments/card-payments/delayed-capture#time-threshold).


          Default: "PT36H" (36 hours) from the creation time
      accept_partial_authorization:
        type: optional<nullable<boolean>>
        docs: >-
          If set to `true` and charging a Square Gift Card, a payment might be
          returned with

          `amount_money` equal to less than what was requested. For example, a
          request for $20 when charging

          a Square Gift Card with a balance of $5 results in an APPROVED payment
          of $5. You might choose

          to prompt the buyer for an additional payment to cover the remainder
          or cancel the Gift Card

          payment.


          This parameter can only be set for a delayed capture payment
          (`autocomplete=false`).


          For more information, see [Take Partial
          Payments](https://developer.squareup.com/docs/payments-api/take-payments/card-payments/partial-payments-with-gift-cards).


          Default: false
      delay_action:
        type: optional<PaymentOptionsDelayAction>
        docs: >-
          The action to be applied to the `Payment` when the delay_duration has
          elapsed.

          The action must be CANCEL or COMPLETE.


          The action cannot be set to COMPLETE if an `order_id` is present on
          the TerminalCheckout.


          This parameter can only be set for a delayed capture payment
          (`autocomplete=false`). For more

          information, see [Delayed
          Capture](https://developer.squareup.com/docs/payments-api/take-payments/card-payments/delayed-capture#time-threshold).


          Default: CANCEL

          See [DelayAction](#type-delayaction) for possible values
    source:
      openapi: openapi/openapi.json
  PaymentOptionsDelayAction:
    enum:
      - CANCEL
      - COMPLETE
    docs: >-
      Describes the action to be applied to a delayed capture payment when the
      delay_duration

      has elapsed.
    source:
      openapi: openapi/openapi.json
  PaymentRefund:
    docs: >-
      Represents a refund of a payment made using Square. Contains information
      about

      the original payment and the amount of money refunded.
    properties:
      id:
        type: string
        docs: The unique ID for this refund, generated by Square.
        validation:
          minLength: 1
          maxLength: 255
      status:
        type: optional<nullable<string>>
        docs: |-
          The refund's status:
          - `PENDING` - Awaiting approval.
          - `COMPLETED` - Successfully completed.
          - `REJECTED` - The refund was rejected.
          - `FAILED` - An error occurred.
        validation:
          maxLength: 50
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The location ID associated with the payment this refund is attached
          to.
        validation:
          maxLength: 50
      unlinked:
        type: optional<boolean>
        docs: >-
          Flag indicating whether or not the refund is linked to an existing
          payment in Square.
        access: read-only
      destination_type:
        type: optional<nullable<string>>
        docs: >-
          The destination type for this refund.


          Current values include `CARD`, `BANK_ACCOUNT`, `WALLET`,
          `BUY_NOW_PAY_LATER`, `CASH`,

          `EXTERNAL`, and `SQUARE_ACCOUNT`.
        validation:
          maxLength: 50
      destination_details:
        type: optional<DestinationDetails>
        docs: >-
          Contains information about the refund destination. This field is
          populated only if

          `destination_id` is defined in the `RefundPayment` request.
      amount_money:
        type: Money
        docs: >-
          The amount of money refunded. This amount is specified in the smallest
          denomination

          of the applicable currency (for example, US dollar amounts are
          specified in cents).
      app_fee_money:
        type: optional<Money>
        docs: >-
          The amount of money the application developer contributed to help
          cover the refunded amount.

          This amount is specified in the smallest denomination of the
          applicable currency (for example,

          US dollar amounts are specified in cents). For more information, see

          [Working with Monetary
          Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).
      processing_fee:
        type: optional<nullable<list<ProcessingFee>>>
        docs: >-
          Processing fees and fee adjustments assessed by Square for this
          refund.
      payment_id:
        type: optional<nullable<string>>
        docs: The ID of the payment associated with this refund.
        validation:
          maxLength: 192
      order_id:
        type: optional<nullable<string>>
        docs: The ID of the order associated with the refund.
        validation:
          maxLength: 192
      reason:
        type: optional<nullable<string>>
        docs: The reason for the refund.
        validation:
          maxLength: 192
      created_at:
        type: optional<string>
        docs: The timestamp of when the refund was created, in RFC 3339 format.
        validation:
          maxLength: 32
        access: read-only
      updated_at:
        type: optional<string>
        docs: The timestamp of when the refund was last updated, in RFC 3339 format.
        validation:
          maxLength: 32
        access: read-only
      team_member_id:
        type: optional<string>
        docs: An optional ID of the team member associated with taking the payment.
        validation:
          maxLength: 192
        access: read-only
      terminal_refund_id:
        type: optional<string>
        docs: An optional ID for a Terminal refund.
        access: read-only
    source:
      openapi: openapi/openapi.json
  PaymentUpdatedEvent:
    docs: >-
      Published when a [Payment](entity:Payment) is updated.

      Typically the `payment.status`, or `card_details.status` fields are
      updated

      as a payment is canceled, authorized, or completed.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"payment.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<PaymentUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  PaymentUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"payment"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: ID of the affected payment.
        validation:
          maxLength: 192
      object:
        type: optional<PaymentUpdatedEventObject>
        docs: An object containing the updated payment.
    source:
      openapi: openapi/openapi.json
  PaymentUpdatedEventObject:
    properties:
      payment:
        type: optional<Payment>
        docs: The updated payment.
    source:
      openapi: openapi/openapi.json
  Payout:
    docs: >-
      An accounting of the amount owed the seller and record of the actual
      transfer to their

      external bank account or to the Square balance.
    properties:
      id:
        type: string
        docs: A unique ID for the payout.
        validation:
          minLength: 1
      status:
        type: optional<PayoutStatus>
        docs: |-
          Indicates the payout status.
          See [PayoutStatus](#type-payoutstatus) for possible values
      location_id:
        type: string
        docs: The ID of the location associated with the payout.
        validation:
          minLength: 1
      created_at:
        type: optional<string>
        docs: >-
          The timestamp of when the payout was created and submitted for deposit
          to the seller's banking destination, in RFC 3339 format.
      updated_at:
        type: optional<string>
        docs: The timestamp of when the payout was last updated, in RFC 3339 format.
      amount_money:
        type: optional<Money>
        docs: >-
          The amount of money involved in the payout. A positive amount
          indicates a deposit, and a negative amount indicates a withdrawal.
          This amount is never zero.
      destination:
        type: optional<Destination>
        docs: >-
          Information about the banking destination (such as a bank account,
          Square checking account, or debit card)

          against which the payout was made.
      version:
        type: optional<integer>
        docs: >-
          The version number, which is incremented each time an update is made
          to this payout record.

          The version number helps developers receive event notifications or
          feeds out of order.
      type:
        type: optional<PayoutType>
        docs: |-
          Indicates the payout type.
          See [PayoutType](#type-payouttype) for possible values
      payout_fee:
        type: optional<nullable<list<PayoutFee>>>
        docs: >-
          A list of transfer fees and any taxes on the fees assessed by Square
          for this payout.
      arrival_date:
        type: optional<nullable<string>>
        docs: >-
          The calendar date, in ISO 8601 format (YYYY-MM-DD), when the payout is
          due to arrive in the seller’s banking destination.
      end_to_end_id:
        type: optional<nullable<string>>
        docs: >-
          A unique ID for each `Payout` object that might also appear on the
          seller’s bank statement. You can use this ID to automate the process
          of reconciling each payout with the corresponding line item on the
          bank statement.
    source:
      openapi: openapi/openapi.json
  PayoutEntry:
    docs: >-
      One or more PayoutEntries that make up a Payout. Each one has a date,
      amount, and type of activity.

      The total amount of the payout will equal the sum of the payout entries
      for a batch payout
    properties:
      id:
        type: string
        docs: A unique ID for the payout entry.
        validation:
          minLength: 1
      payout_id:
        type: string
        docs: The ID of the payout entries’ associated payout.
        validation:
          minLength: 1
      effective_at:
        type: optional<nullable<string>>
        docs: >-
          The timestamp of when the payout entry affected the balance, in RFC
          3339 format.
      type:
        type: optional<ActivityType>
        docs: |-
          The type of activity associated with this payout entry.
          See [ActivityType](#type-activitytype) for possible values
      gross_amount_money:
        type: optional<Money>
        docs: The amount of money involved in this payout entry.
      fee_amount_money:
        type: optional<Money>
        docs: The amount of Square fees associated with this payout entry.
      net_amount_money:
        type: optional<Money>
        docs: The net proceeds from this transaction after any fees.
      type_app_fee_revenue_details:
        type: optional<PaymentBalanceActivityAppFeeRevenueDetail>
        docs: Details of any developer app fee revenue generated on a payment.
      type_app_fee_refund_details:
        type: optional<PaymentBalanceActivityAppFeeRefundDetail>
        docs: Details of a refund for an app fee on a payment.
      type_automatic_savings_details:
        type: optional<PaymentBalanceActivityAutomaticSavingsDetail>
        docs: >-
          Details of any automatic transfer from the payment processing balance
          to the Square Savings account. These are, generally, proportional to
          the merchant's sales.
      type_automatic_savings_reversed_details:
        type: optional<PaymentBalanceActivityAutomaticSavingsReversedDetail>
        docs: >-
          Details of any automatic transfer from the Square Savings account back
          to the processing balance. These are, generally, proportional to the
          merchant's refunds.
      type_charge_details:
        type: optional<PaymentBalanceActivityChargeDetail>
        docs: Details of credit card payment captures.
      type_deposit_fee_details:
        type: optional<PaymentBalanceActivityDepositFeeDetail>
        docs: >-
          Details of any fees involved with deposits such as for instant
          deposits.
      type_deposit_fee_reversed_details:
        type: optional<PaymentBalanceActivityDepositFeeReversedDetail>
        docs: >-
          Details of any reversal or refund of fees involved with deposits such
          as for instant deposits.
      type_dispute_details:
        type: optional<PaymentBalanceActivityDisputeDetail>
        docs: Details of any balance change due to a dispute event.
      type_fee_details:
        type: optional<PaymentBalanceActivityFeeDetail>
        docs: Details of adjustments due to the Square processing fee.
      type_free_processing_details:
        type: optional<PaymentBalanceActivityFreeProcessingDetail>
        docs: >-
          Square offers Free Payments Processing for a variety of business
          scenarios including seller referral or when Square wants to apologize
          for a bug, customer service, repricing complication, and so on. This
          entry represents details of any credit to the merchant for the
          purposes of Free Processing.
      type_hold_adjustment_details:
        type: optional<PaymentBalanceActivityHoldAdjustmentDetail>
        docs: >-
          Details of any adjustment made by Square related to the holding or
          releasing of a payment.
      type_open_dispute_details:
        type: optional<PaymentBalanceActivityOpenDisputeDetail>
        docs: Details of any open disputes.
      type_other_details:
        type: optional<PaymentBalanceActivityOtherDetail>
        docs: >-
          Details of any other type that does not belong in the rest of the
          types.
      type_other_adjustment_details:
        type: optional<PaymentBalanceActivityOtherAdjustmentDetail>
        docs: >-
          Details of any other type of adjustments that don't fall under
          existing types.
      type_refund_details:
        type: optional<PaymentBalanceActivityRefundDetail>
        docs: Details of a refund for an existing card payment.
      type_release_adjustment_details:
        type: optional<PaymentBalanceActivityReleaseAdjustmentDetail>
        docs: Details of fees released for adjustments.
      type_reserve_hold_details:
        type: optional<PaymentBalanceActivityReserveHoldDetail>
        docs: Details of fees paid for funding risk reserve.
      type_reserve_release_details:
        type: optional<PaymentBalanceActivityReserveReleaseDetail>
        docs: Details of fees released from risk reserve.
      type_square_capital_payment_details:
        type: optional<PaymentBalanceActivitySquareCapitalPaymentDetail>
        docs: >-
          Details of capital merchant cash advance (MCA) assessments. These are,
          generally, proportional to the merchant's sales but may be issued for
          other reasons related to the MCA.
      type_square_capital_reversed_payment_details:
        type: optional<PaymentBalanceActivitySquareCapitalReversedPaymentDetail>
        docs: >-
          Details of capital merchant cash advance (MCA) assessment refunds.
          These are, generally, proportional to the merchant's refunds but may
          be issued for other reasons related to the MCA.
      type_tax_on_fee_details:
        type: optional<PaymentBalanceActivityTaxOnFeeDetail>
        docs: Details of tax paid on fee amounts.
      type_third_party_fee_details:
        type: optional<PaymentBalanceActivityThirdPartyFeeDetail>
        docs: Details of fees collected by a 3rd party platform.
      type_third_party_fee_refund_details:
        type: optional<PaymentBalanceActivityThirdPartyFeeRefundDetail>
        docs: Details of refunded fees from a 3rd party platform.
      type_square_payroll_transfer_details:
        type: optional<PaymentBalanceActivitySquarePayrollTransferDetail>
        docs: >-
          Details of a payroll payment that was transferred to a team member’s
          bank account.
      type_square_payroll_transfer_reversed_details:
        type: optional<PaymentBalanceActivitySquarePayrollTransferReversedDetail>
        docs: >-
          Details of a payroll payment to a team member’s bank account that was
          deposited back to the seller’s account by Square.
    source:
      openapi: openapi/openapi.json
  PayoutFailedEvent:
    docs: Published when a [Payout](entity:Payout) has failed.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event that this represents, `payout.failed`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: The timestamp of when the event was verified, in RFC 3339 format.
        access: read-only
      data:
        type: optional<PayoutFailedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  PayoutFailedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: The name of the affected object's type, `payout`.
      id:
        type: optional<string>
        docs: The ID of the failed payout.
      object:
        type: optional<PayoutFailedEventObject>
        docs: An object containing the failed payout.
    source:
      openapi: openapi/openapi.json
  PayoutFailedEventObject:
    properties:
      payout:
        type: optional<Payout>
        docs: The payout that failed.
    source:
      openapi: openapi/openapi.json
  PayoutFee:
    docs: Represents a payout fee that can incur as part of a payout.
    properties:
      amount_money:
        type: optional<Money>
        docs: The money amount of the payout fee.
      effective_at:
        type: optional<nullable<string>>
        docs: The timestamp of when the fee takes effect, in RFC 3339 format.
      type:
        type: optional<PayoutFeeType>
        docs: |-
          The type of fee assessed as part of the payout.
          See [PayoutFeeType](#type-payoutfeetype) for possible values
    source:
      openapi: openapi/openapi.json
  PayoutFeeType:
    enum:
      - TRANSFER_FEE
      - TAX_ON_TRANSFER_FEE
    docs: Represents the type of payout fee that can incur as part of a payout.
    source:
      openapi: openapi/openapi.json
  PayoutPaidEvent:
    docs: Published when a [Payout](entity:Payout) is complete.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"payout.paid"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was verified, in RFC 3339 format.
        access: read-only
      data:
        type: optional<PayoutPaidEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  PayoutPaidEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"payout"`.
      id:
        type: optional<string>
        docs: ID of the completed payout.
      object:
        type: optional<PayoutPaidEventObject>
        docs: An object containing the completed payout.
    source:
      openapi: openapi/openapi.json
  PayoutPaidEventObject:
    properties:
      payout:
        type: optional<Payout>
        docs: The payout that has completed.
    source:
      openapi: openapi/openapi.json
  PayoutSentEvent:
    docs: Published when a [Payout](entity:Payout) is sent.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the target location associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"payout.sent"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was verified, in RFC 3339 format.
        access: read-only
      data:
        type: optional<PayoutSentEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  PayoutSentEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"payout"`.
      id:
        type: optional<string>
        docs: ID of the sent payout.
      object:
        type: optional<PayoutSentEventObject>
        docs: An object containing the sent payout.
    source:
      openapi: openapi/openapi.json
  PayoutSentEventObject:
    properties:
      payout:
        type: optional<Payout>
        docs: The payout that was sent.
    source:
      openapi: openapi/openapi.json
  PayoutStatus:
    enum:
      - SENT
      - FAILED
      - PAID
    docs: Payout status types
    source:
      openapi: openapi/openapi.json
  PayoutType:
    enum:
      - BATCH
      - SIMPLE
    docs: >-
      The type of payout: “BATCH” or “SIMPLE”.

      BATCH payouts include a list of payout entries that can be considered
      settled.

      SIMPLE payouts do not have any payout entries associated with them

      and will show up as one of the payout entries in a future BATCH payout.
    source:
      openapi: openapi/openapi.json
  Phase:
    docs: >-
      Represents a phase, which can override subscription phases as defined by
      plan_id
    properties:
      uid:
        type: optional<nullable<string>>
        docs: id of subscription phase
      ordinal:
        type: optional<nullable<long>>
        docs: index of phase in total subscription plan
      order_template_id:
        type: optional<nullable<string>>
        docs: id of order to be used in billing
      plan_phase_uid:
        type: optional<nullable<string>>
        docs: the uid from the plan's phase in catalog
    source:
      openapi: openapi/openapi.json
  PhaseInput:
    docs: Represents the arguments used to construct a new phase.
    properties:
      ordinal:
        type: long
        docs: index of phase in total subscription plan
      order_template_id:
        type: optional<nullable<string>>
        docs: id of order to be used in billing
    source:
      openapi: openapi/openapi.json
  PrePopulatedData:
    docs: >-
      Describes buyer data to prepopulate in the payment form.

      For more information,

      see [Optional Checkout
      Configurations](https://developer.squareup.com/docs/checkout-api/optional-checkout-configurations).
    properties:
      buyer_email:
        type: optional<nullable<string>>
        docs: The buyer email to prepopulate in the payment form.
        validation:
          maxLength: 256
      buyer_phone_number:
        type: optional<nullable<string>>
        docs: The buyer phone number to prepopulate in the payment form.
        validation:
          maxLength: 17
      buyer_address:
        type: optional<Address>
        docs: The buyer address to prepopulate in the payment form.
    source:
      openapi: openapi/openapi.json
  ProcessingFee:
    docs: Represents the Square processing fee.
    properties:
      effective_at:
        type: optional<nullable<string>>
        docs: The timestamp of when the fee takes effect, in RFC 3339 format.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of fee assessed or adjusted. The fee type can be `INITIAL` or
          `ADJUSTMENT`.
      amount_money:
        type: optional<Money>
        docs: >-
          The fee amount, which might be negative, that is assessed or adjusted
          by Square.


          Positive values represent funds being assessed, while negative values
          represent

          funds being returned.
    source:
      openapi: openapi/openapi.json
  Product:
    enum:
      - SQUARE_POS
      - EXTERNAL_API
      - BILLING
      - APPOINTMENTS
      - INVOICES
      - ONLINE_STORE
      - PAYROLL
      - DASHBOARD
      - ITEM_LIBRARY_IMPORT
      - OTHER
    docs: Indicates the Square product used to generate a change.
    source:
      openapi: openapi/openapi.json
  ProductType: literal<"TERMINAL_API">
  PublishInvoiceResponse:
    docs: Describes a `PublishInvoice` response.
    properties:
      invoice:
        type: optional<Invoice>
        docs: The published invoice.
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  PublishScheduledShiftResponse:
    docs: >-
      Represents a
      [PublishScheduledShift](api-endpoint:Labor-PublishScheduledShift)
      response.

      Either `scheduled_shift` or `errors` is present in the response.
    properties:
      scheduled_shift:
        type: optional<ScheduledShift>
        docs: The published scheduled shift.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  QrCodeOptions:
    docs: Fields to describe the action that displays QR-Codes.
    properties:
      title:
        type: string
        docs: The title text to display in the QR code flow on the Terminal.
        validation:
          minLength: 1
          maxLength: 250
      body:
        type: string
        docs: The body text to display in the QR code flow on the Terminal.
        validation:
          minLength: 1
          maxLength: 10000
      barcode_contents:
        type: string
        docs: |-
          The text representation of the data to show in the QR code
          as UTF8-encoded data.
        validation:
          minLength: 1
          maxLength: 1024
    source:
      openapi: openapi/openapi.json
  QuickPay:
    docs: >-
      Describes an ad hoc item and price to generate a quick pay checkout link.

      For more information,

      see [Quick Pay
      Checkout](https://developer.squareup.com/docs/checkout-api/quick-pay-checkout).
    properties:
      name:
        type: string
        docs: >-
          The ad hoc item name. In the resulting `Order`, this name appears as
          the line item name.
        validation:
          minLength: 1
          maxLength: 255
      price_money:
        type: Money
        docs: The price of the item.
      location_id:
        type: string
        docs: The ID of the business location the checkout is associated with.
    source:
      openapi: openapi/openapi.json
  Range:
    docs: The range of a number value between the specified lower and upper bounds.
    properties:
      min:
        type: optional<nullable<string>>
        docs: >-
          The lower bound of the number range. At least one of `min` or `max`
          must be specified.

          If unspecified, the results will have no minimum value.
      max:
        type: optional<nullable<string>>
        docs: >-
          The upper bound of the number range. At least one of `min` or `max`
          must be specified.

          If unspecified, the results will have no maximum value.
    source:
      openapi: openapi/openapi.json
  ReceiptOptions:
    docs: Describes receipt action fields.
    properties:
      payment_id:
        type: string
        docs: The reference to the Square payment ID for the receipt.
      print_only:
        type: optional<nullable<boolean>>
        docs: >-
          Instructs the device to print the receipt without displaying the
          receipt selection screen.

          Requires `printer_enabled` set to true.

          Defaults to false.
      is_duplicate:
        type: optional<nullable<boolean>>
        docs: |-
          Identify the receipt as a reprint rather than an original receipt.
          Defaults to false.
    source:
      openapi: openapi/openapi.json
  RedeemLoyaltyRewardResponse:
    docs: >-
      A response that includes the `LoyaltyEvent` published for redeeming the
      reward.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      event:
        type: optional<LoyaltyEvent>
        docs: The `LoyaltyEvent` for redeeming the reward.
    source:
      openapi: openapi/openapi.json
  Refund:
    docs: Represents a refund processed for a Square transaction.
    properties:
      id:
        type: string
        docs: The refund's unique ID.
        validation:
          maxLength: 255
      location_id:
        type: string
        docs: The ID of the refund's associated location.
        validation:
          maxLength: 50
      transaction_id:
        type: optional<nullable<string>>
        docs: The ID of the transaction that the refunded tender is part of.
        validation:
          maxLength: 192
      tender_id:
        type: optional<nullable<string>>
        docs: The ID of the refunded tender.
        validation:
          maxLength: 192
      created_at:
        type: optional<string>
        docs: The timestamp for when the refund was created, in RFC 3339 format.
        validation:
          maxLength: 32
        access: read-only
      reason:
        type: string
        docs: The reason for the refund being issued.
        validation:
          maxLength: 192
      amount_money:
        type: Money
        docs: The amount of money refunded to the buyer.
      status:
        type: RefundStatus
        docs: |-
          The current status of the refund (`PENDING`, `APPROVED`, `REJECTED`,
          or `FAILED`).
          See [RefundStatus](#type-refundstatus) for possible values
      processing_fee_money:
        type: optional<Money>
        docs: The amount of Square processing fee money refunded to the *merchant*.
      additional_recipients:
        type: optional<nullable<list<AdditionalRecipient>>>
        docs: >-
          Additional recipients (other than the merchant) receiving a portion of
          this refund.

          For example, fees assessed on a refund of a purchase by a third party
          integration.
    source:
      openapi: openapi/openapi.json
  RefundCreatedEvent:
    docs: Published when a [Refund](entity:PaymentRefund) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"refund.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<RefundCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  RefundCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"refund"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: ID of the affected refund.
        validation:
          maxLength: 255
      object:
        type: optional<RefundCreatedEventObject>
        docs: An object containing the created refund.
    source:
      openapi: openapi/openapi.json
  RefundCreatedEventObject:
    properties:
      refund:
        type: optional<PaymentRefund>
        docs: The created refund.
    source:
      openapi: openapi/openapi.json
  RefundPaymentResponse:
    docs: >-
      Defines the response returned by

      [RefundPayment](api-endpoint:Refunds-RefundPayment).


      If there are errors processing the request, the `refund` field might not
      be

      present, or it might be present with a status of `FAILED`.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      refund:
        type: optional<PaymentRefund>
        docs: The successfully created `PaymentRefund`.
    source:
      openapi: openapi/openapi.json
  RefundStatus:
    enum:
      - PENDING
      - APPROVED
      - REJECTED
      - FAILED
    docs: Indicates a refund's current status.
    source:
      openapi: openapi/openapi.json
  RefundUpdatedEvent:
    docs: |-
      Published when a [Refund](entity:PaymentRefund) is updated.
      Typically the `refund.status` changes when a refund is completed.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"refund.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<RefundUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  RefundUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"refund"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: ID of the affected refund.
        validation:
          maxLength: 255
      object:
        type: optional<RefundUpdatedEventObject>
        docs: An object containing the updated refund.
    source:
      openapi: openapi/openapi.json
  RefundUpdatedEventObject:
    properties:
      refund:
        type: optional<PaymentRefund>
        docs: The updated refund.
    source:
      openapi: openapi/openapi.json
  RegisterDomainResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the [RegisterDomain](api-endpoint:ApplePay-RegisterDomain)
      endpoint.


      Either `errors` or `status` are present in a given response (never both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      status:
        type: optional<RegisterDomainResponseStatus>
        docs: >-
          The status of the domain registration.


          See
          [RegisterDomainResponseStatus](entity:RegisterDomainResponseStatus)
          for possible values.

          See [RegisterDomainResponseStatus](#type-registerdomainresponsestatus)
          for possible values
    source:
      openapi: openapi/openapi.json
  RegisterDomainResponseStatus:
    enum:
      - PENDING
      - VERIFIED
    docs: The status of the domain registration.
    source:
      openapi: openapi/openapi.json
  RemoveGroupFromCustomerResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [RemoveGroupFromCustomer](api-endpoint:Customers-RemoveGroupFromCustomer)

      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  ResumeSubscriptionResponse:
    docs: >-
      Defines output parameters in a response from the 

      [ResumeSubscription](api-endpoint:Subscriptions-ResumeSubscription)
      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered during the request.
      subscription:
        type: optional<Subscription>
        docs: The resumed subscription.
      actions:
        type: optional<list<SubscriptionAction>>
        docs: >-
          A list of `RESUME` actions created by the request and scheduled for
          the subscription.
    source:
      openapi: openapi/openapi.json
  RetrieveBookingCustomAttributeDefinitionResponse:
    docs: >-
      Represents a
      [RetrieveBookingCustomAttributeDefinition](api-endpoint:BookingCustomAttributes-RetrieveBookingCustomAttributeDefinition)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The retrieved custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  RetrieveBookingCustomAttributeResponse:
    docs: >-
      Represents a
      [RetrieveBookingCustomAttribute](api-endpoint:BookingCustomAttributes-RetrieveBookingCustomAttribute)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute:
        type: optional<CustomAttribute>
        docs: >-
          The retrieved custom attribute. If `with_definition` was set to `true`
          in the request,

          the custom attribute definition is returned in the `definition` field.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetBookingResponse:
    properties:
      booking:
        type: optional<Booking>
        docs: The booking that was requested.
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetBusinessBookingProfileResponse:
    properties:
      business_booking_profile:
        type: optional<BusinessBookingProfile>
        docs: The seller's booking profile.
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetCardResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the [RetrieveCard](api-endpoint:Cards-RetrieveCard) endpoint.


      Note: if there are errors processing the request, the card field will not
      be

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      card:
        type: optional<Card>
        docs: The retrieved card.
    source:
      openapi: openapi/openapi.json
  GetCashDrawerShiftResponse:
    properties:
      cash_drawer_shift:
        type: optional<CashDrawerShift>
        docs: The cash drawer shift queried for.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetCatalogObjectResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      object:
        type: optional<CatalogObject>
        docs: The `CatalogObject`s returned.
      related_objects:
        type: optional<list<CatalogObject>>
        docs: >-
          A list of `CatalogObject`s referenced by the object in the `object`
          field.
    source:
      openapi: openapi/openapi.json
  GetCustomerCustomAttributeDefinitionResponse:
    docs: >-
      Represents a
      [RetrieveCustomerCustomAttributeDefinition](api-endpoint:CustomerCustomAttributes-RetrieveCustomerCustomAttributeDefinition)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The retrieved custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetCustomerCustomAttributeResponse:
    docs: >-
      Represents a
      [RetrieveCustomerCustomAttribute](api-endpoint:CustomerCustomAttributes-RetrieveCustomerCustomAttribute)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute:
        type: optional<CustomAttribute>
        docs: >-
          The retrieved custom attribute. If `with_definition` was set to `true`
          in the request,

          the custom attribute definition is returned in the `definition` field.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetCustomerGroupResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [RetrieveCustomerGroup](api-endpoint:CustomerGroups-RetrieveCustomerGroup)
      endpoint.


      Either `errors` or `group` is present in a given response (never both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      group:
        type: optional<CustomerGroup>
        docs: The retrieved customer group.
    source:
      openapi: openapi/openapi.json
  GetCustomerResponse:
    docs: |-
      Defines the fields that are included in the response body of
      a request to the `RetrieveCustomer` endpoint.

      Either `errors` or `customer` is present in a given response (never both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      customer:
        type: optional<Customer>
        docs: The requested customer.
    source:
      openapi: openapi/openapi.json
  GetCustomerSegmentResponse:
    docs: >-
      Defines the fields that are included in the response body for requests to
      the `RetrieveCustomerSegment` endpoint.


      Either `errors` or `segment` is present in a given response (never both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      segment:
        type: optional<CustomerSegment>
        docs: The retrieved customer segment.
    source:
      openapi: openapi/openapi.json
  GetDisputeEvidenceResponse:
    docs: Defines the fields in a `RetrieveDisputeEvidence` response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      evidence:
        type: optional<DisputeEvidence>
        docs: Metadata about the dispute evidence file.
    source:
      openapi: openapi/openapi.json
  GetDisputeResponse:
    docs: Defines fields in a `RetrieveDispute` response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      dispute:
        type: optional<Dispute>
        docs: Details about the requested `Dispute`.
    source:
      openapi: openapi/openapi.json
  GetEmployeeResponse:
    properties:
      employee: optional<Employee>
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetGiftCardFromGANResponse:
    docs: >-
      A response that contains a `GiftCard`. This response might contain a set
      of `Error` objects

      if the request resulted in errors.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      gift_card:
        type: optional<GiftCard>
        docs: >-
          A gift card that was fetched, if present. It returns empty if an error
          occurred.
    source:
      openapi: openapi/openapi.json
  GetGiftCardFromNonceResponse:
    docs: >-
      A response that contains a `GiftCard` object. If the request resulted in
      errors, 

      the response contains a set of `Error` objects.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      gift_card:
        type: optional<GiftCard>
        docs: The retrieved gift card.
    source:
      openapi: openapi/openapi.json
  GetGiftCardResponse:
    docs: >-
      A response that contains a `GiftCard`. The response might contain a set of
      `Error` objects

      if the request resulted in errors.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      gift_card:
        type: optional<GiftCard>
        docs: The gift card retrieved.
    source:
      openapi: openapi/openapi.json
  GetInventoryAdjustmentResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      adjustment:
        type: optional<InventoryAdjustment>
        docs: The requested [InventoryAdjustment](entity:InventoryAdjustment).
    source:
      openapi: openapi/openapi.json
  GetInventoryChangesResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      changes:
        type: optional<list<InventoryChange>>
        docs: The set of inventory changes for the requested object and locations.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If unset,

          this is the final response.


          See the
          [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)
          guide for more information.
    source:
      openapi: openapi/openapi.json
  GetInventoryCountResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      counts:
        type: optional<list<InventoryCount>>
        docs: |-
          The current calculated inventory counts for the requested object and
          locations.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If unset,

          this is the final response.


          See the
          [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)
          guide for more information.
    source:
      openapi: openapi/openapi.json
  GetInventoryPhysicalCountResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      count:
        type: optional<InventoryPhysicalCount>
        docs: The requested [InventoryPhysicalCount](entity:InventoryPhysicalCount).
    source:
      openapi: openapi/openapi.json
  GetInventoryTransferResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      transfer:
        type: optional<InventoryTransfer>
        docs: The requested [InventoryTransfer](entity:InventoryTransfer).
    source:
      openapi: openapi/openapi.json
  RetrieveJobResponse:
    docs: >-
      Represents a [RetrieveJob](api-endpoint:Team-RetrieveJob) response. Either
      `job` or `errors`

      is present in the response.
    properties:
      job:
        type: optional<Job>
        docs: The retrieved job.
      errors:
        type: optional<list<Error>>
        docs: The errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  RetrieveLocationBookingProfileResponse:
    properties:
      location_booking_profile:
        type: optional<LocationBookingProfile>
        docs: The requested location booking profile.
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  RetrieveLocationCustomAttributeDefinitionResponse:
    docs: >-
      Represents a
      [RetrieveLocationCustomAttributeDefinition](api-endpoint:LocationCustomAttributes-RetrieveLocationCustomAttributeDefinition)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The retrieved custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  RetrieveLocationCustomAttributeResponse:
    docs: >-
      Represents a
      [RetrieveLocationCustomAttribute](api-endpoint:LocationCustomAttributes-RetrieveLocationCustomAttribute)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute:
        type: optional<CustomAttribute>
        docs: >-
          The retrieved custom attribute. If `with_definition` was set to `true`
          in the request,

          the custom attribute definition is returned in the `definition` field.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetLocationResponse:
    docs: >-
      Defines the fields that the
      [RetrieveLocation](api-endpoint:Locations-RetrieveLocation)

      endpoint returns in a response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      location:
        type: optional<Location>
        docs: The requested location.
    source:
      openapi: openapi/openapi.json
  RetrieveLocationSettingsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      location_settings:
        type: optional<CheckoutLocationSettings>
        docs: The location settings.
    source:
      openapi: openapi/openapi.json
  GetLoyaltyAccountResponse:
    docs: A response that includes the loyalty account.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      loyalty_account:
        type: optional<LoyaltyAccount>
        docs: The loyalty account.
    source:
      openapi: openapi/openapi.json
  GetLoyaltyProgramResponse:
    docs: A response that contains the loyalty program.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      program:
        type: optional<LoyaltyProgram>
        docs: The loyalty program that was requested.
    source:
      openapi: openapi/openapi.json
  GetLoyaltyPromotionResponse:
    docs: >-
      Represents a
      [RetrieveLoyaltyPromotionPromotions](api-endpoint:Loyalty-RetrieveLoyaltyPromotion)
      response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      loyalty_promotion:
        type: optional<LoyaltyPromotion>
        docs: The retrieved loyalty promotion.
    source:
      openapi: openapi/openapi.json
  GetLoyaltyRewardResponse:
    docs: A response that includes the loyalty reward.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      reward:
        type: optional<LoyaltyReward>
        docs: The loyalty reward retrieved.
    source:
      openapi: openapi/openapi.json
  RetrieveMerchantCustomAttributeDefinitionResponse:
    docs: >-
      Represents a
      [RetrieveMerchantCustomAttributeDefinition](api-endpoint:MerchantCustomAttributes-RetrieveMerchantCustomAttributeDefinition)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The retrieved custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  RetrieveMerchantCustomAttributeResponse:
    docs: >-
      Represents a
      [RetrieveMerchantCustomAttribute](api-endpoint:MerchantCustomAttributes-RetrieveMerchantCustomAttribute)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute:
        type: optional<CustomAttribute>
        docs: >-
          The retrieved custom attribute. If `with_definition` was set to `true`
          in the request,

          the custom attribute definition is returned in the `definition` field.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetMerchantResponse:
    docs: >-
      The response object returned by the
      [RetrieveMerchant](api-endpoint:Merchants-RetrieveMerchant) endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      merchant:
        type: optional<Merchant>
        docs: The requested `Merchant` object.
    source:
      openapi: openapi/openapi.json
  RetrieveMerchantSettingsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      merchant_settings:
        type: optional<CheckoutMerchantSettings>
        docs: The merchant settings.
    source:
      openapi: openapi/openapi.json
  RetrieveOrderCustomAttributeDefinitionResponse:
    docs: Represents a response from getting an order custom attribute definition.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The retrieved custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  RetrieveOrderCustomAttributeResponse:
    docs: Represents a response from getting an order custom attribute.
    properties:
      custom_attribute:
        type: optional<CustomAttribute>
        docs: >-
          The retrieved custom attribute. If `with_definition` was set to `true`
          in the request, the custom attribute definition is returned in the
          `definition field.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetOrderResponse:
    properties:
      order:
        type: optional<Order>
        docs: The requested order.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetPaymentLinkResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      payment_link:
        type: optional<PaymentLink>
        docs: The payment link that is retrieved.
    source:
      openapi: openapi/openapi.json
  RetrieveScheduledShiftResponse:
    docs: >-
      Represents a
      [RetrieveScheduledShift](api-endpoint:Labor-RetrieveScheduledShift)
      response.

      Either `scheduled_shift` or `errors` is present in the response.
    properties:
      scheduled_shift:
        type: optional<ScheduledShift>
        docs: The requested scheduled shift.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetSnippetResponse:
    docs: >-
      Represents a `RetrieveSnippet` response. The response can include either
      `snippet` or `errors`.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      snippet:
        type: optional<Snippet>
        docs: The retrieved snippet.
    source:
      openapi: openapi/openapi.json
  GetSubscriptionResponse:
    docs: >-
      Defines output parameters in a response from the

      [RetrieveSubscription](api-endpoint:Subscriptions-RetrieveSubscription)
      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered during the request.
      subscription:
        type: optional<Subscription>
        docs: The subscription retrieved.
    source:
      openapi: openapi/openapi.json
  GetTeamMemberBookingProfileResponse:
    properties:
      team_member_booking_profile:
        type: optional<TeamMemberBookingProfile>
        docs: The returned team member booking profile.
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetTeamMemberResponse:
    docs: >-
      Represents a response from a retrieve request containing a `TeamMember`
      object or error messages.
    properties:
      team_member:
        type: optional<TeamMember>
        docs: The successfully retrieved `TeamMember` object.
      errors:
        type: optional<list<Error>>
        docs: The errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  RetrieveTimecardResponse:
    docs: >-
      A response to a request to get a `Timecard`. The response contains

      the requested `Timecard` object and might contain a set of `Error` objects
      if

      the request resulted in errors.
    properties:
      timecard:
        type: optional<Timecard>
        docs: The requested `Timecard`.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  RetrieveTokenStatusResponse:
    docs: |-
      Defines the fields that are included in the response body of
      a request to the `RetrieveTokenStatus` endpoint.
    properties:
      scopes:
        type: optional<list<string>>
        docs: The list of scopes associated with an access token.
      expires_at:
        type: optional<string>
        docs: "The date and time when the\_`access_token`\_expires, in RFC 3339 format. Empty if the token never expires."
      client_id:
        type: optional<string>
        docs: >-
          The Square-issued application ID associated with the access token.
          This is the same application ID used to obtain the token.
        validation:
          maxLength: 191
      merchant_id:
        type: optional<string>
        docs: The ID of the authorizing merchant's business.
        validation:
          minLength: 8
          maxLength: 191
      errors:
        type: optional<list<Error>>
        docs: ' Any errors that occurred during the request.'
    source:
      openapi: openapi/openapi.json
  GetTransactionResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [RetrieveTransaction](api-endpoint:Transactions-RetrieveTransaction)
      endpoint.


      One of `errors` or `transaction` is present in a given response (never
      both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      transaction:
        type: optional<Transaction>
        docs: The requested transaction.
    source:
      openapi: openapi/openapi.json
  GetVendorResponse:
    docs: >-
      Represents an output from a call to
      [RetrieveVendor](api-endpoint:Vendors-RetrieveVendor).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered when the request fails.
      vendor:
        type: optional<Vendor>
        docs: The successfully retrieved [Vendor](entity:Vendor) object.
    source:
      openapi: openapi/openapi.json
  GetWageSettingResponse:
    docs: >-
      Represents a response from a retrieve request containing the specified
      `WageSetting` object or error messages.
    properties:
      wage_setting:
        type: optional<WageSetting>
        docs: The successfully retrieved `WageSetting` object.
      errors:
        type: optional<list<Error>>
        docs: The errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  GetWebhookSubscriptionResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [RetrieveWebhookSubscription](api-endpoint:WebhookSubscriptions-RetrieveWebhookSubscription)
      endpoint.


      Note: if there are errors processing the request, the
      [Subscription](entity:WebhookSubscription) will not be

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      subscription:
        type: optional<WebhookSubscription>
        docs: The requested [Subscription](entity:WebhookSubscription).
    source:
      openapi: openapi/openapi.json
  RevokeTokenResponse:
    properties:
      success:
        type: optional<boolean>
        docs: If the request is successful, this is `true`.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  RiskEvaluation:
    docs: >-
      Represents fraud risk information for the associated payment.


      When you take a payment through Square's Payments API (using the
      `CreatePayment`

      endpoint), Square evaluates it and assigns a risk level to the payment.
      Sellers

      can use this information to determine the course of action (for example,

      provide the goods/services or refund the payment).
    properties:
      created_at:
        type: optional<string>
        docs: The timestamp when payment risk was evaluated, in RFC 3339 format.
        access: read-only
      risk_level:
        type: optional<RiskEvaluationRiskLevel>
        docs: >-
          The risk level associated with the payment

          See [RiskEvaluationRiskLevel](#type-riskevaluationrisklevel) for
          possible values
    source:
      openapi: openapi/openapi.json
  RiskEvaluationRiskLevel:
    enum:
      - PENDING
      - NORMAL
      - MODERATE
      - HIGH
    source:
      openapi: openapi/openapi.json
  SaveCardOptions:
    docs: Describes save-card action fields.
    properties:
      customer_id:
        type: string
        docs: The square-assigned ID of the customer linked to the saved card.
      card_id:
        type: optional<string>
        docs: The id of the created card-on-file.
        validation:
          maxLength: 64
        access: read-only
      reference_id:
        type: optional<nullable<string>>
        docs: >-
          An optional user-defined reference ID that can be used to associate

          this `Card` to another entity in an external system. For example, a
          customer

          ID generated by a third-party system.
        validation:
          maxLength: 128
    source:
      openapi: openapi/openapi.json
  ScheduledShift:
    docs: >-
      Represents a specific time slot in a work schedule. This object is used to
      manage the

      lifecycle of a scheduled shift from the draft to published state. A
      scheduled shift contains

      the latest draft shift details and current published shift details.
    properties:
      id:
        type: optional<string>
        docs: '**Read only** The Square-issued ID of the scheduled shift.'
        validation:
          maxLength: 255
      draft_shift_details:
        type: optional<ScheduledShiftDetails>
        docs: >-
          The latest draft shift details for the scheduled shift. Draft shift
          details are used to

          stage and manage shifts before publishing. This field is always
          present.
      published_shift_details:
        type: optional<ScheduledShiftDetails>
        docs: >-
          The current published (public) shift details for the scheduled shift.
          This field is

          present only if the shift was published.
      version:
        type: optional<integer>
        docs: >-
          **Read only** The current version of the scheduled shift, which is
          incremented with each update.

          This field is used for [optimistic
          concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)

          control to ensure that requests don't overwrite data from another
          request.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp of when the scheduled shift was created, in RFC 3339
          format presented as UTC.
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp of when the scheduled shift was last updated, in RFC
          3339 format presented as UTC.
        access: read-only
    source:
      openapi: openapi/openapi.json
  ScheduledShiftDetails:
    docs: >-
      Represents shift details for draft and published versions of a [scheduled
      shift](entity:ScheduledShift),

      such as job ID, team member assignment, and start and end times.
    properties:
      team_member_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the [team member](entity:TeamMember) scheduled for the
          shift.
        validation:
          maxLength: 255
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the [location](entity:Location) the shift is scheduled for.
        validation:
          maxLength: 255
      job_id:
        type: optional<nullable<string>>
        docs: The ID of the [job](entity:Job) the shift is scheduled for.
      start_at:
        type: optional<nullable<string>>
        docs: >-
          The start time of the shift, in RFC 3339 format in the time zone
          &plus;

          offset of the shift location specified in `location_id`. Precision up
          to the minute

          is respected; seconds are truncated.
      end_at:
        type: optional<nullable<string>>
        docs: >-
          The end time for the shift, in RFC 3339 format in the time zone &plus;

          offset of the shift location specified in `location_id`. Precision up
          to the minute

          is respected; seconds are truncated.
      notes:
        type: optional<nullable<string>>
        docs: Optional notes for the shift.
        validation:
          maxLength: 1000
      is_deleted:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether the draft shift version is deleted. If set to `true`
          when the shift

          is published, the entire scheduled shift (including the published
          shift) is deleted and

          cannot be accessed using any endpoint.
      timezone:
        type: optional<string>
        docs: >-
          The time zone of the shift location, calculated based on the
          `location_id`. This field

          is provided for convenience.
        access: read-only
    source:
      openapi: openapi/openapi.json
  ScheduledShiftFilter:
    docs: >-
      Defines filter criteria for a
      [SearchScheduledShifts](api-endpoint:Labor-SearchScheduledShifts)

      request. Multiple filters in a query are combined as an `AND` operation.
    properties:
      location_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          Return shifts for the specified locations. When omitted, shifts for
          all

          locations are returned. If needed, call
          [ListLocations](api-endpoint:Locations-ListLocations)

          to get location IDs.
      start:
        type: optional<TimeRange>
        docs: |-
          Return shifts whose `start_at` time is within the specified
          time range (inclusive).
      end:
        type: optional<TimeRange>
        docs: |-
          Return shifts whose `end_at` time is within the specified
          time range (inclusive).
      workday:
        type: optional<ScheduledShiftWorkday>
        docs: Return shifts based on a workday date range.
      team_member_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          Return shifts assigned to specified team members. If needed, call

          [SearchTeamMembers](api-endpoint:Team-SearchTeamMembers) to get team
          member IDs.


          To return only the shifts assigned to the specified team members,
          include the

          `assignment_status` filter in the query. Otherwise, all unassigned
          shifts are

          returned along with shifts assigned to the specified team members.
      assignment_status:
        type: optional<ScheduledShiftFilterAssignmentStatus>
        docs: >-
          Return shifts based on whether a team member is assigned. A shift is

          assigned if the `team_member_id` field is populated in the
          `draft_shift_details`

          or `published_shift details` field of the shift.


          To return only draft or published shifts, include the
          `scheduled_shift_statuses`

          filter in the query.

          See
          [ScheduledShiftFilterAssignmentStatus](#type-scheduledshiftfilterassignmentstatus)
          for possible values
      scheduled_shift_statuses:
        type: optional<nullable<list<ScheduledShiftFilterScheduledShiftStatus>>>
        docs: >-
          Return shifts based on the draft or published status of the shift.

          A shift is published if the `published_shift_details` field is
          present.


          Note that shifts with `draft_shift_details.is_deleted` set to `true`
          are ignored

          with the `DRAFT` filter.

          See
          [ScheduledShiftFilterScheduledShiftStatus](#type-scheduledshiftfilterscheduledshiftstatus)
          for possible values
    source:
      openapi: openapi/openapi.json
  ScheduledShiftFilterAssignmentStatus:
    enum:
      - ASSIGNED
      - UNASSIGNED
    docs: |-
      Defines valid values for the `assignment_status` filter in a
      [SearchScheduledShifts](api-endpoint:Labor-SearchScheduledShifts) request.
      Assignment status is based on the `draft_shift_details.team_member_id` and
      `published_shift_details.team_member_id` fields of the scheduled shift.
    source:
      openapi: openapi/openapi.json
  ScheduledShiftFilterScheduledShiftStatus:
    enum:
      - DRAFT
      - PUBLISHED
    docs: |-
      Defines valid values for the `scheduled_shift_statuses` filter in a
      [SearchScheduledShifts](api-endpoint:Labor-SearchScheduledShifts) request.
    source:
      openapi: openapi/openapi.json
  ScheduledShiftNotificationAudience:
    enum:
      - ALL
      - AFFECTED
      - NONE
    docs: >-
      Indicates whether Square sends an email notification to team members

      when a scheduled shift is published and which team members receive the
      notification.
    source:
      openapi: openapi/openapi.json
  ScheduledShiftQuery:
    docs: |-
      Represents filter and sort criteria for the `query` field in a
      [SearchScheduledShifts](api-endpoint:Labor-SearchScheduledShifts) request.
    properties:
      filter:
        type: optional<ScheduledShiftFilter>
        docs: Filtering options for the query.
      sort:
        type: optional<ScheduledShiftSort>
        docs: Sorting options for the query.
    source:
      openapi: openapi/openapi.json
  ScheduledShiftSort:
    docs: >-
      Defines sort criteria for a
      [SearchScheduledShifts](api-endpoint:Labor-SearchScheduledShifts)

      request.
    properties:
      field:
        type: optional<ScheduledShiftSortField>
        docs: >-
          The field to sort on. The default value is `START_AT`.

          See [ScheduledShiftSortField](#type-scheduledshiftsortfield) for
          possible values
      order:
        type: optional<SortOrder>
        docs: |-
          The order in which results are returned. The default value is `ASC`.
          See [SortOrder](#type-sortorder) for possible values
    source:
      openapi: openapi/openapi.json
  ScheduledShiftSortField:
    enum:
      - START_AT
      - END_AT
      - CREATED_AT
      - UPDATED_AT
    docs: |-
      Defines valid values for the `field` sort setting in a
      [SearchScheduledShifts](api-endpoint:Labor-SearchScheduledShifts) request.
    source:
      openapi: openapi/openapi.json
  ScheduledShiftWorkday:
    docs: >-
      A `ScheduledShift` search query filter parameter that sets a range of days
      that

      a `Shift` must start or end in before passing the filter condition.
    properties:
      date_range:
        type: optional<DateRange>
        docs: Dates for fetching the scheduled shifts.
      match_scheduled_shifts_by:
        type: optional<ScheduledShiftWorkdayMatcher>
        docs: >-
          The strategy on which the dates are applied.

          See [ScheduledShiftWorkdayMatcher](#type-scheduledshiftworkdaymatcher)
          for possible values
      default_timezone:
        type: optional<nullable<string>>
        docs: >-
          Location-specific timezones convert workdays to datetime filters.

          Every location included in the query must have a timezone or this
          field

          must be provided as a fallback. Format: the IANA timezone database

          identifier for the relevant timezone.
    source:
      openapi: openapi/openapi.json
  ScheduledShiftWorkdayMatcher:
    enum:
      - START_AT
      - END_AT
      - INTERSECTION
    docs: Defines the logic used to apply a workday filter.
    source:
      openapi: openapi/openapi.json
  SearchAvailabilityFilter:
    docs: A query filter to search for buyer-accessible availabilities by.
    properties:
      start_at_range:
        type: TimeRange
        docs: >-
          The query expression to search for buy-accessible availabilities with
          their starting times falling within the specified time range.

          The time range must be at least 24 hours and at most 32 days long.

          For waitlist availabilities, the time range can be 0 or more up to 367
          days long.
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The query expression to search for buyer-accessible availabilities
          with their location IDs matching the specified location ID.

          This query expression cannot be set if `booking_id` is set.
        validation:
          maxLength: 32
      segment_filters:
        type: optional<nullable<list<SegmentFilter>>>
        docs: >-
          The query expression to search for buyer-accessible availabilities
          matching the specified list of segment filters.

          If the size of the `segment_filters` list is `n`, the search returns
          availabilities with `n` segments per availability.


          This query expression cannot be set if `booking_id` is set.
      booking_id:
        type: optional<nullable<string>>
        docs: >-
          The query expression to search for buyer-accessible availabilities for
          an existing booking by matching the specified `booking_id` value.

          This is commonly used to reschedule an appointment.

          If this expression is set, the `location_id` and `segment_filters`
          expressions cannot be set.
        validation:
          maxLength: 36
    source:
      openapi: openapi/openapi.json
  SearchAvailabilityQuery:
    docs: The query used to search for buyer-accessible availabilities of bookings.
    properties:
      filter:
        type: SearchAvailabilityFilter
        docs: >-
          The query filter to search for buyer-accessible availabilities of
          existing bookings.
    source:
      openapi: openapi/openapi.json
  SearchAvailabilityResponse:
    properties:
      availabilities:
        type: optional<list<Availability>>
        docs: List of appointment slots available for booking.
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  SearchCatalogItemsRequestStockLevel:
    enum:
      - OUT
      - LOW
    docs: Defines supported stock levels of the item inventory.
    source:
      openapi: openapi/openapi.json
  SearchCatalogItemsResponse:
    docs: >-
      Defines the response body returned from the
      [SearchCatalogItems](api-endpoint:Catalog-SearchCatalogItems) endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      items:
        type: optional<list<CatalogObject>>
        docs: Returned items matching the specified query expressions.
      cursor:
        type: optional<string>
        docs: >-
          Pagination token used in the next request to return more of the search
          result.
      matched_variation_ids:
        type: optional<list<string>>
        docs: >-
          Ids of returned item variations matching the specified query
          expression.
    source:
      openapi: openapi/openapi.json
  SearchCatalogObjectsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If unset,
          this is the final response.

          See
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination)
          for more information.
      objects:
        type: optional<list<CatalogObject>>
        docs: The CatalogObjects returned.
      related_objects:
        type: optional<list<CatalogObject>>
        docs: >-
          A list of CatalogObjects referenced by the objects in the `objects`
          field.
      latest_time:
        type: optional<string>
        docs: >-
          When the associated product catalog was last updated. Will

          match the value for `end_time` or `cursor` if either field is included
          in the `SearchCatalog` request.
    source:
      openapi: openapi/openapi.json
  SearchCustomersResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the `SearchCustomers` endpoint.


      Either `errors` or `customers` is present in a given response (never
      both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      customers:
        type: optional<list<Customer>>
        docs: >-
          The customer profiles that match the search query. If any search
          condition is not met, the result is an empty object (`{}`).

          Only customer profiles with public information (`given_name`,
          `family_name`, `company_name`, `email_address`, or `phone_number`)

          are included in the response.
      cursor:
        type: optional<string>
        docs: >-
          A pagination cursor that can be used during subsequent calls

          to `SearchCustomers` to retrieve the next set of results associated

          with the original query. Pagination cursors are only present when

          a request succeeds and additional results are available.


          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      count:
        type: optional<long>
        docs: >-
          The total count of customers associated with the Square account that
          match the search query. Only customer profiles with

          public information (`given_name`, `family_name`, `company_name`,
          `email_address`, or `phone_number`) are counted. This field is

          present only if `count` is set to `true` in the request.
    source:
      openapi: openapi/openapi.json
  SearchEventsFilter:
    docs: Criteria to filter events by.
    properties:
      event_types:
        type: optional<nullable<list<string>>>
        docs: Filter events by event types.
      merchant_ids:
        type: optional<nullable<list<string>>>
        docs: Filter events by merchant.
      location_ids:
        type: optional<nullable<list<string>>>
        docs: Filter events by location.
      created_at:
        type: optional<TimeRange>
        docs: Filter events by when they were created.
    source:
      openapi: openapi/openapi.json
  SearchEventsQuery:
    docs: Contains query criteria for the search.
    properties:
      filter:
        type: optional<SearchEventsFilter>
        docs: Criteria to filter events by.
      sort:
        type: optional<SearchEventsSort>
        docs: Criteria to sort events by.
    source:
      openapi: openapi/openapi.json
  SearchEventsResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the [SearchEvents](api-endpoint:Events-SearchEvents)
      endpoint.


      Note: if there are errors processing the request, the events field will
      not be

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      events:
        type: optional<list<Event>>
        docs: The list of [Event](entity:Event)s returned by the search.
      metadata:
        type: optional<list<EventMetadata>>
        docs: >-
          Contains the metadata of an event. For more information, see
          [Event](entity:Event).
      cursor:
        type: optional<string>
        docs: >-
          When a response is truncated, it includes a cursor that you can use in
          a subsequent request to fetch the next set of events. If empty, this
          is the final response.


          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  SearchEventsSort:
    docs: Criteria to sort events by.
    properties:
      field:
        type: optional<SearchEventsSortField>
        docs: >-
          Sort events by event types.

          See [SearchEventsSortField](#type-searcheventssortfield) for possible
          values
      order:
        type: optional<SortOrder>
        docs: |-
          The order to use for sorting the events.
          See [SortOrder](#type-sortorder) for possible values
    source:
      openapi: openapi/openapi.json
  SearchEventsSortField:
    type: literal<"DEFAULT">
    docs: Specifies the sort key for events returned from a search.
  SearchInvoicesResponse:
    docs: Describes a `SearchInvoices` response.
    properties:
      invoices:
        type: optional<list<Invoice>>
        docs: The list of invoices returned by the search.
      cursor:
        type: optional<string>
        docs: >-
          When a response is truncated, it includes a cursor that you can use in
          a 

          subsequent request to fetch the next set of invoices. If empty, this
          is the final 

          response. 

          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  SearchLoyaltyAccountsRequestLoyaltyAccountQuery:
    docs: The search criteria for the loyalty accounts.
    properties:
      mappings:
        type: optional<nullable<list<LoyaltyAccountMapping>>>
        docs: |-
          The set of mappings to use in the loyalty account search.  

          This cannot be combined with `customer_ids`.  

          Max: 30 mappings
      customer_ids:
        type: optional<nullable<list<string>>>
        docs: |-
          The set of customer IDs to use in the loyalty account search.  

          This cannot be combined with `mappings`.  

          Max: 30 customer IDs
    source:
      openapi: openapi/openapi.json
  SearchLoyaltyAccountsResponse:
    docs: >-
      A response that includes loyalty accounts that satisfy the search
      criteria.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      loyalty_accounts:
        type: optional<list<LoyaltyAccount>>
        docs: |-
          The loyalty accounts that met the search criteria,  
          in order of creation date.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to use in a subsequent 

          request. If empty, this is the final response.

          For more information, 

          see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  SearchLoyaltyEventsResponse:
    docs: |-
      A response that contains loyalty events that satisfy the search 
      criteria, in order by the `created_at` date.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      events:
        type: optional<list<LoyaltyEvent>>
        docs: The loyalty events that satisfy the search criteria.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent 

          request. If empty, this is the final response. 

          For more information, 

          see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  SearchLoyaltyRewardsRequestLoyaltyRewardQuery:
    docs: The set of search requirements.
    properties:
      loyalty_account_id:
        type: string
        docs: >-
          The ID of the [loyalty account](entity:LoyaltyAccount) to which the
          loyalty reward belongs.
        validation:
          minLength: 1
      status:
        type: optional<LoyaltyRewardStatus>
        docs: >-
          The status of the loyalty reward.

          See [LoyaltyRewardStatus](#type-loyaltyrewardstatus) for possible
          values
    source:
      openapi: openapi/openapi.json
  SearchLoyaltyRewardsResponse:
    docs: >-
      A response that includes the loyalty rewards satisfying the search
      criteria.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      rewards:
        type: optional<list<LoyaltyReward>>
        docs: |-
          The loyalty rewards that satisfy the search criteria.
          These are returned in descending order by `updated_at`.
      cursor:
        type: optional<string>
        docs: |-
          The pagination cursor to be used in a subsequent 
          request. If empty, this is the final response.
    source:
      openapi: openapi/openapi.json
  SearchOrdersCustomerFilter:
    docs: |-
      A filter based on the order `customer_id` and any tender `customer_id`
      associated with the order. It does not filter based on the
      [FulfillmentRecipient](entity:FulfillmentRecipient) `customer_id`.
    properties:
      customer_ids:
        type: optional<nullable<list<string>>>
        docs: |-
          A list of customer IDs to filter by.

          Max: 10 customer ids.
    source:
      openapi: openapi/openapi.json
  SearchOrdersDateTimeFilter:
    docs: >-
      Filter for `Order` objects based on whether their `CREATED_AT`,

      `CLOSED_AT`, or `UPDATED_AT` timestamps fall within a specified time
      range.

      You can specify the time range and which timestamp to filter for. You can
      filter

      for only one time range at a time.


      For each time range, the start time and end time are inclusive. If the end
      time

      is absent, it defaults to the time of the first request for the cursor.


      __Important:__ If you use the `DateTimeFilter` in a `SearchOrders` query,

      you must set the `sort_field` in [OrdersSort](entity:SearchOrdersSort)

      to the same field you filter for. For example, if you set the `CLOSED_AT`
      field

      in `DateTimeFilter`, you must set the `sort_field` in `SearchOrdersSort`
      to

      `CLOSED_AT`. Otherwise, `SearchOrders` throws an error.

      [Learn more about filtering orders by time
      range.](https://developer.squareup.com/docs/orders-api/manage-orders/search-orders#important-note-about-filtering-orders-by-time-range)
    properties:
      created_at:
        type: optional<TimeRange>
        docs: >-
          The time range for filtering on the `created_at` timestamp. If you use
          this

          value, you must set the `sort_field` in the `OrdersSearchSort` object
          to

          `CREATED_AT`.
      updated_at:
        type: optional<TimeRange>
        docs: >-
          The time range for filtering on the `updated_at` timestamp. If you use
          this

          value, you must set the `sort_field` in the `OrdersSearchSort` object
          to

          `UPDATED_AT`.
      closed_at:
        type: optional<TimeRange>
        docs: >-
          The time range for filtering on the `closed_at` timestamp. If you use
          this

          value, you must set the `sort_field` in the `OrdersSearchSort` object
          to

          `CLOSED_AT`.
    source:
      openapi: openapi/openapi.json
  SearchOrdersFilter:
    docs: |-
      Filtering criteria to use for a `SearchOrders` request. Multiple filters
      are ANDed together.
    properties:
      state_filter:
        type: optional<SearchOrdersStateFilter>
        docs: Filter by [OrderState](entity:OrderState).
      date_time_filter:
        type: optional<SearchOrdersDateTimeFilter>
        docs: >-
          Filter for results within a time range.


          __Important:__ If you filter for orders by time range, you must set
          `SearchOrdersSort`

          to sort by the same field.

          [Learn more about filtering orders by time
          range.](https://developer.squareup.com/docs/orders-api/manage-orders/search-orders#important-note-about-filtering-orders-by-time-range)
      fulfillment_filter:
        type: optional<SearchOrdersFulfillmentFilter>
        docs: Filter by the fulfillment type or state.
      source_filter:
        type: optional<SearchOrdersSourceFilter>
        docs: Filter by the source of the order.
      customer_filter:
        type: optional<SearchOrdersCustomerFilter>
        docs: Filter by customers associated with the order.
    source:
      openapi: openapi/openapi.json
  SearchOrdersFulfillmentFilter:
    docs: Filter based on [order fulfillment](entity:Fulfillment) information.
    properties:
      fulfillment_types:
        type: optional<nullable<list<FulfillmentType>>>
        docs: >-
          A list of [fulfillment types](entity:FulfillmentType) to filter

          for. The list returns orders if any of its fulfillments match any of
          the fulfillment types

          listed in this field.

          See [FulfillmentType](#type-fulfillmenttype) for possible values
      fulfillment_states:
        type: optional<nullable<list<FulfillmentState>>>
        docs: >-
          A list of [fulfillment states](entity:FulfillmentState) to filter

          for. The list returns orders if any of its fulfillments match any of
          the

          fulfillment states listed in this field.

          See [FulfillmentState](#type-fulfillmentstate) for possible values
    source:
      openapi: openapi/openapi.json
  SearchOrdersQuery:
    docs: Contains query criteria for the search.
    properties:
      filter:
        type: optional<SearchOrdersFilter>
        docs: Criteria to filter results by.
      sort:
        type: optional<SearchOrdersSort>
        docs: Criteria to sort results by.
    source:
      openapi: openapi/openapi.json
  SearchOrdersResponse:
    docs: >-
      Either the `order_entries` or `orders` field is set, depending on whether

      `return_entries` is set on the
      [SearchOrdersRequest](api-endpoint:Orders-SearchOrders).
    properties:
      order_entries:
        type: optional<list<OrderEntry>>
        docs: >-
          A list of [OrderEntries](entity:OrderEntry) that fit the query

          conditions. The list is populated only if `return_entries` is set to
          `true` in the request.
      orders:
        type: optional<list<Order>>
        docs: >-
          A list of

          [Order](entity:Order) objects that match the query conditions. The
          list is populated only if

          `return_entries` is set to `false` in the request.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If unset,

          this is the final response.

          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
      errors:
        type: optional<list<Error>>
        docs: '[Errors](entity:Error) encountered during the search.'
    source:
      openapi: openapi/openapi.json
  SearchOrdersSort:
    docs: |-
      Sorting criteria for a `SearchOrders` request. Results can only be sorted
      by a timestamp field.
    properties:
      sort_field:
        type: SearchOrdersSortField
        docs: >-
          The field to sort by.


          __Important:__ When using a
          [DateTimeFilter](entity:SearchOrdersFilter),

          `sort_field` must match the timestamp field that the `DateTimeFilter`
          uses to

          filter. For example, if you set your `sort_field` to `CLOSED_AT` and
          you use a

          `DateTimeFilter`, your `DateTimeFilter` must filter for orders by
          their `CLOSED_AT` date.

          If this field does not match the timestamp field in `DateTimeFilter`,

          `SearchOrders` returns an error.


          Default: `CREATED_AT`.

          See [SearchOrdersSortField](#type-searchorderssortfield) for possible
          values
      sort_order:
        type: optional<SortOrder>
        docs: >-
          The chronological order in which results are returned. Defaults to
          `DESC`.

          See [SortOrder](#type-sortorder) for possible values
    source:
      openapi: openapi/openapi.json
  SearchOrdersSortField:
    enum:
      - CREATED_AT
      - UPDATED_AT
      - CLOSED_AT
    docs: Specifies which timestamp to use to sort `SearchOrder` results.
    source:
      openapi: openapi/openapi.json
  SearchOrdersSourceFilter:
    docs: A filter based on order `source` information.
    properties:
      source_names:
        type: optional<nullable<list<string>>>
        docs: >-
          Filters by the [Source](entity:OrderSource) `name`. The filter returns
          any orders

          with a `source.name` that matches any of the listed source names.


          Max: 10 source names.
    source:
      openapi: openapi/openapi.json
  SearchOrdersStateFilter:
    docs: Filter by the current order `state`.
    properties:
      states:
        docs: |-
          States to filter for.
          See [OrderState](#type-orderstate) for possible values
        type: list<OrderState>
    source:
      openapi: openapi/openapi.json
  SearchScheduledShiftsResponse:
    docs: >-
      Represents a
      [SearchScheduledShifts](api-endpoint:Labor-SearchScheduledShifts)
      response.

      Either `scheduled_shifts` or `errors` is present in the response.
    properties:
      scheduled_shifts:
        type: optional<list<ScheduledShift>>
        docs: A paginated list of scheduled shifts that match the query conditions.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor used to retrieve the next page of results. This
          field is present

          only if additional results are available.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  SearchShiftsResponse:
    docs: >-
      The response to a request for `Shift` objects. The response contains

      the requested `Shift` objects and might contain a set of `Error` objects
      if

      the request resulted in errors.
    properties:
      shifts:
        type: optional<list<Shift>>
        docs: Shifts.
      cursor:
        type: optional<string>
        docs: An opaque cursor for fetching the next page.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  SearchSubscriptionsFilter:
    docs: >-
      Represents a set of query expressions (filters) to narrow the scope of
      targeted subscriptions returned by 

      the [SearchSubscriptions](api-endpoint:Subscriptions-SearchSubscriptions)
      endpoint.
    properties:
      customer_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          A filter to select subscriptions based on the subscribing customer
          IDs.
      location_ids:
        type: optional<nullable<list<string>>>
        docs: A filter to select subscriptions based on the location.
      source_names:
        type: optional<nullable<list<string>>>
        docs: A filter to select subscriptions based on the source application.
    source:
      openapi: openapi/openapi.json
  SearchSubscriptionsQuery:
    docs: >-
      Represents a query, consisting of specified query expressions, used to
      search for subscriptions.
    properties:
      filter:
        type: optional<SearchSubscriptionsFilter>
        docs: A list of query expressions.
    source:
      openapi: openapi/openapi.json
  SearchSubscriptionsResponse:
    docs: >-
      Defines output parameters in a response from the

      [SearchSubscriptions](api-endpoint:Subscriptions-SearchSubscriptions)
      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered during the request.
      subscriptions:
        type: optional<list<Subscription>>
        docs: The subscriptions matching the specified query expressions.
      cursor:
        type: optional<string>
        docs: >-
          When the total number of resulting subscription exceeds the limit of a
          paged response, 

          the response includes a cursor for you to use in a subsequent request
          to fetch the next set of results.

          If the cursor is unset, the response contains the last page of the
          results.


          For more information, see
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
    source:
      openapi: openapi/openapi.json
  SearchTeamMembersFilter:
    docs: >-
      Represents a filter used in a search for `TeamMember` objects. `AND` logic
      is applied

      between the individual fields, and `OR` logic is applied within list-based
      fields.

      For example, setting this filter value:

      ```

      filter = (locations_ids = ["A", "B"], status = ACTIVE)

      ```

      returns only active team members assigned to either location "A" or "B".
    properties:
      location_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          When present, filters by team members assigned to the specified
          locations.

          When empty, includes team members assigned to any location.
      status:
        type: optional<TeamMemberStatus>
        docs: |-
          When present, filters by team members who match the given status.
          When empty, includes team members of all statuses.
          See [TeamMemberStatus](#type-teammemberstatus) for possible values
      is_owner:
        type: optional<nullable<boolean>>
        docs: >-
          When present and set to true, returns the team member who is the owner
          of the Square account.
    source:
      openapi: openapi/openapi.json
  SearchTeamMembersQuery:
    docs: Represents the parameters in a search for `TeamMember` objects.
    properties:
      filter:
        type: optional<SearchTeamMembersFilter>
        docs: The options to filter by.
    source:
      openapi: openapi/openapi.json
  SearchTeamMembersResponse:
    docs: >-
      Represents a response from a search request containing a filtered list of
      `TeamMember` objects.
    properties:
      team_members:
        type: optional<list<TeamMember>>
        docs: The filtered list of `TeamMember` objects.
      cursor:
        type: optional<string>
        docs: >-
          The opaque cursor for fetching the next page. For more information,
          see

          [pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
      errors:
        type: optional<list<Error>>
        docs: The errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  SearchTerminalActionsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      action:
        type: optional<list<TerminalAction>>
        docs: The requested search result of `TerminalAction`s.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If empty,

          this is the final response.


          See
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination)
          for more

          information.
    source:
      openapi: openapi/openapi.json
  SearchTerminalCheckoutsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      checkouts:
        type: optional<list<TerminalCheckout>>
        docs: The requested search result of `TerminalCheckout` objects.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If empty,

          this is the final response.


          See
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination)
          for more information.
    source:
      openapi: openapi/openapi.json
  SearchTerminalRefundsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      refunds:
        type: optional<list<TerminalRefund>>
        docs: The requested search result of `TerminalRefund` objects.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If empty,

          this is the final response.


          See
          [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination)
          for more information.
    source:
      openapi: openapi/openapi.json
  SearchTimecardsResponse:
    docs: >-
      The response to a request for `Timecard` objects. The response contains

      the requested `Timecard` objects and might contain a set of `Error`
      objects if

      the request resulted in errors.
    properties:
      timecards:
        type: optional<list<Timecard>>
        docs: Timecards.
      cursor:
        type: optional<string>
        docs: An opaque cursor for fetching the next page.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  SearchVendorsRequestFilter:
    docs: Defines supported query expressions to search for vendors by.
    properties:
      name:
        type: optional<nullable<list<string>>>
        docs: The names of the [Vendor](entity:Vendor) objects to retrieve.
      status:
        type: optional<nullable<list<VendorStatus>>>
        docs: |-
          The statuses of the [Vendor](entity:Vendor) objects to retrieve.
          See [VendorStatus](#type-vendorstatus) for possible values
    source:
      openapi: openapi/openapi.json
  SearchVendorsRequestSort:
    docs: >-
      Defines a sorter used to sort results from
      [SearchVendors](api-endpoint:Vendors-SearchVendors).
    properties:
      field:
        type: optional<SearchVendorsRequestSortField>
        docs: |-
          Specifies the sort key to sort the returned vendors.
          See [Field](#type-field) for possible values
      order:
        type: optional<SortOrder>
        docs: |-
          Specifies the sort order for the returned vendors.
          See [SortOrder](#type-sortorder) for possible values
    source:
      openapi: openapi/openapi.json
  SearchVendorsRequestSortField:
    enum:
      - NAME
      - CREATED_AT
    docs: The field to sort the returned [Vendor](entity:Vendor) objects by.
    source:
      openapi: openapi/openapi.json
  SearchVendorsResponse:
    docs: >-
      Represents an output from a call to
      [SearchVendors](api-endpoint:Vendors-SearchVendors).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered when the request fails.
      vendors:
        type: optional<list<Vendor>>
        docs: >-
          The [Vendor](entity:Vendor) objects matching the specified search
          filter.
      cursor:
        type: optional<string>
        docs: >-
          The pagination cursor to be used in a subsequent request. If unset,

          this is the final response.


          See the
          [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination)
          guide for more information.
    source:
      openapi: openapi/openapi.json
  SegmentFilter:
    docs: A query filter to search for buyer-accessible appointment segments by.
    properties:
      service_variation_id:
        type: string
        docs: >-
          The ID of the [CatalogItemVariation](entity:CatalogItemVariation)
          object representing the service booked in this segment.
        validation:
          minLength: 1
          maxLength: 36
      team_member_id_filter:
        type: optional<FilterValue>
        docs: >-
          A query filter to search for buyer-accessible appointment segments
          with service-providing team members matching the specified list of
          team member IDs.  Supported query expressions are

          - `ANY`: return the appointment segments with team members whose IDs
          match any member in this list.

          - `NONE`: return the appointment segments with team members whose IDs
          are not in this list.

          - `ALL`: not supported.


          When no expression is specified, any service-providing team member is
          eligible to fulfill the Booking.
    source:
      openapi: openapi/openapi.json
  SelectOption:
    properties:
      reference_id:
        type: string
        docs: The reference id for the option.
        validation:
          minLength: 1
          maxLength: 40
      title:
        type: string
        docs: The title text that displays in the select option button.
        validation:
          minLength: 1
          maxLength: 250
    source:
      openapi: openapi/openapi.json
  SelectOptions:
    properties:
      title:
        type: string
        docs: The title text to display in the select flow on the Terminal.
        validation:
          minLength: 1
          maxLength: 250
      body:
        type: string
        docs: The body text to display in the select flow on the Terminal.
        validation:
          minLength: 1
          maxLength: 10000
      options:
        docs: >-
          Represents the buttons/options that should be displayed in the select
          flow on the Terminal.
        type: list<SelectOption>
      selected_option:
        type: optional<SelectOption>
        docs: The buyer’s selected option.
    source:
      openapi: openapi/openapi.json
  Shift:
    docs: >-
      A record of the hourly rate, start, and end times for a single work shift

      for an employee. This might include a record of the start and end times
      for breaks

      taken during the shift.


      Deprecated at Square API version 2025-05-21. Replaced by
      [Timecard](entity:Timecard).

      See the [migration
      notes](https://developer.squareup.com/docs/labor-api/what-it-does#migration-notes).
    properties:
      id:
        type: optional<string>
        docs: The UUID for this object.
        validation:
          maxLength: 255
      employee_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the employee this shift belongs to. DEPRECATED at version
          2020-08-26. Use `team_member_id` instead.
      location_id:
        type: string
        docs: >-
          The ID of the location this shift occurred at. The location should be
          based on

          where the employee clocked in.
        validation:
          minLength: 1
      timezone:
        type: optional<nullable<string>>
        docs: >-
          The read-only convenience value that is calculated from the location
          based

          on the `location_id`. Format: the IANA timezone database identifier
          for the

          location timezone.
      start_at:
        type: string
        docs: >-
          RFC 3339; shifted to the location timezone + offset. Precision up to
          the

          minute is respected; seconds are truncated.
        validation:
          minLength: 1
      end_at:
        type: optional<nullable<string>>
        docs: >-
          RFC 3339; shifted to the timezone + offset. Precision up to the minute
          is

          respected; seconds are truncated.
      wage:
        type: optional<ShiftWage>
        docs: >-
          Job and pay related information. If the wage is not set on create, it
          defaults to a wage

          of zero. If the title is not set on create, it defaults to the name of
          the role the employee

          is assigned to, if any.
      breaks:
        type: optional<nullable<list<Break>>>
        docs: >-
          A list of all the paid or unpaid breaks that were taken during this
          shift.
      status:
        type: optional<ShiftStatus>
        docs: |-
          Describes the working state of the current `Shift`.
          See [ShiftStatus](#type-shiftstatus) for possible values
      version:
        type: optional<integer>
        docs: >-
          Used for resolving concurrency issues. The request fails if the
          version

          provided does not match the server version at the time of the request.
          If not provided,

          Square executes a blind write; potentially overwriting data from
          another

          write.
      created_at:
        type: optional<string>
        docs: A read-only timestamp in RFC 3339 format; presented in UTC.
        access: read-only
      updated_at:
        type: optional<string>
        docs: A read-only timestamp in RFC 3339 format; presented in UTC.
        access: read-only
      team_member_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the team member this shift belongs to. Replaced
          `employee_id` at version "2020-08-26".
      declared_cash_tip_money:
        type: optional<Money>
        docs: The tips declared by the team member for the shift.
    source:
      openapi: openapi/openapi.json
  ShiftFilter:
    docs: >-
      Defines a filter used in a search for `Shift` records. `AND` logic is

      used by Square's servers to apply each filter property specified.


      Deprecated at Square API version 2025-05-21. See the [migration
      notes](https://developer.squareup.com/docs/labor-api/what-it-does#migration-notes).
    properties:
      location_ids:
        type: optional<nullable<list<string>>>
        docs: Fetch shifts for the specified location.
      employee_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          Fetch shifts for the specified employees. DEPRECATED at version
          2020-08-26. Use `team_member_ids` instead.
      status:
        type: optional<ShiftFilterStatus>
        docs: |-
          Fetch a `Shift` instance by `Shift.status`.
          See [ShiftFilterStatus](#type-shiftfilterstatus) for possible values
      start:
        type: optional<TimeRange>
        docs: Fetch `Shift` instances that start in the time range - Inclusive.
      end:
        type: optional<TimeRange>
        docs: Fetch the `Shift` instances that end in the time range - Inclusive.
      workday:
        type: optional<ShiftWorkday>
        docs: Fetch the `Shift` instances based on the workday date range.
      team_member_ids:
        type: optional<nullable<list<string>>>
        docs: >-
          Fetch shifts for the specified team members. Replaced `employee_ids`
          at version "2020-08-26".
    source:
      openapi: openapi/openapi.json
  ShiftFilterStatus:
    enum:
      - OPEN
      - CLOSED
    docs: >-
      Specifies the `status` of `Shift` records to be returned.


      Deprecated at Square API version 2025-05-21. See the [migration
      notes](https://developer.squareup.com/docs/labor-api/what-it-does#migration-notes).
    source:
      openapi: openapi/openapi.json
  ShiftQuery:
    docs: >-
      The parameters of a `Shift` search query, which includes filter and sort
      options.


      Deprecated at Square API version 2025-05-21. See the [migration
      notes](https://developer.squareup.com/docs/labor-api/what-it-does#migration-notes).
    properties:
      filter:
        type: optional<ShiftFilter>
        docs: Query filter options.
      sort:
        type: optional<ShiftSort>
        docs: Sort order details.
    source:
      openapi: openapi/openapi.json
  ShiftSort:
    docs: >-
      Sets the sort order of search results.


      Deprecated at Square API version 2025-05-21. See the [migration
      notes](https://developer.squareup.com/docs/labor-api/what-it-does#migration-notes).
    properties:
      field:
        type: optional<ShiftSortField>
        docs: |-
          The field to sort on.
          See [ShiftSortField](#type-shiftsortfield) for possible values
      order:
        type: optional<SortOrder>
        docs: |-
          The order in which results are returned. Defaults to DESC.
          See [SortOrder](#type-sortorder) for possible values
    source:
      openapi: openapi/openapi.json
  ShiftSortField:
    enum:
      - START_AT
      - END_AT
      - CREATED_AT
      - UPDATED_AT
    docs: >-
      Enumerates the `Shift` fields to sort on.


      Deprecated at Square API version 2025-05-21. See the [migration
      notes](https://developer.squareup.com/docs/labor-api/what-it-does#migration-notes).
    source:
      openapi: openapi/openapi.json
  ShiftStatus:
    enum:
      - OPEN
      - CLOSED
    docs: >-
      Enumerates the possible status of a `Shift`.


      Deprecated at Square API version 2025-05-21. See the [migration
      notes](https://developer.squareup.com/docs/labor-api/what-it-does#migration-notes).
    source:
      openapi: openapi/openapi.json
  ShiftWage:
    docs: >-
      The hourly wage rate used to compensate an employee for this shift.


      Deprecated at Square API version 2025-05-21. See the [migration
      notes](https://developer.squareup.com/docs/labor-api/what-it-does#migration-notes).
    properties:
      title:
        type: optional<nullable<string>>
        docs: The name of the job performed during this shift.
      hourly_rate:
        type: optional<Money>
        docs: |-
          Can be a custom-set hourly wage or the calculated effective hourly
          wage based on the annual wage and hours worked per week.
      job_id:
        type: optional<string>
        docs: |-
          The id of the job performed during this shift. Square
          labor-reporting UIs might group shifts together by id.
        access: read-only
      tip_eligible:
        type: optional<nullable<boolean>>
        docs: Whether team members are eligible for tips when working this job.
    source:
      openapi: openapi/openapi.json
  ShiftWorkday:
    docs: >-
      A `Shift` search query filter parameter that sets a range of days that

      a `Shift` must start or end in before passing the filter condition.


      Deprecated at Square API version 2025-05-21. See the [migration
      notes](https://developer.squareup.com/docs/labor-api/what-it-does#migration-notes).
    properties:
      date_range:
        type: optional<DateRange>
        docs: Dates for fetching the shifts.
      match_shifts_by:
        type: optional<ShiftWorkdayMatcher>
        docs: >-
          The strategy on which the dates are applied.

          See [ShiftWorkdayMatcher](#type-shiftworkdaymatcher) for possible
          values
      default_timezone:
        type: optional<nullable<string>>
        docs: >-
          Location-specific timezones convert workdays to datetime filters.

          Every location included in the query must have a timezone or this
          field

          must be provided as a fallback. Format: the IANA timezone database

          identifier for the relevant timezone.
    source:
      openapi: openapi/openapi.json
  ShiftWorkdayMatcher:
    enum:
      - START_AT
      - END_AT
      - INTERSECTION
    docs: Defines the logic used to apply a workday filter.
    source:
      openapi: openapi/openapi.json
  ShippingFee:
    properties:
      name:
        type: optional<nullable<string>>
        docs: The name for the shipping fee.
      charge:
        type: Money
        docs: The amount and currency for the shipping fee.
    source:
      openapi: openapi/openapi.json
  SignatureImage:
    properties:
      image_type:
        type: optional<string>
        docs: |-
          The mime/type of the image data.
          Use `image/png;base64` for png.
        access: read-only
      data:
        type: optional<string>
        docs: The base64 representation of the image.
        access: read-only
    source:
      openapi: openapi/openapi.json
  SignatureOptions:
    properties:
      title:
        type: string
        docs: >-
          The title text to display in the signature capture flow on the
          Terminal.
        validation:
          minLength: 1
          maxLength: 250
      body:
        type: string
        docs: >-
          The body text to display in the signature capture flow on the
          Terminal.
        validation:
          minLength: 1
          maxLength: 10000
      signature:
        type: optional<list<SignatureImage>>
        docs: An image representation of the collected signature.
        access: read-only
    source:
      openapi: openapi/openapi.json
  Site:
    docs: >-
      Represents a Square Online site, which is an online store for a Square
      seller.
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the site.
        validation:
          maxLength: 32
        access: read-only
      site_title:
        type: optional<nullable<string>>
        docs: The title of the site.
      domain:
        type: optional<nullable<string>>
        docs: >-
          The domain of the site (without the protocol). For example,
          `mysite1.square.site`.
      is_published:
        type: optional<nullable<boolean>>
        docs: Indicates whether the site is published.
      created_at:
        type: optional<string>
        docs: The timestamp of when the site was created, in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: The timestamp of when the site was last updated, in RFC 3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  Snippet:
    docs: >-
      Represents the snippet that is added to a Square Online site. The snippet
      code is injected into the `head` element of all pages on the site, except
      for checkout pages.
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID for the snippet.
        validation:
          maxLength: 48
        access: read-only
      site_id:
        type: optional<string>
        docs: The ID of the site that contains the snippet.
        access: read-only
      content:
        type: string
        docs: The snippet code, which can contain valid HTML, JavaScript, or both.
        validation:
          minLength: 1
          maxLength: 65535
      created_at:
        type: optional<string>
        docs: >-
          The timestamp of when the snippet was initially added to the site, in
          RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp of when the snippet was last updated on the site, in RFC
          3339 format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  SortOrder:
    enum:
      - DESC
      - ASC
    docs: >-
      The order (e.g., chronological or alphabetical) in which results from a
      request are returned.
    source:
      openapi: openapi/openapi.json
  SourceApplication:
    docs: Represents information about the application used to generate a change.
    properties:
      product:
        type: optional<Product>
        docs: |-
          __Read only__ The [product](entity:Product) type of the application.
          See [Product](#type-product) for possible values
      application_id:
        type: optional<nullable<string>>
        docs: >-
          __Read only__ The Square-assigned ID of the application. This field is
          used only if the

          [product](entity:Product) type is `EXTERNAL_API`.
      name:
        type: optional<nullable<string>>
        docs: >-
          __Read only__ The display name of the application

          (for example, `"Custom Application"` or `"Square POS 4.74 for
          Android"`).
    source:
      openapi: openapi/openapi.json
  SquareAccountDetails:
    docs: Additional details about Square Account payments.
    properties:
      payment_source_token:
        type: optional<nullable<string>>
        docs: Unique identifier for the payment source used for this payment.
        validation:
          maxLength: 255
      errors:
        type: optional<nullable<list<Error>>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  StandardUnitDescription:
    docs: Contains the name and abbreviation for standard measurement unit.
    properties:
      unit:
        type: optional<MeasurementUnit>
        docs: Identifies the measurement unit being described.
      name:
        type: optional<nullable<string>>
        docs: UI display name of the measurement unit. For example, 'Pound'.
      abbreviation:
        type: optional<nullable<string>>
        docs: UI display abbreviation for the measurement unit. For example, 'lb'.
    source:
      openapi: openapi/openapi.json
  StandardUnitDescriptionGroup:
    docs: Group of standard measurement units.
    properties:
      standard_unit_descriptions:
        type: optional<nullable<list<StandardUnitDescription>>>
        docs: >-
          List of standard (non-custom) measurement units in this description
          group.
      language_code:
        type: optional<nullable<string>>
        docs: IETF language tag.
    source:
      openapi: openapi/openapi.json
  SubmitEvidenceResponse:
    docs: Defines the fields in a `SubmitEvidence` response.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      dispute:
        type: optional<Dispute>
        docs: The `Dispute` for which evidence was submitted.
    source:
      openapi: openapi/openapi.json
  Subscription:
    docs: >-
      Represents a subscription purchased by a customer.


      For more information, see

      [Manage
      Subscriptions](https://developer.squareup.com/docs/subscriptions-api/manage-subscriptions).
    properties:
      id:
        type: optional<string>
        docs: The Square-assigned ID of the subscription.
        validation:
          maxLength: 255
        access: read-only
      location_id:
        type: optional<string>
        docs: The ID of the location associated with the subscription.
        access: read-only
      plan_variation_id:
        type: optional<string>
        docs: >-
          The ID of the subscribed-to [subscription plan
          variation](entity:CatalogSubscriptionPlanVariation).
        access: read-only
      customer_id:
        type: optional<string>
        docs: The ID of the subscribing [customer](entity:Customer) profile.
        access: read-only
      start_date:
        type: optional<string>
        docs: >-
          The `YYYY-MM-DD`-formatted date (for example, 2013-01-15) to start the
          subscription.
        access: read-only
      canceled_date:
        type: optional<nullable<string>>
        docs: >-
          The `YYYY-MM-DD`-formatted date (for example, 2013-01-15) to cancel
          the subscription, 

          when the subscription status changes to `CANCELED` and the
          subscription billing stops.


          If this field is not set, the subscription ends according its
          subscription plan.


          This field cannot be updated, other than being cleared.
      charged_through_date:
        type: optional<string>
        docs: >-
          The `YYYY-MM-DD`-formatted date up to when the subscriber is invoiced
          for the

          subscription.


          After the invoice is sent for a given billing period,

          this date will be the last day of the billing period.

          For example,

          suppose for the month of May a subscriber gets an invoice

          (or charged the card) on May 1. For the monthly billing scenario,

          this date is then set to May 31.
        access: read-only
      status:
        type: optional<SubscriptionStatus>
        docs: |-
          The current status of the subscription.
          See [SubscriptionStatus](#type-subscriptionstatus) for possible values
      tax_percentage:
        type: optional<nullable<string>>
        docs: |-
          The tax amount applied when billing the subscription. The
          percentage is expressed in decimal form, using a `'.'` as the decimal
          separator and without a `'%'` sign. For example, a value of `7.5`
          corresponds to 7.5%.
      invoice_ids:
        type: optional<list<string>>
        docs: |-
          The IDs of the [invoices](entity:Invoice) created for the
          subscription, listed in order when the invoices were created
          (newest invoices appear first).
        access: read-only
      price_override_money:
        type: optional<Money>
        docs: >-
          A custom price which overrides the cost of a subscription plan
          variation with `STATIC` pricing.

          This field does not affect itemized subscriptions with `RELATIVE`
          pricing. Instead, 

          you should edit the Subscription's [order
          template](https://developer.squareup.com/docs/subscriptions-api/manage-subscriptions#phases-and-order-templates).
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version

          supplied must match the version in the database, otherwise the write
          will

          be rejected as conflicting.
      created_at:
        type: optional<string>
        docs: The timestamp when the subscription was created, in RFC 3339 format.
        access: read-only
      card_id:
        type: optional<nullable<string>>
        docs: |-
          The ID of the [subscriber's](entity:Customer) [card](entity:Card)
          used to charge for the subscription.
      timezone:
        type: optional<string>
        docs: >-
          Timezone that will be used in date calculations for the subscription.

          Defaults to the timezone of the location based on `location_id`.

          Format: the IANA Timezone Database identifier for the location
          timezone (for example, `America/Los_Angeles`).
        access: read-only
      source:
        type: optional<SubscriptionSource>
        docs: The origination details of the subscription.
      actions:
        type: optional<nullable<list<SubscriptionAction>>>
        docs: >-
          The list of scheduled actions on this subscription. It is set only in
          the response from  

          [RetrieveSubscription](api-endpoint:Subscriptions-RetrieveSubscription)
          with the query parameter

          of `include=actions` or from 

          [SearchSubscriptions](api-endpoint:Subscriptions-SearchSubscriptions)
          with the input parameter 

          of `include:["actions"]`.
      monthly_billing_anchor_date:
        type: optional<integer>
        docs: >-
          The day of the month on which the subscription will issue invoices and
          publish orders.
        access: read-only
      phases:
        type: optional<list<Phase>>
        docs: array of phases for this subscription
        access: read-only
    source:
      openapi: openapi/openapi.json
  SubscriptionAction:
    docs: Represents an action as a pending change to a subscription.
    properties:
      id:
        type: optional<string>
        docs: The ID of an action scoped to a subscription.
      type:
        type: optional<SubscriptionActionType>
        docs: >-
          The type of the action.

          See [SubscriptionActionType](#type-subscriptionactiontype) for
          possible values
      effective_date:
        type: optional<nullable<string>>
        docs: >-
          The `YYYY-MM-DD`-formatted date when the action occurs on the
          subscription.
      monthly_billing_anchor_date:
        type: optional<nullable<integer>>
        docs: >-
          The new billing anchor day value, for a `CHANGE_BILLING_ANCHOR_DATE`
          action.
      phases:
        type: optional<nullable<list<Phase>>>
        docs: A list of Phases, to pass phase-specific information used in the swap.
      new_plan_variation_id:
        type: optional<nullable<string>>
        docs: >-
          The target subscription plan variation that a subscription switches
          to, for a `SWAP_PLAN` action.
    source:
      openapi: openapi/openapi.json
  SubscriptionActionType:
    enum:
      - CANCEL
      - PAUSE
      - RESUME
      - SWAP_PLAN
      - CHANGE_BILLING_ANCHOR_DATE
    docs: Supported types of an action as a pending change to a subscription.
    source:
      openapi: openapi/openapi.json
  SubscriptionCadence:
    enum:
      - DAILY
      - WEEKLY
      - EVERY_TWO_WEEKS
      - THIRTY_DAYS
      - SIXTY_DAYS
      - NINETY_DAYS
      - MONTHLY
      - EVERY_TWO_MONTHS
      - QUARTERLY
      - EVERY_FOUR_MONTHS
      - EVERY_SIX_MONTHS
      - ANNUAL
      - EVERY_TWO_YEARS
    docs: Determines the billing cadence of a [Subscription](entity:Subscription)
    source:
      openapi: openapi/openapi.json
  SubscriptionCreatedEvent:
    docs: Published when a [Subscription](entity:Subscription) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"subscription.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<SubscriptionCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  SubscriptionCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"subscription"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: ID of the affected subscription.
        validation:
          maxLength: 255
      object:
        type: optional<SubscriptionCreatedEventObject>
        docs: An object containing the created subscription.
    source:
      openapi: openapi/openapi.json
  SubscriptionCreatedEventObject:
    properties:
      subscription:
        type: optional<Subscription>
        docs: The created subscription.
    source:
      openapi: openapi/openapi.json
  SubscriptionEvent:
    docs: Describes changes to a subscription and the subscription status.
    properties:
      id:
        type: string
        docs: The ID of the subscription event.
      subscription_event_type:
        type: SubscriptionEventSubscriptionEventType
        docs: >-
          Type of the subscription event.

          See
          [SubscriptionEventSubscriptionEventType](#type-subscriptioneventsubscriptioneventtype)
          for possible values
      effective_date:
        type: string
        docs: >-
          The `YYYY-MM-DD`-formatted date (for example, 2013-01-15) when the
          subscription event occurred.
      monthly_billing_anchor_date:
        type: optional<integer>
        docs: >-
          The day-of-the-month the billing anchor date was changed to, if
          applicable.
        access: read-only
      info:
        type: optional<SubscriptionEventInfo>
        docs: Additional information about the subscription event.
      phases:
        type: optional<nullable<list<Phase>>>
        docs: A list of Phases, to pass phase-specific information used in the swap.
      plan_variation_id:
        type: string
        docs: >-
          The ID of the subscription plan variation associated with the
          subscription.
    source:
      openapi: openapi/openapi.json
  SubscriptionEventInfo:
    docs: Provides information about the subscription event.
    properties:
      detail:
        type: optional<nullable<string>>
        docs: A human-readable explanation for the event.
      code:
        type: optional<SubscriptionEventInfoCode>
        docs: |-
          An info code indicating the subscription event that occurred.
          See [InfoCode](#type-infocode) for possible values
    source:
      openapi: openapi/openapi.json
  SubscriptionEventInfoCode:
    enum:
      - LOCATION_NOT_ACTIVE
      - LOCATION_CANNOT_ACCEPT_PAYMENT
      - CUSTOMER_DELETED
      - CUSTOMER_NO_EMAIL
      - CUSTOMER_NO_NAME
      - USER_PROVIDED
    docs: Supported info codes of a subscription event.
    source:
      openapi: openapi/openapi.json
  SubscriptionEventSubscriptionEventType:
    enum:
      - START_SUBSCRIPTION
      - PLAN_CHANGE
      - STOP_SUBSCRIPTION
      - DEACTIVATE_SUBSCRIPTION
      - RESUME_SUBSCRIPTION
      - PAUSE_SUBSCRIPTION
      - BILLING_ANCHOR_DATE_CHANGED
    docs: Supported types of an event occurred to a subscription.
    source:
      openapi: openapi/openapi.json
  SubscriptionPhase:
    docs: >-
      Describes a phase in a subscription plan variation. For more information,
      see [Subscription Plans and
      Variations](https://developer.squareup.com/docs/subscriptions-api/plans-and-variations).
    properties:
      uid:
        type: optional<nullable<string>>
        docs: >-
          The Square-assigned ID of the subscription phase. This field cannot be
          changed after a `SubscriptionPhase` is created.
      cadence:
        type: SubscriptionCadence
        docs: >-
          The billing cadence of the phase. For example, weekly or monthly. This
          field cannot be changed after a `SubscriptionPhase` is created.

          See [SubscriptionCadence](#type-subscriptioncadence) for possible
          values
      periods:
        type: optional<nullable<integer>>
        docs: >-
          The number of `cadence`s the phase lasts. If not set, the phase never
          ends. Only the last phase can be indefinite. This field cannot be
          changed after a `SubscriptionPhase` is created.
      recurring_price_money:
        type: optional<Money>
        docs: >-
          The amount to bill for each `cadence`. Failure to specify this field
          results in a `MISSING_REQUIRED_PARAMETER` error at runtime.
      ordinal:
        type: optional<nullable<long>>
        docs: >-
          The position this phase appears in the sequence of phases defined for
          the plan, indexed from 0. This field cannot be changed after a
          `SubscriptionPhase` is created.
      pricing:
        type: optional<SubscriptionPricing>
        docs: The subscription pricing.
    source:
      openapi: openapi/openapi.json
  SubscriptionPricing:
    docs: Describes the pricing for the subscription.
    properties:
      type:
        type: optional<SubscriptionPricingType>
        docs: >-
          RELATIVE or STATIC

          See [SubscriptionPricingType](#type-subscriptionpricingtype) for
          possible values
      discount_ids:
        type: optional<nullable<list<string>>>
        docs: The ids of the discount catalog objects
      price_money:
        type: optional<Money>
        docs: The price of the subscription, if STATIC
    source:
      openapi: openapi/openapi.json
  SubscriptionPricingType:
    enum:
      - STATIC
      - RELATIVE
    docs: Determines the pricing of a [Subscription](entity:Subscription)
    source:
      openapi: openapi/openapi.json
  SubscriptionSource:
    docs: The origination details of the subscription.
    properties:
      name:
        type: optional<nullable<string>>
        docs: |-
          The name used to identify the place (physical or digital) that
          a subscription originates. If unset, the name defaults to the name
          of the application that created the subscription.
        validation:
          maxLength: 255
    source:
      openapi: openapi/openapi.json
  SubscriptionStatus:
    enum:
      - PENDING
      - ACTIVE
      - CANCELED
      - DEACTIVATED
      - PAUSED
    docs: Supported subscription statuses.
    source:
      openapi: openapi/openapi.json
  SubscriptionTestResult:
    docs: >-
      Represents the details of a webhook subscription, including notification
      URL,

      event types, and signature key.
    properties:
      id:
        type: optional<string>
        docs: A Square-generated unique ID for the subscription test result.
        validation:
          maxLength: 64
        access: read-only
      status_code:
        type: optional<nullable<integer>>
        docs: The status code returned by the subscription notification URL.
      payload:
        type: optional<nullable<string>>
        docs: >-
          An object containing the payload of the test event. For example, a
          `payment.created` event.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp of when the subscription was created, in RFC 3339
          format. 

          For example, "2016-09-04T23:59:33.123Z".
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp of when the subscription was updated, in RFC 3339
          format. For example, "2016-09-04T23:59:33.123Z".

          Because a subscription test result is unique, this field is the same
          as the `created_at` field.
        access: read-only
    source:
      openapi: openapi/openapi.json
  SubscriptionUpdatedEvent:
    docs: >-
      Published when a [Subscription](entity:Subscription) is updated.

      Typically the `subscription.status` is updated as subscriptions become
      active

      or cancelled.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"subscription.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<SubscriptionUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  SubscriptionUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"subscription"`.
        validation:
          maxLength: 50
      id:
        type: optional<string>
        docs: ID of the affected subscription.
        validation:
          maxLength: 255
      object:
        type: optional<SubscriptionUpdatedEventObject>
        docs: An object containing the updated subscription.
    source:
      openapi: openapi/openapi.json
  SubscriptionUpdatedEventObject:
    properties:
      subscription:
        type: optional<Subscription>
        docs: The updated subscription.
    source:
      openapi: openapi/openapi.json
  SwapPlanResponse:
    docs: |-
      Defines output parameters in a response of the 
      [SwapPlan](api-endpoint:Subscriptions-SwapPlan) endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered during the request.
      subscription:
        type: optional<Subscription>
        docs: The subscription with the updated subscription plan.
      actions:
        type: optional<list<SubscriptionAction>>
        docs: A list of a `SWAP_PLAN` action created by the request.
    source:
      openapi: openapi/openapi.json
  TaxCalculationPhase:
    enum:
      - TAX_SUBTOTAL_PHASE
      - TAX_TOTAL_PHASE
    docs: When to calculate the taxes due on a cart.
    source:
      openapi: openapi/openapi.json
  TaxIds:
    docs: Identifiers for the location used by various governments for tax purposes.
    properties:
      eu_vat:
        type: optional<string>
        docs: |-
          The EU VAT number for this location. For example, `IE3426675K`.
          If the EU VAT number is present, it is well-formed and has been
          validated with VIES, the VAT Information Exchange System.
        access: read-only
      fr_siret:
        type: optional<string>
        docs: >-
          The SIRET (Système d'Identification du Répertoire des Entreprises et
          de leurs Etablissements)

          number is a 14-digit code issued by the French INSEE. For example,
          `39922799000021`.
        access: read-only
      fr_naf:
        type: optional<string>
        docs: >-
          The French government uses the NAF (Nomenclature des Activités
          Françaises) to display and

          track economic statistical data. This is also called the APE (Activite
          Principale de l’Entreprise) code.

          For example, `6910Z`.
        access: read-only
      es_nif:
        type: optional<string>
        docs: >-
          The NIF (Numero de Identificacion Fiscal) number is a nine-character
          tax identifier used in Spain.

          If it is present, it has been validated. For example, `73628495A`.
        access: read-only
      jp_qii:
        type: optional<string>
        docs: >-
          The QII (Qualified Invoice Issuer) number is a 14-character tax
          identifier used in Japan.

          For example, `T1234567890123`.
        access: read-only
    source:
      openapi: openapi/openapi.json
  TaxInclusionType:
    enum:
      - ADDITIVE
      - INCLUSIVE
    docs: >-
      Whether to the tax amount should be additional to or included in the
      CatalogItem price.
    source:
      openapi: openapi/openapi.json
  TeamMember:
    docs: A record representing an individual team member for a business.
    properties:
      id:
        type: optional<string>
        docs: The unique ID for the team member.
        access: read-only
      reference_id:
        type: optional<nullable<string>>
        docs: >-
          A second ID used to associate the team member with an entity in
          another system.
      is_owner:
        type: optional<boolean>
        docs: Whether the team member is the owner of the Square account.
        access: read-only
      status:
        type: optional<TeamMemberStatus>
        docs: |-
          Describes the status of the team member.
          See [TeamMemberStatus](#type-teammemberstatus) for possible values
      given_name:
        type: optional<nullable<string>>
        docs: >-
          The given name (that is, the first name) associated with the team
          member.
      family_name:
        type: optional<nullable<string>>
        docs: >-
          The family name (that is, the last name) associated with the team
          member.
      email_address:
        type: optional<nullable<string>>
        docs: >-
          The email address associated with the team member. After accepting the
          invitation

          from Square, only the team member can change this value.
      phone_number:
        type: optional<nullable<string>>
        docs: |-
          The team member's phone number, in E.164 format. For example:
          +14155552671 - the country code is 1 for US
          +551155256325 - the country code is 55 for BR
      created_at:
        type: optional<string>
        docs: The timestamp when the team member was created, in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp when the team member was last updated, in RFC 3339
          format.
        access: read-only
      assigned_locations:
        type: optional<TeamMemberAssignedLocations>
        docs: Describes the team member's assigned locations.
      wage_setting:
        type: optional<WageSetting>
        docs: >-
          Information about the team member's overtime exemption status, job
          assignments, and compensation.
    source:
      openapi: openapi/openapi.json
  TeamMemberAssignedLocations:
    docs: An object that represents a team member's assignment to locations.
    properties:
      assignment_type:
        type: optional<TeamMemberAssignedLocationsAssignmentType>
        docs: >-
          The current assignment type of the team member.

          See
          [TeamMemberAssignedLocationsAssignmentType](#type-teammemberassignedlocationsassignmenttype)
          for possible values
      location_ids:
        type: optional<nullable<list<string>>>
        docs: The explicit locations that the team member is assigned to.
    source:
      openapi: openapi/openapi.json
  TeamMemberAssignedLocationsAssignmentType:
    enum:
      - ALL_CURRENT_AND_FUTURE_LOCATIONS
      - EXPLICIT_LOCATIONS
    docs: Enumerates the possible assignment types that the team member can have.
    source:
      openapi: openapi/openapi.json
  TeamMemberBookingProfile:
    docs: >-
      The booking profile of a seller's team member, including the team member's
      ID, display name, description and whether the team member can be booked as
      a service provider.
    properties:
      team_member_id:
        type: optional<string>
        docs: >-
          The ID of the [TeamMember](entity:TeamMember) object for the team
          member associated with the booking profile.
        validation:
          maxLength: 32
        access: read-only
      description:
        type: optional<string>
        docs: The description of the team member.
        validation:
          maxLength: 65536
        access: read-only
      display_name:
        type: optional<string>
        docs: The display name of the team member.
        validation:
          maxLength: 512
        access: read-only
      is_bookable:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether the team member can be booked through the Bookings
          API or the seller's online booking channel or site (`true`) or not
          (`false`).
      profile_image_url:
        type: optional<string>
        docs: The URL of the team member's image for the bookings profile.
        validation:
          maxLength: 2048
        access: read-only
    source:
      openapi: openapi/openapi.json
  TeamMemberCreatedEvent:
    docs: Published when a Team Member is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"team_member.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<TeamMemberCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  TeamMemberCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"team_member"`.
      id:
        type: optional<string>
        docs: ID of the created team member.
      object:
        type: optional<TeamMemberCreatedEventObject>
        docs: An object containing the created team member.
    source:
      openapi: openapi/openapi.json
  TeamMemberCreatedEventObject:
    properties:
      team_member:
        type: optional<TeamMember>
        docs: The created team member.
    source:
      openapi: openapi/openapi.json
  TeamMemberInvitationStatus:
    enum:
      - UNINVITED
      - PENDING
      - ACCEPTED
    docs: >-
      Enumerates the possible invitation statuses the team member can have
      within a business.
    source:
      openapi: openapi/openapi.json
  TeamMemberStatus:
    enum:
      - ACTIVE
      - INACTIVE
    docs: >-
      Enumerates the possible statuses the team member can have within a
      business.
    source:
      openapi: openapi/openapi.json
  TeamMemberUpdatedEvent:
    docs: Published when a Team Member is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"team_member.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<TeamMemberUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  TeamMemberUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"team_member"`.
      id:
        type: optional<string>
        docs: ID of the affected team member.
      object:
        type: optional<TeamMemberUpdatedEventObject>
        docs: An object containing the updated team member.
    source:
      openapi: openapi/openapi.json
  TeamMemberUpdatedEventObject:
    properties:
      team_member:
        type: optional<TeamMember>
        docs: The updated team member.
    source:
      openapi: openapi/openapi.json
  TeamMemberWage:
    docs: |-
      Job and wage information for a [team member](entity:TeamMember).
      This convenience object provides details needed to specify the `wage`
      field for a [timecard](entity:Timecard).
    properties:
      id:
        type: optional<string>
        docs: The UUID for this object.
      team_member_id:
        type: optional<nullable<string>>
        docs: The `TeamMember` that this wage is assigned to.
      title:
        type: optional<nullable<string>>
        docs: The job title that this wage relates to.
      hourly_rate:
        type: optional<Money>
        docs: |-
          Can be a custom-set hourly wage or the calculated effective hourly
          wage based on the annual wage and hours worked per week.
      job_id:
        type: optional<nullable<string>>
        docs: An identifier for the [job](entity:Job) that this wage relates to.
      tip_eligible:
        type: optional<nullable<boolean>>
        docs: Whether team members are eligible for tips when working this job.
    source:
      openapi: openapi/openapi.json
  TeamMemberWageSettingUpdatedEvent:
    docs: Published when a Wage Setting is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: >-
          The type of event this represents,
          `"team_member.wage_setting.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: Timestamp of when the event was created, in RFC 3339 format.
        access: read-only
      data:
        type: optional<TeamMemberWageSettingUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  TeamMemberWageSettingUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the affected object’s type, `"wage_setting"`.
      id:
        type: optional<string>
        docs: ID of the updated team member wage setting.
      object:
        type: optional<TeamMemberWageSettingUpdatedEventObject>
        docs: An object containing the updated team member wage setting.
    source:
      openapi: openapi/openapi.json
  TeamMemberWageSettingUpdatedEventObject:
    properties:
      wage_setting:
        type: optional<WageSetting>
        docs: The updated team member wage setting.
    source:
      openapi: openapi/openapi.json
  Tender:
    docs: >-
      Represents a tender (i.e., a method of payment) used in a Square
      transaction.
    properties:
      id:
        type: optional<string>
        docs: The tender's unique ID. It is the associated payment ID.
        validation:
          maxLength: 192
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the transaction's associated location.
        validation:
          maxLength: 50
      transaction_id:
        type: optional<nullable<string>>
        docs: The ID of the tender's associated transaction.
        validation:
          maxLength: 192
      created_at:
        type: optional<string>
        docs: The timestamp for when the tender was created, in RFC 3339 format.
        validation:
          maxLength: 32
        access: read-only
      note:
        type: optional<nullable<string>>
        docs: An optional note associated with the tender at the time of payment.
        validation:
          maxLength: 500
      amount_money:
        type: optional<Money>
        docs: >-
          The total amount of the tender, including `tip_money`. If the tender
          has a `payment_id`,

          the `total_money` of the corresponding [Payment](entity:Payment) will
          be equal to the

          `amount_money` of the tender.
      tip_money:
        type: optional<Money>
        docs: The tip's amount of the tender.
      processing_fee_money:
        type: optional<Money>
        docs: >-
          The amount of any Square processing fees applied to the tender.


          This field is not immediately populated when a new transaction is
          created.

          It is usually available after about ten seconds.
      customer_id:
        type: optional<nullable<string>>
        docs: >-
          If the tender is associated with a customer or represents a customer's
          card on file,

          this is the ID of the associated customer.
        validation:
          maxLength: 191
      type:
        type: TenderType
        docs: |-
          The type of tender, such as `CARD` or `CASH`.
          See [TenderType](#type-tendertype) for possible values
      card_details:
        type: optional<TenderCardDetails>
        docs: |-
          The details of the card tender.

          This value is present only if the value of `type` is `CARD`.
      cash_details:
        type: optional<TenderCashDetails>
        docs: |-
          The details of the cash tender.

          This value is present only if the value of `type` is `CASH`.
      bank_account_details:
        type: optional<TenderBankAccountDetails>
        docs: |-
          The details of the bank account tender.

          This value is present only if the value of `type` is `BANK_ACCOUNT`.
      buy_now_pay_later_details:
        type: optional<TenderBuyNowPayLaterDetails>
        docs: >-
          The details of a Buy Now Pay Later tender.


          This value is present only if the value of `type` is
          `BUY_NOW_PAY_LATER`.
      square_account_details:
        type: optional<TenderSquareAccountDetails>
        docs: |-
          The details of a Square Account tender.

          This value is present only if the value of `type` is `SQUARE_ACCOUNT`.
      additional_recipients:
        type: optional<nullable<list<AdditionalRecipient>>>
        docs: >-
          Additional recipients (other than the merchant) receiving a portion of
          this tender.

          For example, fees assessed on the purchase by a third party
          integration.
      payment_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of the [Payment](entity:Payment) that corresponds to this
          tender.

          This value is only present for payments created with the v2 Payments
          API.
        validation:
          maxLength: 192
    source:
      openapi: openapi/openapi.json
  TenderBankAccountDetails:
    docs: |-
      Represents the details of a tender with `type` `BANK_ACCOUNT`.

      See [BankAccountPaymentDetails](entity:BankAccountPaymentDetails)
      for more exposed details of a bank account payment.
    properties:
      status:
        type: optional<TenderBankAccountDetailsStatus>
        docs: >-
          The bank account payment's current state.


          See
          [TenderBankAccountPaymentDetailsStatus](entity:TenderBankAccountDetailsStatus)
          for possible values.

          See
          [TenderBankAccountDetailsStatus](#type-tenderbankaccountdetailsstatus)
          for possible values
    source:
      openapi: openapi/openapi.json
  TenderBankAccountDetailsStatus:
    enum:
      - PENDING
      - COMPLETED
      - FAILED
    docs: Indicates the bank account payment's current status.
    source:
      openapi: openapi/openapi.json
  TenderBuyNowPayLaterDetails:
    docs: Represents the details of a tender with `type` `BUY_NOW_PAY_LATER`.
    properties:
      buy_now_pay_later_brand:
        type: optional<TenderBuyNowPayLaterDetailsBrand>
        docs: |-
          The Buy Now Pay Later brand.
          See [Brand](#type-brand) for possible values
      status:
        type: optional<TenderBuyNowPayLaterDetailsStatus>
        docs: >-
          The buy now pay later payment's current state (such as `AUTHORIZED` or

          `CAPTURED`). See
          [TenderBuyNowPayLaterDetailsStatus](entity:TenderBuyNowPayLaterDetailsStatus)

          for possible values.

          See [Status](#type-status) for possible values
    source:
      openapi: openapi/openapi.json
  TenderBuyNowPayLaterDetailsBrand:
    enum:
      - OTHER_BRAND
      - AFTERPAY
    source:
      openapi: openapi/openapi.json
  TenderBuyNowPayLaterDetailsStatus:
    enum:
      - AUTHORIZED
      - CAPTURED
      - VOIDED
      - FAILED
    source:
      openapi: openapi/openapi.json
  TenderCardDetails:
    docs: >-
      Represents additional details of a tender with `type` `CARD` or
      `SQUARE_GIFT_CARD`
    properties:
      status:
        type: optional<TenderCardDetailsStatus>
        docs: >-
          The credit card payment's current state (such as `AUTHORIZED` or

          `CAPTURED`). See
          [TenderCardDetailsStatus](entity:TenderCardDetailsStatus)

          for possible values.

          See [TenderCardDetailsStatus](#type-tendercarddetailsstatus) for
          possible values
      card:
        type: optional<Card>
        docs: The credit card's non-confidential details.
      entry_method:
        type: optional<TenderCardDetailsEntryMethod>
        docs: >-
          The method used to enter the card's details for the transaction.

          See [TenderCardDetailsEntryMethod](#type-tendercarddetailsentrymethod)
          for possible values
    source:
      openapi: openapi/openapi.json
  TenderCardDetailsEntryMethod:
    enum:
      - SWIPED
      - KEYED
      - EMV
      - ON_FILE
      - CONTACTLESS
    docs: Indicates the method used to enter the card's details.
    source:
      openapi: openapi/openapi.json
  TenderCardDetailsStatus:
    enum:
      - AUTHORIZED
      - CAPTURED
      - VOIDED
      - FAILED
    docs: Indicates the card transaction's current status.
    source:
      openapi: openapi/openapi.json
  TenderCashDetails:
    docs: Represents the details of a tender with `type` `CASH`.
    properties:
      buyer_tendered_money:
        type: optional<Money>
        docs: >-
          The total amount of cash provided by the buyer, before change is
          given.
      change_back_money:
        type: optional<Money>
        docs: The amount of change returned to the buyer.
    source:
      openapi: openapi/openapi.json
  TenderSquareAccountDetails:
    docs: Represents the details of a tender with `type` `SQUARE_ACCOUNT`.
    properties:
      status:
        type: optional<TenderSquareAccountDetailsStatus>
        docs: >-
          The Square Account payment's current state (such as `AUTHORIZED` or

          `CAPTURED`). See
          [TenderSquareAccountDetailsStatus](entity:TenderSquareAccountDetailsStatus)

          for possible values.

          See [Status](#type-status) for possible values
    source:
      openapi: openapi/openapi.json
  TenderSquareAccountDetailsStatus:
    enum:
      - AUTHORIZED
      - CAPTURED
      - VOIDED
      - FAILED
    source:
      openapi: openapi/openapi.json
  TenderType:
    enum:
      - CARD
      - CASH
      - THIRD_PARTY_CARD
      - SQUARE_GIFT_CARD
      - NO_SALE
      - BANK_ACCOUNT
      - WALLET
      - BUY_NOW_PAY_LATER
      - SQUARE_ACCOUNT
      - OTHER
    docs: Indicates a tender's type.
    source:
      openapi: openapi/openapi.json
  TerminalAction:
    docs: Represents an action processed by the Square Terminal.
    properties:
      id:
        type: optional<string>
        docs: A unique ID for this `TerminalAction`.
        validation:
          minLength: 10
          maxLength: 255
        access: read-only
      device_id:
        type: optional<nullable<string>>
        docs: |-
          The unique Id of the device intended for this `TerminalAction`.
          The Id can be retrieved from /v2/devices api.
      deadline_duration:
        type: optional<nullable<string>>
        docs: >-
          The duration as an RFC 3339 duration, after which the action will be
          automatically canceled.

          TerminalActions that are `PENDING` will be automatically `CANCELED`
          and have a cancellation reason

          of `TIMED_OUT`


          Default: 5 minutes from creation


          Maximum: 5 minutes
      status:
        type: optional<string>
        docs: >-
          The status of the `TerminalAction`.

          Options: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`,
          `COMPLETED`
        access: read-only
      cancel_reason:
        type: optional<ActionCancelReason>
        docs: >-
          The reason why `TerminalAction` is canceled. Present if the status is
          `CANCELED`.

          See [ActionCancelReason](#type-actioncancelreason) for possible values
      created_at:
        type: optional<string>
        docs: >-
          The time when the `TerminalAction` was created as an RFC 3339
          timestamp.
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The time when the `TerminalAction` was last updated as an RFC 3339
          timestamp.
        access: read-only
      app_id:
        type: optional<string>
        docs: The ID of the application that created the action.
        access: read-only
      location_id:
        type: optional<string>
        docs: The location id the action is attached to, if a link can be made.
        validation:
          maxLength: 64
        access: read-only
      type:
        type: optional<TerminalActionActionType>
        docs: |-
          Represents the type of the action.
          See [ActionType](#type-actiontype) for possible values
      qr_code_options:
        type: optional<QrCodeOptions>
        docs: >-
          Describes configuration for the QR code action. Requires `QR_CODE`
          type.
      save_card_options:
        type: optional<SaveCardOptions>
        docs: >-
          Describes configuration for the save-card action. Requires `SAVE_CARD`
          type.
      signature_options:
        type: optional<SignatureOptions>
        docs: >-
          Describes configuration for the signature capture action. Requires
          `SIGNATURE` type.
      confirmation_options:
        type: optional<ConfirmationOptions>
        docs: >-
          Describes configuration for the confirmation action. Requires
          `CONFIRMATION` type.
      receipt_options:
        type: optional<ReceiptOptions>
        docs: >-
          Describes configuration for the receipt action. Requires `RECEIPT`
          type.
      data_collection_options:
        type: optional<DataCollectionOptions>
        docs: >-
          Describes configuration for the data collection action. Requires
          `DATA_COLLECTION` type.
      select_options:
        type: optional<SelectOptions>
        docs: Describes configuration for the select action. Requires `SELECT` type.
      device_metadata:
        type: optional<DeviceMetadata>
        docs: >-
          Details about the Terminal that received the action request (such as
          battery level,

          operating system version, and network connection settings).


          Only available for `PING` action type.
      await_next_action:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates the action will be linked to another action and requires a
          waiting dialog to be

          displayed instead of returning to the idle screen on completion of the
          action.


          Only supported on SIGNATURE, CONFIRMATION, DATA_COLLECTION, and SELECT
          types.
      await_next_action_duration:
        type: optional<nullable<string>>
        docs: >-
          The timeout duration of the waiting dialog as an RFC 3339 duration,
          after which the

          waiting dialog will no longer be displayed and the Terminal will
          return to the idle screen.


          Default: 5 minutes from when the waiting dialog is displayed


          Maximum: 5 minutes
    source:
      openapi: openapi/openapi.json
  TerminalActionActionType:
    enum:
      - QR_CODE
      - PING
      - SAVE_CARD
      - SIGNATURE
      - CONFIRMATION
      - RECEIPT
      - DATA_COLLECTION
      - SELECT
    docs: >-
      Describes the type of this unit and indicates which field contains the
      unit information. This is an ‘open’ enum.
    source:
      openapi: openapi/openapi.json
  TerminalActionCreatedEvent:
    docs: Published when a TerminalAction is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"terminal.action.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: RFC 3339 timestamp of when the event was created.
        access: read-only
      data:
        type: optional<TerminalActionCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  TerminalActionCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the created object’s type, `"action"`.
      id:
        type: optional<string>
        docs: ID of the created terminal action.
      object:
        type: optional<TerminalActionCreatedEventObject>
        docs: An object containing the created terminal action.
    source:
      openapi: openapi/openapi.json
  TerminalActionCreatedEventObject:
    properties:
      action:
        type: optional<TerminalAction>
        docs: The created terminal action.
    source:
      openapi: openapi/openapi.json
  TerminalActionQuery:
    properties:
      filter:
        type: optional<TerminalActionQueryFilter>
        docs: Options for filtering returned `TerminalAction`s
      sort:
        type: optional<TerminalActionQuerySort>
        docs: Option for sorting returned `TerminalAction` objects.
    source:
      openapi: openapi/openapi.json
  TerminalActionQueryFilter:
    properties:
      device_id:
        type: optional<nullable<string>>
        docs: >-
          `TerminalAction`s associated with a specific device. If no device is
          specified then all

          `TerminalAction`s for the merchant will be displayed.
      created_at:
        type: optional<TimeRange>
        docs: |-
          Time range for the beginning of the reporting period. Inclusive.
          Default value: The current time minus one day.
          Note that `TerminalAction`s are available for 30 days after creation.
      status:
        type: optional<nullable<string>>
        docs: >-
          Filter results with the desired status of the `TerminalAction`

          Options: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`,
          `COMPLETED`
      type:
        type: optional<TerminalActionActionType>
        docs: >-
          Filter results with the requested ActionType.

          See [TerminalActionActionType](#type-terminalactionactiontype) for
          possible values
    source:
      openapi: openapi/openapi.json
  TerminalActionQuerySort:
    properties:
      sort_order:
        type: optional<SortOrder>
        docs: |-
          The order in which results are listed.
          - `ASC` - Oldest to newest.
          - `DESC` - Newest to oldest (default).
          See [SortOrder](#type-sortorder) for possible values
    source:
      openapi: openapi/openapi.json
  TerminalActionUpdatedEvent:
    docs: Published when a TerminalAction is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"terminal.action.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: RFC 3339 timestamp of when the event was created.
        access: read-only
      data:
        type: optional<TerminalActionUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  TerminalActionUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the updated object’s type, `"action"`.
      id:
        type: optional<string>
        docs: ID of the updated terminal action.
      object:
        type: optional<TerminalActionUpdatedEventObject>
        docs: An object containing the updated terminal action.
    source:
      openapi: openapi/openapi.json
  TerminalActionUpdatedEventObject:
    properties:
      action:
        type: optional<TerminalAction>
        docs: The updated terminal action.
    source:
      openapi: openapi/openapi.json
  TerminalCheckout:
    docs: Represents a checkout processed by the Square Terminal.
    properties:
      id:
        type: optional<string>
        docs: A unique ID for this `TerminalCheckout`.
        validation:
          minLength: 10
          maxLength: 255
        access: read-only
      amount_money:
        type: Money
        docs: >-
          The amount of money (including the tax amount) that the Square
          Terminal device should try to collect.
      reference_id:
        type: optional<nullable<string>>
        docs: >-
          An optional user-defined reference ID that can be used to associate

          this `TerminalCheckout` to another entity in an external system. For
          example, an order

          ID generated by a third-party shopping cart. The ID is also associated
          with any payments

          used to complete the checkout.
        validation:
          maxLength: 40
      note:
        type: optional<nullable<string>>
        docs: >-
          An optional note to associate with the checkout, as well as with any
          payments used to complete the checkout.

          Note: maximum 500 characters
        validation:
          maxLength: 500
      order_id:
        type: optional<nullable<string>>
        docs: The reference to the Square order ID for the checkout request.
      payment_options:
        type: optional<PaymentOptions>
        docs: Payment-specific options for the checkout request.
      device_options:
        type: DeviceCheckoutOptions
        docs: >-
          Options to control the display and behavior of the Square Terminal
          device.
      deadline_duration:
        type: optional<nullable<string>>
        docs: >-
          An RFC 3339 duration, after which the checkout is automatically
          canceled.

          A `TerminalCheckout` that is `PENDING` is automatically `CANCELED` and
          has a cancellation reason

          of `TIMED_OUT`.


          Default: 5 minutes from creation


          Maximum: 5 minutes
      status:
        type: optional<string>
        docs: >-
          The status of the `TerminalCheckout`.

          Options: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`,
          `COMPLETED`
        access: read-only
      cancel_reason:
        type: optional<ActionCancelReason>
        docs: >-
          The reason why `TerminalCheckout` is canceled. Present if the status
          is `CANCELED`.

          See [ActionCancelReason](#type-actioncancelreason) for possible values
      payment_ids:
        type: optional<list<string>>
        docs: A list of IDs for payments created by this `TerminalCheckout`.
        access: read-only
      created_at:
        type: optional<string>
        docs: >-
          The time when the `TerminalCheckout` was created, as an RFC 3339
          timestamp.
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The time when the `TerminalCheckout` was last updated, as an RFC 3339
          timestamp.
        access: read-only
      app_id:
        type: optional<string>
        docs: The ID of the application that created the checkout.
        access: read-only
      location_id:
        type: optional<string>
        docs: The location of the device where the `TerminalCheckout` was directed.
        validation:
          maxLength: 64
        access: read-only
      payment_type:
        type: optional<CheckoutOptionsPaymentType>
        docs: >-
          The type of payment the terminal should attempt to capture from.
          Defaults to `CARD_PRESENT`.

          See [CheckoutOptionsPaymentType](#type-checkoutoptionspaymenttype) for
          possible values
      team_member_id:
        type: optional<nullable<string>>
        docs: >-
          An optional ID of the team member associated with creating the
          checkout.
      customer_id:
        type: optional<nullable<string>>
        docs: An optional ID of the customer associated with the checkout.
      app_fee_money:
        type: optional<Money>
        docs: >-
          The amount the developer is taking as a fee for facilitating the
          payment on behalf

          of the seller.


          The amount cannot be more than 90% of the total amount of the payment.


          The amount must be specified in the smallest denomination of the
          applicable currency (for example, US dollar amounts are specified in
          cents). For more information, see [Working with Monetary
          Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts).


          The fee currency code must match the currency associated with the
          seller that is accepting the payment. The application must be from a
          developer account in the same country and using the same currency code
          as the seller.


          For more information about the application fee scenario, see [Take
          Payments and Collect
          Fees](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees).


          To set this field, PAYMENTS_WRITE_ADDITIONAL_RECIPIENTS OAuth
          permission is required. For more information, see
          [Permissions](https://developer.squareup.com/docs/payments-api/take-payments-and-collect-fees#permissions).
      statement_description_identifier:
        type: optional<nullable<string>>
        docs: >-
          Optional additional payment information to include on the customer's
          card statement as

          part of the statement description. This can be, for example, an
          invoice number, ticket number,

          or short description that uniquely identifies the purchase.
        validation:
          maxLength: 20
      tip_money:
        type: optional<Money>
        docs: >-
          The amount designated as a tip, in addition to `amount_money`. This
          may only be set for a

          checkout that has tipping disabled (`tip_settings.allow_tipping` is
          `false`).
    source:
      openapi: openapi/openapi.json
  TerminalCheckoutCreatedEvent:
    docs: Published when a [TerminalCheckout](entity:TerminalCheckout) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"terminal.checkout.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: RFC 3339 timestamp of when the event was created.
        access: read-only
      data:
        type: optional<TerminalCheckoutCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  TerminalCheckoutCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the created object’s type, `"checkout"`.
      id:
        type: optional<string>
        docs: ID of the created terminal checkout.
        validation:
          minLength: 10
          maxLength: 255
      object:
        type: optional<TerminalCheckoutCreatedEventObject>
        docs: An object containing the created terminal checkout
    source:
      openapi: openapi/openapi.json
  TerminalCheckoutCreatedEventObject:
    properties:
      checkout:
        type: optional<TerminalCheckout>
        docs: The created terminal checkout
    source:
      openapi: openapi/openapi.json
  TerminalCheckoutQuery:
    properties:
      filter:
        type: optional<TerminalCheckoutQueryFilter>
        docs: Options for filtering returned `TerminalCheckout` objects.
      sort:
        type: optional<TerminalCheckoutQuerySort>
        docs: Option for sorting returned `TerminalCheckout` objects.
    source:
      openapi: openapi/openapi.json
  TerminalCheckoutQueryFilter:
    properties:
      device_id:
        type: optional<nullable<string>>
        docs: >-
          The `TerminalCheckout` objects associated with a specific device. If
          no device is specified, then all

          `TerminalCheckout` objects for the merchant are displayed.
      created_at:
        type: optional<TimeRange>
        docs: >-
          The time range for the beginning of the reporting period, which is
          inclusive.

          Default value: The current time minus one day.

          Note that `TerminalCheckout`s are available for 30 days after
          creation.
      status:
        type: optional<nullable<string>>
        docs: >-
          Filtered results with the desired status of the `TerminalCheckout`.

          Options: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`,
          `COMPLETED`
    source:
      openapi: openapi/openapi.json
  TerminalCheckoutQuerySort:
    properties:
      sort_order:
        type: optional<SortOrder>
        docs: |-
          The order in which results are listed.
          Default: `DESC`
          See [SortOrder](#type-sortorder) for possible values
    source:
      openapi: openapi/openapi.json
  TerminalCheckoutUpdatedEvent:
    docs: Published when a [TerminalCheckout](entity:TerminalCheckout) is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"terminal.checkout.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: RFC 3339 timestamp of when the event was created.
        access: read-only
      data:
        type: optional<TerminalCheckoutUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  TerminalCheckoutUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the updated object’s type, `"checkout"`.
      id:
        type: optional<string>
        docs: ID of the updated terminal checkout.
        validation:
          minLength: 10
          maxLength: 255
      object:
        type: optional<TerminalCheckoutUpdatedEventObject>
        docs: An object containing the updated terminal checkout
    source:
      openapi: openapi/openapi.json
  TerminalCheckoutUpdatedEventObject:
    properties:
      checkout:
        type: optional<TerminalCheckout>
        docs: The updated terminal checkout
    source:
      openapi: openapi/openapi.json
  TerminalRefund:
    docs: >-
      Represents a payment refund processed by the Square Terminal. Only
      supports Interac (Canadian debit network) payment refunds.
    properties:
      id:
        type: optional<string>
        docs: A unique ID for this `TerminalRefund`.
        validation:
          minLength: 10
          maxLength: 255
        access: read-only
      refund_id:
        type: optional<string>
        docs: >-
          The reference to the payment refund created by completing this
          `TerminalRefund`.
        access: read-only
      payment_id:
        type: string
        docs: The unique ID of the payment being refunded.
        validation:
          minLength: 1
      order_id:
        type: optional<string>
        docs: >-
          The reference to the Square order ID for the payment identified by the
          `payment_id`.
        access: read-only
      amount_money:
        type: Money
        docs: >-
          The amount of money, inclusive of `tax_money`, that the
          `TerminalRefund` should return.

          This value is limited to the amount taken in the original payment
          minus any completed or

          pending refunds.
      reason:
        type: string
        docs: A description of the reason for the refund.
        validation:
          maxLength: 192
      device_id:
        type: string
        docs: |-
          The unique ID of the device intended for this `TerminalRefund`.
          The Id can be retrieved from /v2/devices api.
      deadline_duration:
        type: optional<nullable<string>>
        docs: >-
          The RFC 3339 duration, after which the refund is automatically
          canceled.

          A `TerminalRefund` that is `PENDING` is automatically `CANCELED` and
          has a cancellation reason

          of `TIMED_OUT`.


          Default: 5 minutes from creation.


          Maximum: 5 minutes
      status:
        type: optional<string>
        docs: >-
          The status of the `TerminalRefund`.

          Options: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`, or
          `COMPLETED`.
        access: read-only
      cancel_reason:
        type: optional<ActionCancelReason>
        docs: |-
          Present if the status is `CANCELED`.
          See [ActionCancelReason](#type-actioncancelreason) for possible values
      created_at:
        type: optional<string>
        docs: >-
          The time when the `TerminalRefund` was created, as an RFC 3339
          timestamp.
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The time when the `TerminalRefund` was last updated, as an RFC 3339
          timestamp.
        access: read-only
      app_id:
        type: optional<string>
        docs: The ID of the application that created the refund.
        access: read-only
      location_id:
        type: optional<string>
        docs: The location of the device where the `TerminalRefund` was directed.
        validation:
          maxLength: 64
        access: read-only
    source:
      openapi: openapi/openapi.json
  TerminalRefundCreatedEvent:
    docs: Published when a Terminal API refund is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"terminal.refund.created"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: RFC 3339 timestamp of when the event was created.
        access: read-only
      data:
        type: optional<TerminalRefundCreatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  TerminalRefundCreatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the created object’s type, `"refund"`.
      id:
        type: optional<string>
        docs: ID of the created terminal refund.
      object:
        type: optional<TerminalRefundCreatedEventObject>
        docs: An object containing the created terminal refund.
    source:
      openapi: openapi/openapi.json
  TerminalRefundCreatedEventObject:
    properties:
      refund:
        type: optional<TerminalRefund>
        docs: The created terminal refund.
    source:
      openapi: openapi/openapi.json
  TerminalRefundQuery:
    properties:
      filter:
        type: optional<TerminalRefundQueryFilter>
        docs: The filter for the Terminal refund query.
      sort:
        type: optional<TerminalRefundQuerySort>
        docs: The sort order for the Terminal refund query.
    source:
      openapi: openapi/openapi.json
  TerminalRefundQueryFilter:
    properties:
      device_id:
        type: optional<nullable<string>>
        docs: >-
          `TerminalRefund` objects associated with a specific device. If no
          device is specified, then all

          `TerminalRefund` objects for the signed-in account are displayed.
      created_at:
        type: optional<TimeRange>
        docs: >-
          The timestamp for the beginning of the reporting period, in RFC 3339
          format. Inclusive.

          Default value: The current time minus one day.

          Note that `TerminalRefund`s are available for 30 days after creation.
      status:
        type: optional<nullable<string>>
        docs: >-
          Filtered results with the desired status of the `TerminalRefund`.

          Options: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`, or
          `COMPLETED`.
    source:
      openapi: openapi/openapi.json
  TerminalRefundQuerySort:
    properties:
      sort_order:
        type: optional<nullable<string>>
        docs: |-
          The order in which results are listed.
          - `ASC` - Oldest to newest.
          - `DESC` - Newest to oldest (default).
    source:
      openapi: openapi/openapi.json
  TerminalRefundUpdatedEvent:
    docs: Published when a Terminal API refund is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of the target merchant associated with the event.
      type:
        type: optional<nullable<string>>
        docs: The type of event this represents, `"terminal.refund.updated"`.
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for the event.
      created_at:
        type: optional<string>
        docs: RFC 3339 timestamp of when the event was created.
        access: read-only
      data:
        type: optional<TerminalRefundUpdatedEventData>
        docs: Data associated with the event.
    source:
      openapi: openapi/openapi.json
  TerminalRefundUpdatedEventData:
    properties:
      type:
        type: optional<nullable<string>>
        docs: Name of the updated object’s type, `"refund"`.
      id:
        type: optional<string>
        docs: ID of the updated terminal refund.
      object:
        type: optional<TerminalRefundUpdatedEventObject>
        docs: An object containing the updated terminal refund.
    source:
      openapi: openapi/openapi.json
  TerminalRefundUpdatedEventObject:
    properties:
      refund:
        type: optional<TerminalRefund>
        docs: The updated terminal refund.
    source:
      openapi: openapi/openapi.json
  TestWebhookSubscriptionResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [TestWebhookSubscription](api-endpoint:WebhookSubscriptions-TestWebhookSubscription)
      endpoint.


      Note: If there are errors processing the request, the
      [SubscriptionTestResult](entity:SubscriptionTestResult) field is not

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      subscription_test_result:
        type: optional<SubscriptionTestResult>
        docs: The [SubscriptionTestResult](entity:SubscriptionTestResult).
    source:
      openapi: openapi/openapi.json
  TimeRange:
    docs: |-
      Represents a generic time range. The start and end values are
      represented in RFC 3339 format. Time ranges are customized to be
      inclusive or exclusive based on the needs of a particular endpoint.
      Refer to the relevant endpoint-specific documentation to determine
      how time ranges are handled.
    properties:
      start_at:
        type: optional<nullable<string>>
        docs: |-
          A datetime value in RFC 3339 format indicating when the time range
          starts.
      end_at:
        type: optional<nullable<string>>
        docs: |-
          A datetime value in RFC 3339 format indicating when the time range
          ends.
    source:
      openapi: openapi/openapi.json
  Timecard:
    docs: >-
      A record of the hourly rate, start time, and end time of a single timecard
      (shift)

      for a team member. This might include a record of the start and end times
      of breaks

      taken during the shift.
    properties:
      id:
        type: optional<string>
        docs: '**Read only** The Square-issued UUID for this object.'
        validation:
          maxLength: 255
      location_id:
        type: string
        docs: >-
          The ID of the [location](entity:Location) for this timecard. The
          location should be based on

          where the team member clocked in.
        validation:
          minLength: 1
      timezone:
        type: optional<nullable<string>>
        docs: >-
          **Read only** The time zone calculated from the location based on the
          `location_id`,

          provided as a convenience value. Format: the IANA time zone database
          identifier for the

          location time zone.
      start_at:
        type: string
        docs: >-
          The start time of the timecard, in RFC 3339 format and shifted to the
          location

          timezone + offset. Precision up to the minute is respected; seconds
          are truncated.
        validation:
          minLength: 1
      end_at:
        type: optional<nullable<string>>
        docs: >-
          The end time of the timecard, in RFC 3339 format and shifted to the
          location

          timezone + offset. Precision up to the minute is respected; seconds
          are truncated.
      wage:
        type: optional<TimecardWage>
        docs: >-
          Job and pay related information. If the wage is not set on create, it
          defaults to a wage

          of zero. If the title is not set on create, it defaults to the name of
          the role the team member

          is assigned to, if any.
      breaks:
        type: optional<nullable<list<Break>>>
        docs: >-
          A list of all the paid or unpaid breaks that were taken during this
          timecard.
      status:
        type: optional<TimecardStatus>
        docs: |-
          Describes the working state of the timecard.
          See [TimecardStatus](#type-timecardstatus) for possible values
      version:
        type: optional<integer>
        docs: >-
          **Read only** The current version of the timecard, which is
          incremented with each update.

          This field is used for [optimistic
          concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)

          control to ensure that requests don't overwrite data from another
          request.
      created_at:
        type: optional<string>
        docs: >-
          The timestamp of when the timecard was created, in RFC 3339 format
          presented as UTC.
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp of when the timecard was last updated, in RFC 3339
          format presented as UTC.
        access: read-only
      team_member_id:
        type: string
        docs: >-
          The ID of the [team member](entity:TeamMember) this timecard belongs
          to.
        validation:
          minLength: 1
      declared_cash_tip_money:
        type: optional<Money>
        docs: The cash tips declared by the team member for this timecard.
    source:
      openapi: openapi/openapi.json
  TimecardFilter:
    docs: |-
      Defines a filter used in a search for `Timecard` records. `AND` logic is
      used by Square's servers to apply each filter property specified.
    properties:
      location_ids:
        type: optional<nullable<list<string>>>
        docs: Fetch timecards for the specified location.
      status:
        type: optional<TimecardFilterStatus>
        docs: >-
          Fetch a `Timecard` instance by `Timecard.status`.

          See [TimecardFilterStatus](#type-timecardfilterstatus) for possible
          values
      start:
        type: optional<TimeRange>
        docs: Fetch `Timecard` instances that start in the time range - Inclusive.
      end:
        type: optional<TimeRange>
        docs: Fetch the `Timecard` instances that end in the time range - Inclusive.
      workday:
        type: optional<TimecardWorkday>
        docs: Fetch the `Timecard` instances based on the workday date range.
      team_member_ids:
        type: optional<nullable<list<string>>>
        docs: Fetch timecards for the specified team members.
    source:
      openapi: openapi/openapi.json
  TimecardFilterStatus:
    enum:
      - OPEN
      - CLOSED
    docs: Specifies the `status` of `Timecard` records to be returned.
    source:
      openapi: openapi/openapi.json
  TimecardQuery:
    docs: >-
      The parameters of a `Timecard` search query, which includes filter and
      sort options.
    properties:
      filter:
        type: optional<TimecardFilter>
        docs: Query filter options.
      sort:
        type: optional<TimecardSort>
        docs: Sort order details.
    source:
      openapi: openapi/openapi.json
  TimecardSort:
    docs: Sets the sort order of search results.
    properties:
      field:
        type: optional<TimecardSortField>
        docs: |-
          The field to sort on.
          See [TimecardSortField](#type-timecardsortfield) for possible values
      order:
        type: optional<SortOrder>
        docs: |-
          The order in which results are returned. Defaults to DESC.
          See [SortOrder](#type-sortorder) for possible values
    source:
      openapi: openapi/openapi.json
  TimecardSortField:
    enum:
      - START_AT
      - END_AT
      - CREATED_AT
      - UPDATED_AT
    docs: Enumerates the `Timecard` fields to sort on.
    source:
      openapi: openapi/openapi.json
  TimecardStatus:
    enum:
      - OPEN
      - CLOSED
    docs: >-
      **Read only** Enumerates the possible status of a
      [timecard](entity:Timecard).
    source:
      openapi: openapi/openapi.json
  TimecardWage:
    docs: >-
      The hourly wage rate used to compensate a team member for a
      [timecard](entity:Timecard).
    properties:
      title:
        type: optional<nullable<string>>
        docs: The name of the job performed during this timecard.
      hourly_rate:
        type: optional<Money>
        docs: |-
          Can be a custom-set hourly wage or the calculated effective hourly
          wage based on the annual wage and hours worked per week.
      job_id:
        type: optional<string>
        docs: |-
          The ID of the [job](entity:Job) performed for this timecard. Square
          labor-reporting UIs might group timecards together by ID.
        access: read-only
      tip_eligible:
        type: optional<nullable<boolean>>
        docs: Whether team members are eligible for tips when working this job.
    source:
      openapi: openapi/openapi.json
  TimecardWorkday:
    docs: |-
      A `Timecard` search query filter parameter that sets a range of days that
      a `Timecard` must start or end in before passing the filter condition.
    properties:
      date_range:
        type: optional<DateRange>
        docs: Dates for fetching the timecards.
      match_timecards_by:
        type: optional<TimecardWorkdayMatcher>
        docs: >-
          The strategy on which the dates are applied.

          See [TimecardWorkdayMatcher](#type-timecardworkdaymatcher) for
          possible values
      default_timezone:
        type: optional<nullable<string>>
        docs: >-
          Location-specific timezones convert workdays to datetime filters.

          Every location included in the query must have a timezone or this
          field

          must be provided as a fallback. Format: the IANA timezone database

          identifier for the relevant timezone.
    source:
      openapi: openapi/openapi.json
  TimecardWorkdayMatcher:
    enum:
      - START_AT
      - END_AT
      - INTERSECTION
    docs: Defines the logic used to apply a workday filter.
    source:
      openapi: openapi/openapi.json
  TipSettings:
    properties:
      allow_tipping:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether tipping is enabled for this checkout. Defaults to
          false.
      separate_tip_screen:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether tip options should be presented on the screen before
          presenting

          the signature screen during card payment. Defaults to false.
      custom_tip_field:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether custom tip amounts are allowed during the checkout
          flow. Defaults to false.
      tip_percentages:
        type: optional<nullable<list<integer>>>
        docs: >-
          A list of tip percentages that should be presented during the checkout
          flow, specified as

          up to 3 non-negative integers from 0 to 100 (inclusive). Defaults to
          15, 20, and 25.
      smart_tipping:
        type: optional<nullable<boolean>>
        docs: >-
          Enables the "Smart Tip Amounts" behavior.

          Exact tipping options depend on the region in which the Square seller
          is active.


          For payments under 10.00, in the Australia, Canada, Ireland, United
          Kingdom, and United States, tipping options are presented as no tip,
          .50, 1.00 or 2.00.


          For payment amounts of 10.00 or greater, tipping options are presented
          as the following percentages: 0%, 5%, 10%, 15%.


          If set to true, the `tip_percentages` settings is ignored.

          Defaults to false.


          To learn more about smart tipping, see [Accept Tips with the Square
          App](https://squareup.com/help/us/en/article/5069-accept-tips-with-the-square-app).
    source:
      openapi: openapi/openapi.json
  Transaction:
    docs: >-
      Represents a transaction processed with Square, either with the

      Connect API or with Square Point of Sale.


      The `tenders` field of this object lists all methods of payment used to
      pay in

      the transaction.
    properties:
      id:
        type: optional<string>
        docs: The transaction's unique ID, issued by Square payments servers.
        validation:
          maxLength: 192
      location_id:
        type: optional<nullable<string>>
        docs: The ID of the transaction's associated location.
        validation:
          maxLength: 50
      created_at:
        type: optional<string>
        docs: >-
          The timestamp for when the transaction was created, in RFC 3339
          format.
        validation:
          maxLength: 32
      tenders:
        type: optional<nullable<list<Tender>>>
        docs: The tenders used to pay in the transaction.
      refunds:
        type: optional<nullable<list<Refund>>>
        docs: Refunds that have been applied to any tender in the transaction.
      reference_id:
        type: optional<nullable<string>>
        docs: >-
          If the transaction was created with the
          [Charge](api-endpoint:Transactions-Charge)

          endpoint, this value is the same as the value provided for the
          `reference_id`

          parameter in the request to that endpoint. Otherwise, it is not set.
        validation:
          maxLength: 40
      product:
        type: optional<TransactionProduct>
        docs: |-
          The Square product that processed the transaction.
          See [TransactionProduct](#type-transactionproduct) for possible values
      client_id:
        type: optional<nullable<string>>
        docs: >-
          If the transaction was created in the Square Point of Sale app, this
          value

          is the ID generated for the transaction by Square Point of Sale.


          This ID has no relationship to the transaction's canonical `id`, which
          is

          generated by Square's backend servers. This value is generated for
          bookkeeping

          purposes, in case the transaction cannot immediately be completed (for
          example,

          if the transaction is processed in offline mode).


          It is not currently possible with the Connect API to perform a
          transaction

          lookup by this value.
        validation:
          maxLength: 192
      shipping_address:
        type: optional<Address>
        docs: The shipping address provided in the request, if any.
      order_id:
        type: optional<nullable<string>>
        docs: >-
          The order_id is an identifier for the order associated with this
          transaction, if any.
        validation:
          maxLength: 192
    source:
      openapi: openapi/openapi.json
  TransactionProduct:
    enum:
      - REGISTER
      - EXTERNAL_API
      - BILLING
      - APPOINTMENTS
      - INVOICES
      - ONLINE_STORE
      - PAYROLL
      - OTHER
    docs: Indicates the Square product used to process a transaction.
    source:
      openapi: openapi/openapi.json
  TransactionType:
    enum:
      - DEBIT
      - CREDIT
    docs: The transaction type used in the disputed payment.
    source:
      openapi: openapi/openapi.json
  UnlinkCustomerFromGiftCardResponse:
    docs: >-
      A response that contains the unlinked `GiftCard` object. If the request
      resulted in errors, 

      the response contains a set of `Error` objects.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      gift_card:
        type: optional<GiftCard>
        docs: >-
          The gift card with the ID of the unlinked customer removed from the
          `customer_ids` field. 

          If no other customers are linked, the `customer_ids` field is also
          removed.
    source:
      openapi: openapi/openapi.json
  UpdateBookingCustomAttributeDefinitionResponse:
    docs: >-
      Represents an
      [UpdateBookingCustomAttributeDefinition](api-endpoint:BookingCustomAttributes-UpdateBookingCustomAttributeDefinition)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The updated custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateBookingResponse:
    properties:
      booking:
        type: optional<Booking>
        docs: The booking that was updated.
      errors:
        type: optional<list<Error>>
        docs: Errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateBreakTypeResponse:
    docs: >-
      A response to a request to update a `BreakType`. The response contains

      the requested `BreakType` objects and might contain a set of `Error`
      objects if

      the request resulted in errors.
    properties:
      break_type:
        type: optional<BreakType>
        docs: The response object.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateCatalogImageRequest:
    properties:
      idempotency_key:
        type: string
        docs: >-
          A unique string that identifies this UpdateCatalogImage request.

          Keys can be any valid string but must be unique for every
          UpdateCatalogImage request.


          See [Idempotency
          keys](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency)
          for more information.
        validation:
          minLength: 1
          maxLength: 128
    source:
      openapi: openapi/openapi.json
  UpdateCatalogImageResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      image:
        type: optional<CatalogObject>
        docs: |-
          The newly updated `CatalogImage` including a Square-generated
          URL for the encapsulated image file.
    source:
      openapi: openapi/openapi.json
  UpdateCustomerCustomAttributeDefinitionResponse:
    docs: >-
      Represents an
      [UpdateCustomerCustomAttributeDefinition](api-endpoint:CustomerCustomAttributes-UpdateCustomerCustomAttributeDefinition)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The updated custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateCustomerGroupResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [UpdateCustomerGroup](api-endpoint:CustomerGroups-UpdateCustomerGroup)
      endpoint.


      Either `errors` or `group` is present in a given response (never both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      group:
        type: optional<CustomerGroup>
        docs: The successfully updated customer group.
    source:
      openapi: openapi/openapi.json
  UpdateCustomerResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the [UpdateCustomer](api-endpoint:Customers-UpdateCustomer)
      or

      [BulkUpdateCustomers](api-endpoint:Customers-BulkUpdateCustomers)
      endpoint.


      Either `errors` or `customer` is present in a given response (never both).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      customer:
        type: optional<Customer>
        docs: The updated customer.
    source:
      openapi: openapi/openapi.json
  UpdateInvoiceResponse:
    docs: Describes a `UpdateInvoice` response.
    properties:
      invoice:
        type: optional<Invoice>
        docs: The updated invoice.
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
    source:
      openapi: openapi/openapi.json
  UpdateItemModifierListsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      updated_at:
        type: optional<string>
        docs: >-
          The database
          [timestamp](https://developer.squareup.com/docs/build-basics/common-data-types/working-with-dates)
          of this update in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`.
    source:
      openapi: openapi/openapi.json
  UpdateItemTaxesResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      updated_at:
        type: optional<string>
        docs: >-
          The database
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          of this update in RFC 3339 format, e.g., `2016-09-04T23:59:33.123Z`.
    source:
      openapi: openapi/openapi.json
  UpdateJobResponse:
    docs: >-
      Represents an [UpdateJob](api-endpoint:Team-UpdateJob) response. Either
      `job` or `errors`

      is present in the response.
    properties:
      job:
        type: optional<Job>
        docs: The updated job.
      errors:
        type: optional<list<Error>>
        docs: The errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateLocationCustomAttributeDefinitionResponse:
    docs: >-
      Represents an
      [UpdateLocationCustomAttributeDefinition](api-endpoint:LocationCustomAttributes-UpdateLocationCustomAttributeDefinition)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The updated custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateLocationResponse:
    docs: >-
      The response object returned by the
      [UpdateLocation](api-endpoint:Locations-UpdateLocation) endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information about errors encountered during the request.
      location:
        type: optional<Location>
        docs: The updated `Location` object.
    source:
      openapi: openapi/openapi.json
  UpdateLocationSettingsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred when updating the location settings.
      location_settings:
        type: optional<CheckoutLocationSettings>
        docs: The updated location settings.
    source:
      openapi: openapi/openapi.json
  UpdateMerchantCustomAttributeDefinitionResponse:
    docs: >-
      Represents an
      [UpdateMerchantCustomAttributeDefinition](api-endpoint:MerchantCustomAttributes-UpdateMerchantCustomAttributeDefinition)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The updated custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateMerchantSettingsResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred when updating the merchant settings.
      merchant_settings:
        type: optional<CheckoutMerchantSettings>
        docs: The updated merchant settings.
    source:
      openapi: openapi/openapi.json
  UpdateOrderCustomAttributeDefinitionResponse:
    docs: Represents a response from updating an order custom attribute definition.
    properties:
      custom_attribute_definition:
        type: optional<CustomAttributeDefinition>
        docs: The updated order custom attribute definition.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateOrderResponse:
    docs: |-
      Defines the fields that are included in the response body of
      a request to the [UpdateOrder](api-endpoint:Orders-UpdateOrder) endpoint.
    properties:
      order:
        type: optional<Order>
        docs: The updated order.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdatePaymentLinkResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred when updating the payment link.
      payment_link:
        type: optional<PaymentLink>
        docs: The updated payment link.
    source:
      openapi: openapi/openapi.json
  UpdatePaymentResponse:
    docs: |-
      Defines the response returned by
      [UpdatePayment](api-endpoint:Payments-UpdatePayment).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      payment:
        type: optional<Payment>
        docs: The updated payment.
    source:
      openapi: openapi/openapi.json
  UpdateScheduledShiftResponse:
    docs: >-
      Represents an
      [UpdateScheduledShift](api-endpoint:Labor-UpdateScheduledShift) response.

      Either `scheduled_shift` or `errors` is present in the response.
    properties:
      scheduled_shift:
        type: optional<ScheduledShift>
        docs: >-
          The updated scheduled shift. To make the changes public, call 

          [PublishScheduledShift](api-endpoint:Labor-PublishScheduledShift) or

          [BulkPublishScheduledShifts](api-endpoint:Labor-BulkPublishScheduledShifts).
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateShiftResponse:
    docs: |-
      The response to a request to update a `Shift`. The response contains
      the updated `Shift` object and might contain a set of `Error` objects if
      the request resulted in errors.
    properties:
      shift:
        type: optional<Shift>
        docs: The updated `Shift`.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateSubscriptionResponse:
    docs: >-
      Defines output parameters in a response from the

      [UpdateSubscription](api-endpoint:Subscriptions-UpdateSubscription)
      endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors encountered during the request.
      subscription:
        type: optional<Subscription>
        docs: The updated subscription.
    source:
      openapi: openapi/openapi.json
  UpdateTeamMemberRequest:
    docs: Represents an update request for a `TeamMember` object.
    properties:
      team_member:
        type: optional<TeamMember>
        docs: >-
          The team member fields to add, change, or clear. Fields can be cleared
          using a null value. To update

          `wage_setting.job_assignments`, you must provide the complete list of
          job assignments. If needed, call

          [ListJobs](api-endpoint:Team-ListJobs) to get the required `job_id`
          values.
    source:
      openapi: openapi/openapi.json
  UpdateTeamMemberResponse:
    docs: >-
      Represents a response from an update request containing the updated
      `TeamMember` object or error messages.
    properties:
      team_member:
        type: optional<TeamMember>
        docs: The successfully updated `TeamMember` object.
      errors:
        type: optional<list<Error>>
        docs: The errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateTimecardResponse:
    docs: >-
      The response to a request to update a `Timecard`. The response contains

      the updated `Timecard` object and might contain a set of `Error` objects
      if

      the request resulted in errors.
    properties:
      timecard:
        type: optional<Timecard>
        docs: The updated `Timecard`.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateVendorRequest:
    docs: >-
      Represents an input to a call to
      [UpdateVendor](api-endpoint:Vendors-UpdateVendor).
    properties:
      idempotency_key:
        type: optional<nullable<string>>
        docs: >-
          A client-supplied, universally unique identifier (UUID) for the

          request.


          See
          [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency)
          in the

          [API Development 101](https://developer.squareup.com/docs/buildbasics)
          section for more

          information.
        validation:
          maxLength: 128
      vendor:
        type: Vendor
        docs: The specified [Vendor](entity:Vendor) to be updated.
    source:
      openapi: openapi/openapi.json
  UpdateVendorResponse:
    docs: >-
      Represents an output from a call to
      [UpdateVendor](api-endpoint:Vendors-UpdateVendor).
    properties:
      errors:
        type: optional<list<Error>>
        docs: Errors occurred when the request fails.
      vendor:
        type: optional<Vendor>
        docs: The [Vendor](entity:Vendor) that has been updated.
    source:
      openapi: openapi/openapi.json
  UpdateWageSettingResponse:
    docs: >-
      Represents a response from an update request containing the updated
      `WageSetting` object

      or error messages.
    properties:
      wage_setting:
        type: optional<WageSetting>
        docs: The successfully updated `WageSetting` object.
      errors:
        type: optional<list<Error>>
        docs: The errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpdateWebhookSubscriptionResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [UpdateWebhookSubscription](api-endpoint:WebhookSubscriptions-UpdateWebhookSubscription)
      endpoint.


      Note: If there are errors processing the request, the
      [Subscription](entity:WebhookSubscription) is not

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      subscription:
        type: optional<WebhookSubscription>
        docs: The updated [Subscription](entity:WebhookSubscription).
    source:
      openapi: openapi/openapi.json
  UpdateWebhookSubscriptionSignatureKeyResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [UpdateWebhookSubscriptionSignatureKey](api-endpoint:WebhookSubscriptions-UpdateWebhookSubscriptionSignatureKey)
      endpoint.


      Note: If there are errors processing the request, the
      [Subscription](entity:WebhookSubscription) is not

      present.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Information on errors encountered during the request.
      signature_key:
        type: optional<string>
        docs: >-
          The new Square-generated signature key used to validate the origin of
          the webhook event.
        access: read-only
    source:
      openapi: openapi/openapi.json
  UpdateWorkweekConfigResponse:
    docs: >-
      The response to a request to update a `WorkweekConfig` object. The
      response contains

      the updated `WorkweekConfig` object and might contain a set of `Error`
      objects if

      the request resulted in errors.
    properties:
      workweek_config:
        type: optional<WorkweekConfig>
        docs: The response object.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpsertBookingCustomAttributeResponse:
    docs: >-
      Represents an
      [UpsertBookingCustomAttribute](api-endpoint:BookingCustomAttributes-UpsertBookingCustomAttribute)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute:
        type: optional<CustomAttribute>
        docs: The new or updated custom attribute.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpsertCatalogObjectResponse:
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      catalog_object:
        type: optional<CatalogObject>
        docs: The successfully created or updated CatalogObject.
      id_mappings:
        type: optional<list<CatalogIdMapping>>
        docs: The mapping between client and server IDs for this upsert.
    source:
      openapi: openapi/openapi.json
  UpsertCustomerCustomAttributeResponse:
    docs: >-
      Represents an
      [UpsertCustomerCustomAttribute](api-endpoint:CustomerCustomAttributes-UpsertCustomerCustomAttribute)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute:
        type: optional<CustomAttribute>
        docs: The new or updated custom attribute.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpsertLocationCustomAttributeResponse:
    docs: >-
      Represents an
      [UpsertLocationCustomAttribute](api-endpoint:LocationCustomAttributes-UpsertLocationCustomAttribute)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute:
        type: optional<CustomAttribute>
        docs: The new or updated custom attribute.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpsertMerchantCustomAttributeResponse:
    docs: >-
      Represents an
      [UpsertMerchantCustomAttribute](api-endpoint:MerchantCustomAttributes-UpsertMerchantCustomAttribute)
      response.

      Either `custom_attribute_definition` or `errors` is present in the
      response.
    properties:
      custom_attribute:
        type: optional<CustomAttribute>
        docs: The new or updated custom attribute.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpsertOrderCustomAttributeResponse:
    docs: Represents a response from upserting order custom attribute definitions.
    properties:
      custom_attribute:
        type: optional<CustomAttribute>
        docs: The order custom attribute that was created or modified.
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  UpsertSnippetResponse:
    docs: >-
      Represents an `UpsertSnippet` response. The response can include either
      `snippet` or `errors`.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
      snippet:
        type: optional<Snippet>
        docs: The new or updated snippet.
    source:
      openapi: openapi/openapi.json
  V1Money:
    properties:
      amount:
        type: optional<nullable<integer>>
        docs: >-
          Amount in the lowest denominated value of this Currency. E.g. in USD

          these are cents, in JPY they are Yen (which do not have a 'cent'
          concept).
      currency_code:
        type: optional<Currency>
        docs: |-

          See [Currency](#type-currency) for possible values
    source:
      openapi: openapi/openapi.json
  V1Order:
    docs: V1Order
    properties:
      errors:
        type: optional<nullable<list<Error>>>
        docs: Any errors that occurred during the request.
      id:
        type: optional<string>
        docs: The order's unique identifier.
      buyer_email:
        type: optional<nullable<string>>
        docs: The email address of the order's buyer.
      recipient_name:
        type: optional<nullable<string>>
        docs: The name of the order's buyer.
      recipient_phone_number:
        type: optional<nullable<string>>
        docs: The phone number to use for the order's delivery.
      state:
        type: optional<V1OrderState>
        docs: |-
          Whether the tax is an ADDITIVE tax or an INCLUSIVE tax.
          See [V1OrderState](#type-v1orderstate) for possible values
      shipping_address:
        type: optional<Address>
        docs: The address to ship the order to.
      subtotal_money:
        type: optional<V1Money>
        docs: >-
          The amount of all items purchased in the order, before taxes and
          shipping.
      total_shipping_money:
        type: optional<V1Money>
        docs: The shipping cost for the order.
      total_tax_money:
        type: optional<V1Money>
        docs: The total of all taxes applied to the order.
      total_price_money:
        type: optional<V1Money>
        docs: The total cost of the order.
      total_discount_money:
        type: optional<V1Money>
        docs: The total of all discounts applied to the order.
      created_at:
        type: optional<string>
        docs: The time when the order was created, in ISO 8601 format.
      updated_at:
        type: optional<string>
        docs: The time when the order was last modified, in ISO 8601 format.
      expires_at:
        type: optional<nullable<string>>
        docs: >-
          The time when the order expires if no action is taken, in ISO 8601
          format.
      payment_id:
        type: optional<nullable<string>>
        docs: The unique identifier of the payment associated with the order.
      buyer_note:
        type: optional<nullable<string>>
        docs: A note provided by the buyer when the order was created, if any.
      completed_note:
        type: optional<nullable<string>>
        docs: >-
          A note provided by the merchant when the order's state was set to
          COMPLETED, if any
      refunded_note:
        type: optional<nullable<string>>
        docs: >-
          A note provided by the merchant when the order's state was set to
          REFUNDED, if any.
      canceled_note:
        type: optional<nullable<string>>
        docs: >-
          A note provided by the merchant when the order's state was set to
          CANCELED, if any.
      tender:
        type: optional<V1Tender>
        docs: The tender used to pay for the order.
      order_history:
        type: optional<nullable<list<V1OrderHistoryEntry>>>
        docs: The history of actions associated with the order.
      promo_code:
        type: optional<nullable<string>>
        docs: The promo code provided by the buyer, if any.
      btc_receive_address:
        type: optional<nullable<string>>
        docs: For Bitcoin transactions, the address that the buyer sent Bitcoin to.
      btc_price_satoshi:
        type: optional<nullable<double>>
        docs: >-
          For Bitcoin transactions, the price of the buyer's order in satoshi
          (100 million satoshi equals 1 BTC).
    source:
      openapi: openapi/openapi.json
  V1OrderHistoryEntry:
    docs: V1OrderHistoryEntry
    properties:
      action:
        type: optional<V1OrderHistoryEntryAction>
        docs: >-
          The type of action performed on the order.

          See [V1OrderHistoryEntryAction](#type-v1orderhistoryentryaction) for
          possible values
      created_at:
        type: optional<string>
        docs: The time when the action was performed, in ISO 8601 format.
    source:
      openapi: openapi/openapi.json
  V1OrderHistoryEntryAction:
    enum:
      - ORDER_PLACED
      - DECLINED
      - PAYMENT_RECEIVED
      - CANCELED
      - COMPLETED
      - REFUNDED
      - EXPIRED
    source:
      openapi: openapi/openapi.json
  V1OrderState:
    enum:
      - PENDING
      - OPEN
      - COMPLETED
      - CANCELED
      - REFUNDED
      - REJECTED
    source:
      openapi: openapi/openapi.json
  V1Tender:
    docs: >-
      A tender represents a discrete monetary exchange. Square represents this

      exchange as a money object with a specific currency and amount, where the

      amount is given in the smallest denomination of the given currency.


      Square POS can accept more than one form of tender for a single payment
      (such

      as by splitting a bill between a credit card and a gift card). The
      `tender`

      field of the Payment object lists all forms of tender used for the
      payment.


      Split tender payments behave slightly differently from single tender
      payments:


      The receipt_url for a split tender corresponds only to the first tender
      listed

      in the tender field. To get the receipt URLs for the remaining tenders,
      use

      the receipt_url fields of the corresponding Tender objects.


      *A note on gift cards**: when a customer purchases a Square gift card from
      a

      merchant, the merchant receives the full amount of the gift card in the

      associated payment.


      When that gift card is used as a tender, the balance of the gift card is

      reduced and the merchant receives no funds. A `Tender` object with a type
      of

      `SQUARE_GIFT_CARD` indicates a gift card was used for some or all of the

      associated payment.
    properties:
      id:
        type: optional<string>
        docs: The tender's unique ID.
      type:
        type: optional<V1TenderType>
        docs: |-
          The type of tender.
          See [V1TenderType](#type-v1tendertype) for possible values
      name:
        type: optional<nullable<string>>
        docs: A human-readable description of the tender.
      employee_id:
        type: optional<nullable<string>>
        docs: The ID of the employee that processed the tender.
      receipt_url:
        type: optional<nullable<string>>
        docs: The URL of the receipt for the tender.
      card_brand:
        type: optional<V1TenderCardBrand>
        docs: |-
          The brand of credit card provided.
          See [V1TenderCardBrand](#type-v1tendercardbrand) for possible values
      pan_suffix:
        type: optional<nullable<string>>
        docs: The last four digits of the provided credit card's account number.
      entry_method:
        type: optional<V1TenderEntryMethod>
        docs: >-
          The tender's unique ID.

          See [V1TenderEntryMethod](#type-v1tenderentrymethod) for possible
          values
      payment_note:
        type: optional<nullable<string>>
        docs: >-
          Notes entered by the merchant about the tender at the time of payment,
          if any. Typically only present for tender with the type: OTHER.
      total_money:
        type: optional<V1Money>
        docs: The total amount of money provided in this form of tender.
      tendered_money:
        type: optional<V1Money>
        docs: The amount of total_money applied to the payment.
      tendered_at:
        type: optional<nullable<string>>
        docs: The time when the tender was created, in ISO 8601 format.
      settled_at:
        type: optional<nullable<string>>
        docs: The time when the tender was settled, in ISO 8601 format.
      change_back_money:
        type: optional<V1Money>
        docs: The amount of total_money returned to the buyer as change.
      refunded_money:
        type: optional<V1Money>
        docs: >-
          The total of all refunds applied to this tender. This amount is always
          negative or zero.
      is_exchange:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether or not the tender is associated with an exchange. If
          is_exchange is true, the tender represents the value of goods returned
          in an exchange not the actual money paid. The exchange value reduces
          the tender amounts needed to pay for items purchased in the exchange.
    source:
      openapi: openapi/openapi.json
  V1TenderCardBrand:
    enum:
      - OTHER_BRAND
      - VISA
      - MASTER_CARD
      - AMERICAN_EXPRESS
      - DISCOVER
      - DISCOVER_DINERS
      - JCB
      - CHINA_UNIONPAY
      - SQUARE_GIFT_CARD
    docs: The brand of a credit card.
    source:
      openapi: openapi/openapi.json
  V1TenderEntryMethod:
    enum:
      - MANUAL
      - SCANNED
      - SQUARE_CASH
      - SQUARE_WALLET
      - SWIPED
      - WEB_FORM
      - OTHER
    source:
      openapi: openapi/openapi.json
  V1TenderType:
    enum:
      - CREDIT_CARD
      - CASH
      - THIRD_PARTY_CARD
      - NO_SALE
      - SQUARE_WALLET
      - SQUARE_GIFT_CARD
      - UNKNOWN
      - OTHER
    source:
      openapi: openapi/openapi.json
  V1UpdateOrderRequestAction:
    enum:
      - COMPLETE
      - CANCEL
      - REFUND
    source:
      openapi: openapi/openapi.json
  Vendor:
    docs: Represents a supplier to a seller.
    properties:
      id:
        type: optional<string>
        docs: >-
          A unique Square-generated ID for the [Vendor](entity:Vendor).

          This field is required when attempting to update a
          [Vendor](entity:Vendor).
        validation:
          maxLength: 100
      created_at:
        type: optional<string>
        docs: |-
          An RFC 3339-formatted timestamp that indicates when the
          [Vendor](entity:Vendor) was created.
        validation:
          maxLength: 34
        access: read-only
      updated_at:
        type: optional<string>
        docs: |-
          An RFC 3339-formatted timestamp that indicates when the
          [Vendor](entity:Vendor) was last updated.
        validation:
          maxLength: 34
        access: read-only
      name:
        type: optional<nullable<string>>
        docs: >-
          The name of the [Vendor](entity:Vendor).

          This field is required when attempting to create or update a
          [Vendor](entity:Vendor).
        validation:
          maxLength: 100
      address:
        type: optional<Address>
        docs: The address of the [Vendor](entity:Vendor).
      contacts:
        type: optional<nullable<list<VendorContact>>>
        docs: The contacts of the [Vendor](entity:Vendor).
      account_number:
        type: optional<nullable<string>>
        docs: The account number of the [Vendor](entity:Vendor).
        validation:
          maxLength: 100
      note:
        type: optional<nullable<string>>
        docs: A note detailing information about the [Vendor](entity:Vendor).
        validation:
          maxLength: 4096
      version:
        type: optional<integer>
        docs: The version of the [Vendor](entity:Vendor).
      status:
        type: optional<VendorStatus>
        docs: |-
          The status of the [Vendor](entity:Vendor).
          See [Status](#type-status) for possible values
    source:
      openapi: openapi/openapi.json
  VendorContact:
    docs: Represents a contact of a [Vendor](entity:Vendor).
    properties:
      id:
        type: optional<string>
        docs: >-
          A unique Square-generated ID for the
          [VendorContact](entity:VendorContact).

          This field is required when attempting to update a
          [VendorContact](entity:VendorContact).
        validation:
          maxLength: 100
      name:
        type: optional<nullable<string>>
        docs: >-
          The name of the [VendorContact](entity:VendorContact).

          This field is required when attempting to create a
          [Vendor](entity:Vendor).
        validation:
          maxLength: 255
      email_address:
        type: optional<nullable<string>>
        docs: The email address of the [VendorContact](entity:VendorContact).
        validation:
          maxLength: 255
      phone_number:
        type: optional<nullable<string>>
        docs: The phone number of the [VendorContact](entity:VendorContact).
        validation:
          maxLength: 255
      removed:
        type: optional<nullable<boolean>>
        docs: The state of the [VendorContact](entity:VendorContact).
      ordinal:
        type: integer
        docs: The ordinal of the [VendorContact](entity:VendorContact).
    source:
      openapi: openapi/openapi.json
  VendorCreatedEvent:
    docs: Published when a [Vendor](entity:Vendor) is created.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of a seller associated with this event.
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of a location associated with the event, if the event is
          associated with the location of the seller.
      type:
        type: optional<nullable<string>>
        docs: The type of this event. The value is `"vendor.created".`
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for this event.
      created_at:
        type: optional<string>
        docs: >-
          The RFC 3339-formatted time when the underlying event data object is
          created.
        access: read-only
      data:
        type: optional<VendorCreatedEventData>
        docs: The data associated with this event.
    source:
      openapi: openapi/openapi.json
  VendorCreatedEventData:
    docs: Defines the `vendor.created` event data structure.
    properties:
      type:
        type: optional<nullable<string>>
        docs: The type of the event data object. The value is `vendor`
      id:
        type: optional<string>
        docs: The ID of the event data object.
      object:
        type: optional<VendorCreatedEventObject>
        docs: An object containing the created vendor.
    source:
      openapi: openapi/openapi.json
  VendorCreatedEventObject:
    properties:
      operation:
        type: optional<VendorCreatedEventObjectOperation>
        docs: >-
          The operation on the vendor that caused the event to be published. The
          value is `CREATED`.

          See [Operation](#type-operation) for possible values
      vendor:
        type: optional<Vendor>
        docs: The created vendor as the result of the specified operation.
    source:
      openapi: openapi/openapi.json
  VendorCreatedEventObjectOperation:
    type: literal<"CREATED">
    docs: >-
      The operation that can be performed against a vendor to cause the event to
      be published.
  VendorStatus:
    enum:
      - ACTIVE
      - INACTIVE
    docs: |-
      The status of the [Vendor](entity:Vendor),
      whether a [Vendor](entity:Vendor) is active or inactive.
    source:
      openapi: openapi/openapi.json
  VendorUpdatedEvent:
    docs: Published when a [Vendor](entity:Vendor) is updated.
    properties:
      merchant_id:
        type: optional<nullable<string>>
        docs: The ID of a seller associated with this event.
      location_id:
        type: optional<nullable<string>>
        docs: >-
          The ID of a seller location associated with this event, if the event
          is associated with the location.
      type:
        type: optional<nullable<string>>
        docs: The type of this event. The value is `"vendor.updated".`
      event_id:
        type: optional<nullable<string>>
        docs: A unique ID for this webhoook event.
      created_at:
        type: optional<string>
        docs: >-
          The RFC 3339-formatted time when the underlying event data object is
          created.
        access: read-only
      data:
        type: optional<VendorUpdatedEventData>
        docs: The data associated with this event.
    source:
      openapi: openapi/openapi.json
  VendorUpdatedEventData:
    docs: Defines the `vendor.updated` event data structure.
    properties:
      type:
        type: optional<nullable<string>>
        docs: The type of the event data object. The value is `vendor`.
      id:
        type: optional<string>
        docs: The ID of the event data object.
      object:
        type: optional<VendorUpdatedEventObject>
        docs: An object containing updated vendor.
    source:
      openapi: openapi/openapi.json
  VendorUpdatedEventObject:
    properties:
      operation:
        type: optional<VendorUpdatedEventObjectOperation>
        docs: >-
          The operation on the vendor that caused the event to be published. The
          value is `UPDATED`.

          See [Operation](#type-operation) for possible values
      vendor:
        type: optional<Vendor>
        docs: The updated vendor as the result of the specified operation.
    source:
      openapi: openapi/openapi.json
  VendorUpdatedEventObjectOperation:
    type: literal<"UPDATED">
    docs: >-
      The operation that can be performed against a vendor to cause the event to
      be published.
  VisibilityFilter:
    enum:
      - ALL
      - READ
      - READ_WRITE
    docs: >-
      Enumeration of visibility-filter values used to set the ability to view
      custom attributes or custom attribute definitions.
    source:
      openapi: openapi/openapi.json
  VoidTransactionResponse:
    docs: >-
      Defines the fields that are included in the response body of

      a request to the
      [VoidTransaction](api-endpoint:Transactions-VoidTransaction) endpoint.
    properties:
      errors:
        type: optional<list<Error>>
        docs: Any errors that occurred during the request.
    source:
      openapi: openapi/openapi.json
  WageSetting:
    docs: >-
      Represents information about the overtime exemption status, job
      assignments, and compensation

      for a [team member](entity:TeamMember).
    properties:
      team_member_id:
        type: optional<nullable<string>>
        docs: The ID of the team member associated with the wage setting.
      job_assignments:
        type: optional<nullable<list<JobAssignment>>>
        docs: >-
          **Required** The ordered list of jobs that the team member is assigned
          to.

          The first job assignment is considered the team member's primary job.
      is_overtime_exempt:
        type: optional<nullable<boolean>>
        docs: >-
          Whether the team member is exempt from the overtime rules of the
          seller's country.
      version:
        type: optional<integer>
        docs: >-
          **Read only** Used for resolving concurrency issues. The request fails
          if the version

          provided does not match the server version at the time of the request.
          If not provided,

          Square executes a blind write, potentially overwriting data from
          another write. For more information,

          see [optimistic
          concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency).
      created_at:
        type: optional<string>
        docs: The timestamp when the wage setting was created, in RFC 3339 format.
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp when the wage setting was last updated, in RFC 3339
          format.
        access: read-only
    source:
      openapi: openapi/openapi.json
  WebhookSubscription:
    docs: >-
      Represents the details of a webhook subscription, including notification
      URL,

      event types, and signature key.
    properties:
      id:
        type: optional<string>
        docs: A Square-generated unique ID for the subscription.
        validation:
          maxLength: 64
        access: read-only
      name:
        type: optional<nullable<string>>
        docs: The name of this subscription.
        validation:
          maxLength: 64
      enabled:
        type: optional<nullable<boolean>>
        docs: >-
          Indicates whether the subscription is enabled (`true`) or not
          (`false`).
      event_types:
        type: optional<nullable<list<string>>>
        docs: The event types associated with this subscription.
      notification_url:
        type: optional<nullable<string>>
        docs: The URL to which webhooks are sent.
      api_version:
        type: optional<nullable<string>>
        docs: |-
          The API version of the subscription.
          This field is optional for `CreateWebhookSubscription`. 
          The value defaults to the API version used by the application.
      signature_key:
        type: optional<string>
        docs: >-
          The Square-generated signature key used to validate the origin of the
          webhook event.
        access: read-only
      created_at:
        type: optional<string>
        docs: >-
          The timestamp of when the subscription was created, in RFC 3339
          format. For example, "2016-09-04T23:59:33.123Z".
        access: read-only
      updated_at:
        type: optional<string>
        docs: >-
          The timestamp of when the subscription was last updated, in RFC 3339
          format.

          For example, "2016-09-04T23:59:33.123Z".
        access: read-only
    source:
      openapi: openapi/openapi.json
  Weekday:
    enum:
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      - SUN
    docs: The days of the week.
    source:
      openapi: openapi/openapi.json
  WorkweekConfig:
    docs: |-
      Sets the day of the week and hour of the day that a business starts a
      workweek. This is used to calculate overtime pay.
    properties:
      id:
        type: optional<string>
        docs: The UUID for this object.
      start_of_week:
        type: Weekday
        docs: |-
          The day of the week on which a business week starts for
          compensation purposes.
          See [Weekday](#type-weekday) for possible values
      start_of_day_local_time:
        type: string
        docs: |-
          The local time at which a business week starts. Represented as a
          string in `HH:MM` format (`HH:MM:SS` is also accepted, but seconds are
          truncated).
        validation:
          minLength: 1
      version:
        type: optional<integer>
        docs: >-
          Used for resolving concurrency issues. The request fails if the
          version

          provided does not match the server version at the time of the request.
          If not provided,

          Square executes a blind write; potentially overwriting data from
          another

          write.
      created_at:
        type: optional<string>
        docs: A read-only timestamp in RFC 3339 format; presented in UTC.
        access: read-only
      updated_at:
        type: optional<string>
        docs: A read-only timestamp in RFC 3339 format; presented in UTC.
        access: read-only
    source:
      openapi: openapi/openapi.json
  CatalogObjectBase:
    properties:
      type:
        type: CatalogObjectType
        docs: >-
          The type of this object. Each object type has expected

          properties expressed in a structured format within its corresponding
          `*_data` field below.

          See [CatalogObjectType](#type-catalogobjecttype) for possible values
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
        access: read-only
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectItem:
    properties:
      type: literal<"ITEM">
      item_data:
        type: optional<CatalogItem>
        docs: >-
          Structured data for a `CatalogItem`, set for CatalogObjects of type
          `ITEM`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectImage:
    properties:
      type: literal<"IMAGE">
      image_data:
        type: optional<CatalogImage>
        docs: >-
          Structured data for a `CatalogImage`, set for CatalogObjects of type
          `IMAGE`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectItemVariation:
    properties:
      type: literal<"ITEM_VARIATION">
      item_variation_data:
        type: optional<CatalogItemVariation>
        docs: >-
          Structured data for a `CatalogItemVariation`, set for CatalogObjects
          of type `ITEM_VARIATION`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectTax:
    properties:
      type: literal<"TAX">
      tax_data:
        type: optional<CatalogTax>
        docs: >-
          Structured data for a `CatalogTax`, set for CatalogObjects of type
          `TAX`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectDiscount:
    properties:
      type: literal<"DISCOUNT">
      discount_data:
        type: optional<CatalogDiscount>
        docs: >-
          Structured data for a `CatalogDiscount`, set for CatalogObjects of
          type `DISCOUNT`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectModifierList:
    properties:
      type: literal<"MODIFIER_LIST">
      modifier_list_data:
        type: optional<CatalogModifierList>
        docs: >-
          Structured data for a `CatalogModifierList`, set for CatalogObjects of
          type `MODIFIER_LIST`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectModifier:
    properties:
      type: literal<"MODIFIER">
      modifier_data:
        type: optional<CatalogModifier>
        docs: >-
          Structured data for a `CatalogModifier`, set for CatalogObjects of
          type `MODIFIER`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectPricingRule:
    properties:
      type: literal<"PRICING_RULE">
      pricing_rule_data:
        type: optional<CatalogPricingRule>
        docs: >-
          Structured data for a `CatalogPricingRule`, set for CatalogObjects of
          type `PRICING_RULE`.

          A `CatalogPricingRule` object often works with a `CatalogProductSet`
          object or a `CatalogTimePeriod` object.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectProductSet:
    properties:
      type: literal<"PRODUCT_SET">
      product_set_data:
        type: optional<CatalogProductSet>
        docs: >-
          Structured data for a `CatalogProductSet`, set for CatalogObjects of
          type `PRODUCT_SET`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectTimePeriod:
    properties:
      type: literal<"TIME_PERIOD">
      time_period_data:
        type: optional<CatalogTimePeriod>
        docs: >-
          Structured data for a `CatalogTimePeriod`, set for CatalogObjects of
          type `TIME_PERIOD`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectMeasurementUnit:
    properties:
      type: literal<"MEASUREMENT_UNIT">
      measurement_unit_data:
        type: optional<CatalogMeasurementUnit>
        docs: >-
          Structured data for a `CatalogMeasurementUnit`, set for CatalogObjects
          of type `MEASUREMENT_UNIT`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectSubscriptionPlanVariation:
    properties:
      type: literal<"SUBSCRIPTION_PLAN_VARIATION">
      subscription_plan_variation_data:
        type: optional<CatalogSubscriptionPlanVariation>
        docs: >-
          Structured data for a `CatalogSubscriptionPlanVariation`, set for
          CatalogObjects of type `SUBSCRIPTION_PLAN_VARIATION`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectItemOption:
    properties:
      type: literal<"ITEM_OPTION">
      item_option_data:
        type: optional<CatalogItemOption>
        docs: >-
          Structured data for a `CatalogItemOption`, set for CatalogObjects of
          type `ITEM_OPTION`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectItemOptionValue:
    properties:
      type: literal<"ITEM_OPTION_VAL">
      item_option_value_data:
        type: optional<CatalogItemOptionValue>
        docs: >-
          Structured data for a `CatalogItemOptionValue`, set for CatalogObjects
          of type `ITEM_OPTION_VAL`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectCustomAttributeDefinition:
    properties:
      type: literal<"CUSTOM_ATTRIBUTE_DEFINITION">
      custom_attribute_definition_data:
        type: optional<CatalogCustomAttributeDefinition>
        docs: >-
          Structured data for a `CatalogCustomAttributeDefinition`, set for
          CatalogObjects of type `CUSTOM_ATTRIBUTE_DEFINITION`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectQuickAmountsSettings:
    properties:
      type: literal<"QUICK_AMOUNTS_SETTINGS">
      quick_amounts_settings_data:
        type: optional<CatalogQuickAmountsSettings>
        docs: >-
          Structured data for a `CatalogQuickAmountsSettings`, set for
          CatalogObjects of type `QUICK_AMOUNTS_SETTINGS`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectSubscriptionPlan:
    properties:
      type: literal<"SUBSCRIPTION_PLAN">
      subscription_plan_data:
        type: optional<CatalogSubscriptionPlan>
        docs: >-
          Structured data for a `CatalogSubscriptionPlan`, set for
          CatalogObjects of type `SUBSCRIPTION_PLAN`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  CatalogObjectAvailabilityPeriod:
    properties:
      type: literal<"AVAILABILITY_PERIOD">
      availability_period_data:
        type: optional<CatalogAvailabilityPeriod>
        docs: >-
          Structured data for a `CatalogAvailabilityPeriod`, set for
          CatalogObjects of type `AVAILABILITY_PERIOD`.
      id:
        type: string
        docs: >-
          An identifier to reference this object in the catalog. When a new
          `CatalogObject`

          is inserted, the client should set the id to a temporary identifier
          starting with

          a "`#`" character. Other objects being inserted or updated within the
          same request

          may use this identifier to refer to the new object.


          When the server receives the new object, it will supply a unique
          identifier that

          replaces the temporary identifier for all future references.
        validation:
          minLength: 1
      updated_at:
        type: optional<string>
        docs: >-
          Last modification
          [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
          in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`

          would indicate the UTC time (denoted by `Z`) of August 15, 2016 at
          23:59:33 and 123 milliseconds.
      version:
        type: optional<long>
        docs: >-
          The version of the object. When updating an object, the version
          supplied

          must match the version in the database, otherwise the write will be
          rejected as conflicting.
      is_deleted:
        type: optional<boolean>
        docs: >-
          If `true`, the object has been deleted from the database. Must be
          `false` for new objects

          being inserted. When deleted, the `updated_at` field will equal the
          deletion time.
      custom_attribute_values:
        type: optional<map<string, CatalogCustomAttributeValue>>
        docs: >-
          A map (key-value pairs) of application-defined custom attribute
          values. The value of a key-value pair

          is a [CatalogCustomAttributeValue](entity:CatalogCustomAttributeValue)
          object. The key is the `key` attribute

          value defined in the associated
          [CatalogCustomAttributeDefinition](entity:CatalogCustomAttributeDefinition)

          object defined by the application making the request.


          If the `CatalogCustomAttributeDefinition` object is

          defined by another application, the
          `CatalogCustomAttributeDefinition`'s key attribute value is prefixed
          by

          the defining application ID. For example, if the
          `CatalogCustomAttributeDefinition` has a `key` attribute of

          `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the
          key in the map is `"abcd1234:cocoa_brand"`

          if the application making the request is different from the
          application defining the custom attribute definition.

          Otherwise, the key used in the map is simply `"cocoa_brand"`.


          Application-defined custom attributes are set at a global
          (location-independent) level.

          Custom attribute values are intended to store additional information
          about a catalog object

          or associations with an entity in another system. Do not use custom
          attributes

          to store any sensitive information (personally identifiable
          information, card details, etc.).
      catalog_v1_ids:
        type: optional<list<CatalogV1Id>>
        docs: >-
          The Connect v1 IDs for this object at each location where it is
          present, where they

          differ from the object's Connect V2 ID. The field will only be present
          for objects that

          have been created or modified by legacy APIs.
      present_at_all_locations:
        type: optional<boolean>
        docs: >-
          If `true`, this object is present at all locations (including future
          locations), except where specified in

          the `absent_at_location_ids` field. If `false`, this object is not
          present at any locations (including future locations),

          except where specified in the `present_at_location_ids` field. If not
          specified, defaults to `true`.
      present_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is present, even if
          `present_at_all_locations` is `false`.

          This can include locations that are deactivated.
      absent_at_location_ids:
        type: optional<list<string>>
        docs: >-
          A list of locations where the object is not present, even if
          `present_at_all_locations` is `true`.

          This can include locations that are deactivated.
      image_id:
        type: optional<string>
        docs: Identifies the `CatalogImage` attached to this `CatalogObject`.
    source:
      openapi: openapi/openapi.json
  GetLoyaltyAccountRequest: unknown
  GetLoyaltyProgramRequest: unknown
  GetLoyaltyPromotionRequest: unknown
  GetLoyaltyRewardRequest: unknown
  GetCardRequest: unknown
  GetDisputeEvidenceRequest: unknown
  GetDisputeRequest: unknown
  V1GetPaymentRequest: unknown
  V1GetSettlementRequest: unknown
  GetCustomerGroupRequest: unknown
  GetCustomerRequest: unknown
  GetCustomerSegmentRequest: unknown
  GetTransactionRequest: unknown
  GetBookingRequest: unknown
  GetBusinessBookingProfileRequest: unknown
  GetTeamMemberBookingProfileRequest: unknown
  GetSnippetRequest: unknown
  GetInventoryAdjustmentRequest: unknown
  GetInventoryPhysicalCountRequest: unknown
  GetInventoryTransferRequest: unknown
  GetVendorRequest: unknown
  GetPaymentLinkRequest: unknown
  GetGiftCardRequest: unknown
  GetOrderRequest: unknown
  GetEmployeeRequest: unknown
  GetLocationRequest: unknown
  GetMerchantRequest: unknown
  GetTeamMemberRequest: unknown
  GetWageSettingRequest: unknown
  GetWebhookSubscriptionRequest: unknown
