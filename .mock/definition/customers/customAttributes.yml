imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /v2/customers/{customer_id}/custom-attributes
      method: GET
      auth: true
      docs: >-
        Lists the [custom attributes](entity:CustomAttribute) associated with a
        customer profile.


        You can use the `with_definitions` query parameter to also retrieve
        custom attribute definitions

        in the same call.


        When all response pages are retrieved, the results include all custom
        attributes that are

        visible to the requesting application, including those that are owned by
        other applications

        and set to `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`.
      pagination:
        cursor: $request.cursor
        next_cursor: $response.cursor
        results: $response.custom_attributes
      source:
        openapi: openapi/openapi.json
      display-name: ListCustomerCustomAttributes
      request:
        name: ListCustomAttributesRequest
        path-parameters:
          customer_id:
            type: string
            docs: The ID of the target [customer profile](entity:Customer).
        query-parameters:
          limit:
            type: optional<nullable<integer>>
            docs: >-
              The maximum number of results to return in a single paged
              response. This limit is advisory.

              The response might contain more or fewer results. The minimum
              value is 1 and the maximum value is 100.

              The default value is 20. For more information, see
              [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
          cursor:
            type: optional<nullable<string>>
            docs: >-
              The cursor returned in the paged response from the previous call
              to this endpoint.

              Provide this cursor to retrieve the next page of results for your
              original request. For more

              information, see
              [Pagination](https://developer.squareup.com/docs/build-basics/common-api-patterns/pagination).
          with_definitions:
            type: optional<nullable<boolean>>
            default: false
            docs: >-
              Indicates whether to return the [custom attribute
              definition](entity:CustomAttributeDefinition) in the `definition`
              field of each

              custom attribute. Set this parameter to `true` to get the name and
              description of each custom

              attribute, information about the data type, or other definition
              details. The default value is `false`.
      response:
        docs: Success
        type: root.ListCustomerCustomAttributesResponse
        status-code: 200
      examples:
        - path-parameters:
            customer_id: customer_id
          response:
            body:
              custom_attributes:
                - key: favoritemovie
                  value: Dune
                  version: 1
                  visibility: VISIBILITY_READ_ONLY
                  updated_at: '2022-04-26T15:50:27Z'
                  created_at: '2022-04-26T15:50:27Z'
                - key: ownsmovie
                  value: false
                  version: 1
                  visibility: VISIBILITY_HIDDEN
                  updated_at: '2022-04-26T15:51:53Z'
                  created_at: '2022-04-26T15:51:53Z'
              cursor: cursor
              errors:
                - category: API_ERROR
                  code: INTERNAL_SERVER_ERROR
                  detail: detail
                  field: field
    get:
      path: /v2/customers/{customer_id}/custom-attributes/{key}
      method: GET
      auth: true
      docs: >-
        Retrieves a [custom attribute](entity:CustomAttribute) associated with a
        customer profile.


        You can use the `with_definition` query parameter to also retrieve the
        custom attribute definition

        in the same call.


        To retrieve a custom attribute owned by another application, the
        `visibility` setting must be

        `VISIBILITY_READ_ONLY` or `VISIBILITY_READ_WRITE_VALUES`. Note that
        seller-defined custom attributes

        (also known as custom fields) are always set to
        `VISIBILITY_READ_WRITE_VALUES`.
      source:
        openapi: openapi/openapi.json
      display-name: RetrieveCustomerCustomAttribute
      request:
        name: GetCustomAttributesRequest
        path-parameters:
          customer_id:
            type: string
            docs: The ID of the target [customer profile](entity:Customer).
          key:
            type: string
            docs: >-
              The key of the custom attribute to retrieve. This key must match
              the `key` of a custom

              attribute definition in the Square seller account. If the
              requesting application is not the

              definition owner, you must use the qualified key.
        query-parameters:
          with_definition:
            type: optional<nullable<boolean>>
            default: false
            docs: >-
              Indicates whether to return the [custom attribute
              definition](entity:CustomAttributeDefinition) in the `definition`
              field of

              the custom attribute. Set this parameter to `true` to get the name
              and description of the custom

              attribute, information about the data type, or other definition
              details. The default value is `false`.
          version:
            type: optional<nullable<integer>>
            docs: >-
              The current version of the custom attribute, which is used for
              strongly consistent reads to

              guarantee that you receive the most up-to-date data. When included
              in the request, Square

              returns the specified version or a higher version if one exists.
              If the specified version is

              higher than the current version, Square returns a `BAD_REQUEST`
              error.
      response:
        docs: Success
        type: root.GetCustomerCustomAttributeResponse
        status-code: 200
      examples:
        - path-parameters:
            customer_id: customer_id
            key: key
          response:
            body:
              custom_attribute:
                key: favoritemovie
                value: Dune
                version: 1
                visibility: VISIBILITY_READ_ONLY
                definition:
                  key: key
                  schema:
                    key: value
                  name: name
                  description: description
                  visibility: VISIBILITY_HIDDEN
                  version: 1
                  updated_at: updated_at
                  created_at: created_at
                updated_at: '2022-04-26T15:50:27Z'
                created_at: '2022-04-26T15:50:27Z'
              errors:
                - category: API_ERROR
                  code: INTERNAL_SERVER_ERROR
                  detail: detail
                  field: field
    upsert:
      path: /v2/customers/{customer_id}/custom-attributes/{key}
      method: POST
      auth: true
      docs: >-
        Creates or updates a [custom attribute](entity:CustomAttribute) for a
        customer profile.


        Use this endpoint to set the value of a custom attribute for a specified
        customer profile.

        A custom attribute is based on a custom attribute definition in a Square
        seller account, which

        is created using the
        [CreateCustomerCustomAttributeDefinition](api-endpoint:CustomerCustomAttributes-CreateCustomerCustomAttributeDefinition)
        endpoint.


        To create or update a custom attribute owned by another application, the
        `visibility` setting

        must be `VISIBILITY_READ_WRITE_VALUES`. Note that seller-defined custom
        attributes

        (also known as custom fields) are always set to
        `VISIBILITY_READ_WRITE_VALUES`.
      source:
        openapi: openapi/openapi.json
      display-name: UpsertCustomerCustomAttribute
      request:
        name: UpsertCustomerCustomAttributeRequest
        path-parameters:
          customer_id:
            type: string
            docs: The ID of the target [customer profile](entity:Customer).
          key:
            type: string
            docs: >-
              The key of the custom attribute to create or update. This key must
              match the `key` of a

              custom attribute definition in the Square seller account. If the
              requesting application is not

              the definition owner, you must use the qualified key.
        body:
          properties:
            custom_attribute:
              type: root.CustomAttribute
              docs: >-
                The custom attribute to create or update, with the following
                fields:


                - `value`. This value must conform to the `schema` specified by
                the definition. 

                For more information, see [Value data
                types](https://developer.squareup.com/docs/customer-custom-attributes-api/custom-attributes#value-data-types).


                - `version`. To enable [optimistic
                concurrency](https://developer.squareup.com/docs/build-basics/common-api-patterns/optimistic-concurrency)

                control for an update operation, include this optional field and
                specify the current version

                of the custom attribute.
            idempotency_key:
              type: optional<nullable<string>>
              docs: >-
                A unique identifier for this request, used to ensure
                idempotency. For more information,

                see
                [Idempotency](https://developer.squareup.com/docs/build-basics/common-api-patterns/idempotency).
              validation:
                maxLength: 45
        content-type: application/json
      response:
        docs: Success
        type: root.UpsertCustomerCustomAttributeResponse
        status-code: 200
      examples:
        - path-parameters:
            customer_id: customer_id
            key: key
          request:
            custom_attribute:
              value: Dune
          response:
            body:
              custom_attribute:
                key: favoritemovie
                value: Dune
                version: 1
                visibility: VISIBILITY_READ_ONLY
                definition:
                  key: key
                  schema:
                    key: value
                  name: name
                  description: description
                  visibility: VISIBILITY_HIDDEN
                  version: 1
                  updated_at: updated_at
                  created_at: created_at
                updated_at: '2022-04-26T15:50:27Z'
                created_at: '2022-04-26T15:50:27Z'
              errors:
                - category: API_ERROR
                  code: INTERNAL_SERVER_ERROR
                  detail: detail
                  field: field
    delete:
      path: /v2/customers/{customer_id}/custom-attributes/{key}
      method: DELETE
      auth: true
      docs: >-
        Deletes a [custom attribute](entity:CustomAttribute) associated with a
        customer profile.


        To delete a custom attribute owned by another application, the
        `visibility` setting must be

        `VISIBILITY_READ_WRITE_VALUES`. Note that seller-defined custom
        attributes

        (also known as custom fields) are always set to
        `VISIBILITY_READ_WRITE_VALUES`.
      source:
        openapi: openapi/openapi.json
      display-name: DeleteCustomerCustomAttribute
      request:
        name: DeleteCustomAttributesRequest
        path-parameters:
          customer_id:
            type: string
            docs: The ID of the target [customer profile](entity:Customer).
          key:
            type: string
            docs: >-
              The key of the custom attribute to delete. This key must match the
              `key` of a custom

              attribute definition in the Square seller account. If the
              requesting application is not the

              definition owner, you must use the qualified key.
      response:
        docs: Success
        type: root.DeleteCustomerCustomAttributeResponse
        status-code: 200
      examples:
        - path-parameters:
            customer_id: customer_id
            key: key
          response:
            body:
              errors:
                - category: API_ERROR
                  code: INTERNAL_SERVER_ERROR
                  detail: detail
                  field: field
  source:
    openapi: openapi/openapi.json
