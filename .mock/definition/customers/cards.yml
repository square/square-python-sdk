imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /v2/customers/{customer_id}/cards
      method: POST
      auth: true
      docs: >-
        Adds a card on file to an existing customer.


        As with charges, calls to `CreateCustomerCard` are idempotent. Multiple

        calls with the same card nonce return the same card record that was
        created

        with the provided nonce during the _first_ call.
      source:
        openapi: openapi/openapi.json
      display-name: CreateCustomerCard
      request:
        name: CreateCustomerCardRequest
        path-parameters:
          customer_id:
            type: string
            docs: The Square ID of the customer profile the card is linked to.
        body:
          properties:
            card_nonce:
              type: string
              docs: >-
                A card nonce representing the credit card to link to the
                customer.


                Card nonces are generated by the Square payment form when
                customers enter

                their card information. For more information, see

                [Walkthrough: Integrate Square Payments in a
                Website](https://developer.squareup.com/docs/web-payments/take-card-payment).


                __NOTE:__ Card nonces generated by digital wallets (such as
                Apple Pay)

                cannot be used to create a customer card.
            billing_address:
              type: optional<root.Address>
              docs: >-
                Address information for the card on file.


                __NOTE:__ If a billing address is provided in the request, the

                `CreateCustomerCardRequest.billing_address.postal_code` must
                match

                the postal code encoded in the card nonce.
            cardholder_name:
              type: optional<string>
              docs: The full name printed on the credit card.
            verification_token:
              type: optional<string>
              docs: >-
                An identifying token generated by
                [Payments.verifyBuyer()](https://developer.squareup.com/reference/sdks/web/payments/objects/Payments#Payments.verifyBuyer).

                Verification tokens encapsulate customer device information and
                3-D Secure

                challenge results to indicate that Square has verified the buyer
                identity.
        content-type: application/json
      response:
        docs: Success
        type: root.CreateCustomerCardResponse
        status-code: 200
      availability: deprecated
      examples:
        - path-parameters:
            customer_id: customer_id
          request:
            card_nonce: YOUR_CARD_NONCE
            billing_address:
              address_line_1: 500 Electric Ave
              address_line_2: Suite 600
              locality: New York
              administrative_district_level_1: NY
              postal_code: '10003'
              country: US
            cardholder_name: Amelia Earhart
          response:
            body:
              errors:
                - category: API_ERROR
                  code: INTERNAL_SERVER_ERROR
                  detail: detail
                  field: field
              card:
                id: icard-card_id
                card_brand: VISA
                last_4: '1111'
                exp_month: 11
                exp_year: 2018
                cardholder_name: Amelia Earhart
                billing_address:
                  address_line_1: 500 Electric Ave
                  address_line_2: Suite 600
                  address_line_3: address_line_3
                  locality: New York
                  sublocality: sublocality
                  sublocality_2: sublocality_2
                  sublocality_3: sublocality_3
                  administrative_district_level_1: NY
                  administrative_district_level_2: administrative_district_level_2
                  administrative_district_level_3: administrative_district_level_3
                  postal_code: '10003'
                  country: US
                  first_name: first_name
                  last_name: last_name
                fingerprint: fingerprint
                customer_id: customer_id
                merchant_id: merchant_id
                reference_id: reference_id
                enabled: true
                card_type: UNKNOWN_CARD_TYPE
                prepaid_type: UNKNOWN_PREPAID_TYPE
                bin: bin
                version: 1000000
                card_co_brand: UNKNOWN
                issuer_alert: ISSUER_ALERT_CARD_CLOSED
                issuer_alert_at: issuer_alert_at
                hsa_fsa: true
    delete:
      path: /v2/customers/{customer_id}/cards/{card_id}
      method: DELETE
      auth: true
      docs: Removes a card on file from a customer.
      source:
        openapi: openapi/openapi.json
      display-name: DeleteCustomerCard
      request:
        name: DeleteCardsRequest
        path-parameters:
          customer_id:
            type: string
            docs: The ID of the customer that the card on file belongs to.
          card_id:
            type: string
            docs: The ID of the card on file to delete.
      response:
        docs: Success
        type: root.DeleteCustomerCardResponse
        status-code: 200
      availability: deprecated
      examples:
        - path-parameters:
            customer_id: customer_id
            card_id: card_id
          response:
            body:
              errors:
                - category: API_ERROR
                  code: INTERNAL_SERVER_ERROR
                  detail: detail
                  field: field
  source:
    openapi: openapi/openapi.json
